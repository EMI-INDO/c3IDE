"use strict";
{
	const C3 = globalThis.C3;

	C3.Plugins.{{addon_id}}.Instance = class {{class}}Instance extends globalThis.ISDKInstanceBase
	{
		constructor()
        {
            super();
			
			const properties = this._getInitProperties();
			if (properties)
			{
			}
		}
		
		_release()
	{
		
		super._release();
	}
		
		_saveToJson()
	{
		return {
			// data to be saved for savegames
		};
	}


_setTestProperty(n)
	{
		this._testProperty = n;
	}


_getTestProperty()
	{
		return this._testProperty;
	}
		
		_loadFromJson(o)
		{
			// load state for savegames
		}

        GetDebuggerProperties()
		{
			return [{
				title: "{{class}}",
				properties: [
					//{name: ".current-animation",	value: this._currentAnimation.GetName(),	onedit: v => this.CallAction(Acts.SetAnim, v, 0) },
				]
			}];
		}

		// timeline support
		GetPropertyValueByIndex(index)
		{
			return 0;
		}

		SetPropertyValueByIndex(index, value)
		{
			//set property value here
		}
	};
}
