{"Id":"84a26eea-419d-4056-82f0-5a623c38cb9c","Name":"Chance","Class":"Chance","Company":"Piranha305","Author":"Piranha305","Version":"1.0.0.0","Description":"Uses chance.js to help generate random stuff (strings, int, etc...)","AddonFolder":"C:\\Users\\arman\\AppData\\Roaming\\C3IDE_DATA\\Server\\Test\\chance","AddonCategory":"other","Type":0,"TypeName":"(Plugin)","IconXml":"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\r\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 423.757 423.757\" style=\"enable-background:new 0 0 423.757 423.757;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M189.294,385.219l112.522,38.538l98.514-98.509l-113.3-37.765L189.294,385.219z M239.962,379.203\r\n\t\t\tc-5.96,5.96-15.672,8.54-21.699,5.76c-6.021-2.78-6.077-9.861-0.113-15.821c5.96-5.96,15.672-8.54,21.699-5.76\r\n\t\t\tC245.875,366.162,245.921,373.243,239.962,379.203z M276.298,391.931c-5.96,5.96-15.672,8.54-21.699,5.76\r\n\t\t\tc-6.021-2.78-6.077-9.861-0.113-15.821c5.965-5.96,15.672-8.54,21.699-5.76C282.207,378.89,282.258,385.971,276.298,391.931z\r\n\t\t\t M349.56,334.94c5.96-5.96,15.672-8.54,21.699-5.76c6.021,2.78,6.077,9.861,0.118,15.821s-15.672,8.54-21.699,5.76\r\n\t\t\tS343.601,340.9,349.56,334.94z M313.331,323.031c5.96-5.96,15.672-8.54,21.699-5.76c6.021,2.78,6.077,9.861,0.113,15.821\r\n\t\t\tc-5.96,5.96-15.672,8.54-21.699,5.76C307.423,336.072,307.372,328.991,313.331,323.031z M312.415,388.019\r\n\t\t\tc6.021,2.78,6.077,9.861,0.113,15.821c-5.96,5.96-15.672,8.54-21.699,5.76s-6.077-9.861-0.118-15.821\r\n\t\t\tC296.676,387.825,306.388,385.244,312.415,388.019z M298.693,304.538c6.021,2.78,6.077,9.861,0.113,15.821\r\n\t\t\tc-5.96,5.96-15.672,8.54-21.699,5.76c-6.021-2.78-6.077-9.861-0.113-15.821C282.954,304.338,292.667,301.763,298.693,304.538z\"/>\r\n\t\t<path d=\"M402.158,311.634l-37.202-111.611l-111.611-37.207l37.202,111.606L402.158,311.634z M319.281,224.118\r\n\t\t\tc4.168-4.168,12.544-2.555,18.708,3.61s7.782,14.541,3.61,18.708c-4.168,4.168-12.544,2.555-18.708-3.61\r\n\t\t\tC316.726,236.662,315.108,228.285,319.281,224.118z\"/>\r\n\t\t<path d=\"M135.171,0L29.939,52.613l105.231,52.613l105.226-52.613L135.171,0z M135.171,63.288c-8.714,0-15.785-4.782-15.785-10.675\r\n\t\t\tc0-5.898,7.066-10.675,15.785-10.675s15.785,4.782,15.785,10.675C150.95,58.511,143.885,63.288,135.171,63.288z\"/>\r\n\t\t<path d=\"M162.22,201.728c5.028-1.853,9.231,1.08,10.685,6.702l63.022-63.022l12.805,4.27V63.529l-106.819,53.412v122.481\r\n\t\t\tl10.798-10.798c-1.101-1.951-1.761-4.48-1.761-7.475C150.95,212.716,155.999,204.022,162.22,201.728z M230.956,86.866\r\n\t\t\tc6.226-2.294,11.269,2.678,11.269,11.105c0,8.427-5.043,17.121-11.269,19.415c-6.226,2.294-11.269-2.678-11.269-11.105\r\n\t\t\tC219.686,97.853,224.73,89.16,230.956,86.866z M198.843,142.003c6.226-2.294,11.269,2.678,11.269,11.105\r\n\t\t\tc0,8.427-5.043,17.121-11.269,19.415c-6.226,2.294-11.269-2.678-11.269-11.105C187.574,152.991,192.622,144.297,198.843,142.003z\r\n\t\t\t M150.95,140.175c0-8.427,5.043-17.121,11.269-19.415c6.226-2.294,11.269,2.678,11.269,11.105c0,8.428-5.043,17.121-11.269,19.415\r\n\t\t\tC155.994,153.574,150.95,148.603,150.95,140.175z\"/>\r\n\t\t<path d=\"M21.599,202.839l105.313,51.579l1.51-1.51V116.941L21.599,63.529V202.839z M107.855,201.728\r\n\t\t\tc6.226,2.294,11.269,10.988,11.269,19.415s-5.043,13.399-11.269,11.105c-6.226-2.294-11.269-10.988-11.269-19.415\r\n\t\t\tC96.586,204.406,101.635,199.434,107.855,201.728z M75.011,140.298c6.226,2.294,11.269,10.987,11.269,19.415\r\n\t\t\tc0,8.427-5.043,13.399-11.269,11.105c-6.226-2.294-11.269-10.988-11.269-19.415C63.741,142.976,68.79,138.004,75.011,140.298z\r\n\t\t\t M41.208,86.866c6.226,2.294,11.269,10.987,11.269,19.415c0,8.427-5.043,13.399-11.269,11.105\r\n\t\t\tc-6.226-2.294-11.269-10.987-11.269-19.415C29.939,89.544,34.982,84.572,41.208,86.866z\"/>\r\n\t\t<path d=\"M239.726,164.639l-98.514,98.504l38.543,112.533l97.736-97.746L239.726,164.639z M197.655,338.565\r\n\t\t\tc-5.96,5.96-13.046,5.909-15.821-0.118c-2.775-6.026-0.2-15.739,5.76-21.699c5.96-5.96,13.046-5.909,15.821,0.113\r\n\t\t\tC206.19,322.883,203.615,332.605,197.655,338.565z M230.525,221.773c-5.96,5.96-13.046,5.908-15.821-0.113\r\n\t\t\tc-2.78-6.021-0.2-15.739,5.76-21.699c5.96-5.96,13.046-5.908,15.821,0.113C239.066,206.1,236.485,215.813,230.525,221.773z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>","IconImage":"System.Windows.Media.Imaging.BitmapImage","CreateDate":"2019-02-26T07:44:41.639-05:00","LastModified":"2019-03-06T06:33:41.95-05:00","ChangeDate":"2019-03-06, 06:33","AddonJson":"{\r\n  \"is-c3-addon\": true,\r\n  \"type\": \"plugin\",\r\n  \"name\": \"Chance\",\r\n  \"id\": \"Piranha305_Chance\",\r\n  \"version\": \"1.0.0.0\",\r\n  \"author\": \"Piranha305\",\r\n  \"website\": \"https://www.construct.net\",\r\n  \"documentation\": \"https://www.construct.net\",\r\n  \"description\": \"Uses chance.js to help generate random stuff (strings, int, etc...)\",\r\n  \"editor-scripts\": [\r\n    \"plugin.js\",\r\n    \"type.js\",\r\n    \"instance.js\"\r\n  ],\r\n  \"file-list\": [\r\n    \"c3runtime/chance.js\",\r\n    \"c3runtime/plugin.js\",\r\n    \"c3runtime/type.js\",\r\n    \"c3runtime/instance.js\",\r\n    \"c3runtime/conditions.js\",\r\n    \"c3runtime/actions.js\",\r\n    \"c3runtime/expressions.js\",\r\n    \"lang/en-US.json\",\r\n    \"aces.json\",\r\n    \"addon.json\",\r\n    \"icon.svg\",\r\n    \"instance.js\",\r\n    \"plugin.js\",\r\n    \"type.js\"\r\n  ]\r\n}","PluginEditTime":"\"use strict\";\n{\n\n    const PLUGIN_ID = \"Piranha305_Chance\";\n    const PLUGIN_VERSION = \"1.0.0.0\";\n    const PLUGIN_CATEGORY = \"general\";\n\n    const PLUGIN_CLASS = SDK.Plugins.Piranha305_Chance = class ChancePlugin extends SDK.IPluginBase\n    {\n        constructor()\n        {\n            super(PLUGIN_ID);\n\n            SDK.Lang.PushContext(\"plugins.\" + PLUGIN_ID.toLowerCase());\n\n            this._info.SetName(lang(\".name\"));\n            this._info.SetDescription(lang(\".description\"));\n            this._info.SetVersion(PLUGIN_VERSION);\n            this._info.SetCategory(PLUGIN_CATEGORY);\n            this._info.SetAuthor(\"Piranha305\");\n            this._info.SetHelpUrl(lang(\".help-url\"));\n            this._info.SetIsSingleGlobal(true);\n\n            this._info.SetSupportedRuntimes([\"c3\"]);\n\n            SDK.Lang.PushContext(\".properties\");\n\n            this._info.SetProperties([\n                new SDK.PluginProperty(\"check\", \"use-seed\", false),\n                new SDK.PluginProperty(\"integer\", \"seed\", 0)\n            ]);\n\n            this._info.AddFileDependency(\n            {\n                filename: \"c3runtime/chance.js\",\n                type: \"inline-script\"\n            });\n\n            SDK.Lang.PopContext(); //.properties\n            SDK.Lang.PopContext();\n        }\n    };\n\n    PLUGIN_CLASS.Register(PLUGIN_ID, PLUGIN_CLASS);\n}","PluginRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.Piranha305_Chance = class ChancePlugin extends C3.SDKPluginBase\r\n\t{\r\n\t\tconstructor(opts)\r\n\t\t{\r\n\t\t\tsuper(opts);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t};\r\n}","TypeEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.Piranha305_Chance;\r\n\t\r\n\tPLUGIN_CLASS.Type = class ChanceType extends SDK.ITypeBase\r\n\t{\r\n\t\tconstructor(sdkPlugin, iObjectType)\r\n\t\t{\r\n\t\t\tsuper(sdkPlugin, iObjectType);\r\n\t\t}\r\n\t};\r\n}","TypeRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.Piranha305_Chance.Type = class ChanceType extends C3.SDKTypeBase\r\n\t{\r\n\t\tconstructor(objectClass)\r\n\t\t{\r\n\t\t\tsuper(objectClass);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\t\r\n\t\t}\r\n\t};\r\n}","InstanceEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.Piranha305_Chance;\r\n\t\r\n\tPLUGIN_CLASS.Instance = class ChanceInstance extends SDK.IInstanceBase\r\n\t{\r\n\t\tconstructor(sdkType, inst)\r\n\t\t{\r\n\t\t\tsuper(sdkType, inst);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tOnPropertyChanged(id, value)\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tLoadC2Property(name, valueString)\r\n\t\t{\r\n\t\t\treturn false;\t\t// not handled\r\n\t\t}\r\n\t};\r\n}","InstanceRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.Piranha305_Chance.Instance = class ChanceInstance extends C3.SDKInstanceBase\r\n\t{\r\n\t\tconstructor(inst, properties)\r\n\t\t{\r\n\t\t\tsuper(inst);\r\n\t\t\t\r\n\t\t\tthis.seed = 0;\r\n\t\t\tthis.useSeed = false;\t\t\r\n\t\t\tthis.lastDiceRoll = [];\r\n\t\t\tthis.lastDiceSum = 0;\r\n\t\t\tthis.lastDiceTag = null;\r\n\t\t\tthis.diceRoll = {}\r\n\t\t\t\r\n\t\t\tif (properties)\r\n\t\t\t{\r\n\t\t\t\tthis.seed = properties[0];\r\n\t\t\t\tthis.useSeed = properties[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//create new instance of chance js\r\n\t\t\tif(this.useSeed){\r\n\t\t\t\tthis.chance = new Chance(this._seed);\r\n\t\t\t} else{\r\n\t\t\t\tthis.chance = new Chance();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tSaveToJson()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\t// data to be saved for savegames\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tLoadFromJson(o)\r\n\t\t{\r\n\t\t\t// load state for savegames\r\n\t\t}\r\n\t};\r\n}","LanguageProperties":"\"properties\": {\r\n    \"use-seed\": {\r\n      \"name\": \"Use Seed\",\r\n      \"desc\": \"Chance js will use given seed property\"\r\n    },\r\n    \"seed\": {\r\n      \"name\": \"Seed\",\r\n      \"desc\": \"The seed value that will be used by chance\"\r\n    }\r\n  }","LanguageCategories":"\"aceCategories\": {\r\n    \"seed\" : \"Seed\",\n    \"dice\" : \"Dice Rolls\",\n    \"custom\" : \"value\",\n    \"rng\" : \"Random\",\n    \"string\" : \"Strings\"\r\n}","EffectAddon":"{\r\n\t\"is-c3-addon\": true,\r\n\t\"type\": \"plugin\",\r\n\t\"name\": \"Chance\",\r\n\t\"id\": \"Piranha305_Chance\",\r\n\t\"version\": \"1.0.0.0\",\r\n\t\"author\": \"Piranha305\",\r\n\t\"website\": \"https://www.construct.net\",\r\n\t\"documentation\": \"https://www.construct.net\",\r\n\t\"description\": \"Uses chance.js to help generate random stuff (strings, int, etc...)\",\r\n\t\"editor-scripts\": [\r\n\t\t\t\t\t\t\"plugin.js\",\r\n\t\t\t\t\t\t\"type.js\",\r\n\t\t\t\t\t\t\"instance.js\"\r\n\t\t\t\t\t],\r\n\t\"file-list\": [\r\n\t\t\"c3runtime/plugin.js\",\r\n\t\t\"c3runtime/type.js\",\r\n\t\t\"c3runtime/instance.js\",\r\n\t\t\"c3runtime/conditions.js\",\r\n\t\t\"c3runtime/actions.js\",\r\n\t\t\"c3runtime/expressions.js\",\r\n\t\t\"lang/en-US.json\",\r\n\t\t\"aces.json\",\r\n\t\t\"addon.json\",\r\n\t\t\"icon.svg\",\r\n\t\t\"instance.js\",\r\n\t\t\"plugin.js\",\r\n\t\t\"type.js\"\r\n\t]\r\n}","EffectLanguage":null,"EffectCode":null,"Categories":["seed","dice","rng","string"],"Actions":{"set-seed":{"Id":"set-seed","Category":"seed","ScriptName":"SetSeed","Ace":"{\r\n  \"id\": \"set-seed\",\r\n  \"scriptName\": \"SetSeed\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"seed\",\r\n      \"type\": \"number\"\r\n    }\r\n  ]\r\n}","DisplayText":"Set the seed to [b]{0}[/b]","Description":"Sets the seed for chance js","Highlight":"false","Language":"\"set-seed\": {\r\n\t\"list-name\": \"Set Seed\",\r\n\t\"display-text\": \"Set the seed to [b]{0}[/b]\",\r\n\t\"description\": \"Sets the seed for chance js\",\r\n\t\"params\": {\r\n        \"seed\": {\r\n            \"name\": \"Seed\",\r\n            \"desc\": \"Seed\"\r\n        }\r\n    }\r\n}","Code":"SetSeed(seed)\r\n{\r\n\tif(this.useSeed){\r\n\t\tthis.seed = seed;\r\n\t\tthis.chance = new Chance(this.seed);\r\n\t}\r\n}","ListName":"Set Seed"},"roll-dice":{"Id":"roll-dice","Category":"dice","ScriptName":"RollDice","Ace":"{\r\n  \"id\": \"roll-dice\",\r\n  \"scriptName\": \"RollDice\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"dice\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"sides\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"6\"\r\n    },\r\n    {\r\n      \"id\": \"tag\",\r\n      \"type\": \"string\"\r\n    }\r\n  ]\r\n}","DisplayText":"Roll [b]{0}[/b] Dice with [b]{1}[/b] Sides with tag ([b]{2}[/b])","Description":"Rolls dice, values can be accessed through get dice expressions","Highlight":"false","Language":"\"roll-dice\": {\r\n\t\"list-name\": \"Roll Dice\",\r\n\t\"display-text\": \"Roll [b]{0}[/b] Dice with [b]{1}[/b] Sides with tag ([b]{2}[/b])\",\r\n\t\"description\": \"Rolls dice, values can be accessed through get dice expressions\",\r\n\t        \"params\": {\r\n        \"tag\": {\r\n            \"name\": \"Tag\",\r\n            \"desc\": \"Tag used to identify the dice roll\"\r\n        },\r\n        \"sides\": {\r\n            \"name\": \"Sides\",\r\n            \"desc\": \"How many sides each dice has\"\r\n        },\r\n        \"dice\": {\r\n            \"name\": \"Dice\",\r\n            \"desc\": \"How many dice\"\r\n        }\r\n    }\r\n}","Code":"RollDice(dice, sides, tag)\r\n{\r\n\t//assign deafult tag\r\n\tif(tag === '') {\r\n\t\ttag = 'default';\r\n\t}\r\n\t\r\n\t//assign submit and roll properties\r\n\tif(this.diceRoll.hasOwnProperty(tag)){\r\n\t\tthis.diceRoll[tag].sum = 0;\r\n\t\tthis.diceRoll[tag].roll = this.chance.rpg(dice+'d'+sides);\r\n\t} else {\r\n\t\tthis.diceRoll[tag] = {\r\n\t\t\tsum : 0,\r\n\t\t\troll : this.chance.rpg(dice+'d'+sides)\r\n\t\t};\r\n\t}\r\n\t\r\n\t//cache dice roll\r\n\tthis.diceRoll[tag].roll.forEach((value) => {\r\n\t\tthis.diceRoll[tag].sum += value;\r\n\t});\r\n\t\r\n\t//set the last dice roll\r\n\tthis.lastDiceRoll = this.diceRoll[tag].roll;\r\n\tthis.lastDiceSum = this.diceRoll[tag].sum;\r\n\tthis.lastDiceTag = tag;\r\n\t\r\n\t//triggers\r\n\tthis.Trigger(C3.Plugins.Piranha305_Chance.Cnds.OnRoll);\r\n\tthis.Trigger(C3.Plugins.Piranha305_Chance.Cnds.OnRollContains);\r\n}","ListName":"Roll Dice"}},"Conditions":{"chance":{"Id":"chance","Category":"rng","ListName":"On Chance","ScriptName":"Chance","Ace":"{\r\n  \"id\": \"chance\",\r\n  \"scriptName\": \"Chance\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"likelihood\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"50\"\r\n    }\r\n  ]\r\n}","DisplayText":"[b]{0}%[/b] Chance","Description":"Percent chance to trigger condition","Highlight":"false","Language":"\"chance\": {\r\n\t\"list-name\": \"On Chance\",\r\n\t\"display-text\": \"[b]{0}%[/b] Chance\",\r\n\t\"description\": \"Percent chance to trigger condition\",\r\n\t\"params\": {\r\n        \"likelihood\": {\r\n            \"name\": \"Likelihood\",\r\n            \"desc\": \"The likelihood percent the condition will trigger \"\r\n        }\r\n    }\r\n}","Code":"Chance(percent)\r\n{\r\n\treturn this.chance.bool({likelihood: percent});\r\n}","Trigger":"false","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"},"on-roll":{"Id":"on-roll","Category":"dice","ListName":"On Roll","ScriptName":"OnRoll","Ace":"{\r\n  \"id\": \"on-roll\",\r\n  \"scriptName\": \"OnRoll\",\r\n  \"highlight\": false,\r\n  \"isTrigger\": true,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"tag\",\r\n      \"type\": \"string\"\r\n    }\r\n  ]\r\n}","DisplayText":"On Roll ([b]{0}[/b])","Description":"Triggers when dice are rolled with tag","Highlight":"false","Language":"\"on-roll\": {\r\n\t\"list-name\": \"On Roll\",\r\n\t\"display-text\": \"On Roll ([b]{0}[/b])\",\r\n\t\"description\": \"Triggers when dice are rolled with tag\",\r\n\t\"params\": {\r\n        \"tag\": {\r\n            \"name\": \"Tag\",\r\n            \"desc\": \"Tag of Dice Roll\"\r\n        }\r\n    }\r\n}","Code":"OnRoll(tag)\r\n{\r\n\tif(tag === '') tag = 'default';\r\n\treturn C3.compare(this.lastDiceTag, 0, tag);\r\n}","Trigger":"true","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"},"on-roll-contains":{"Id":"on-roll-contains","Category":"dice","ListName":"On Roll Contains","ScriptName":"OnRollContains","Ace":"{\r\n  \"id\": \"on-roll-contains\",\r\n  \"scriptName\": \"OnRollContains\",\r\n  \"highlight\": false,\r\n  \"isTrigger\": true,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"tag\",\r\n      \"type\": \"string\"\r\n    },\r\n    {\r\n      \"id\": \"value\",\r\n      \"type\": \"number\"\r\n    }\r\n  ]\r\n}","DisplayText":"On Roll ([b]{0}[/b]) Contains [b]{1}[/b]","Description":"Triggers when the roll contains a specific value","Highlight":"false","Language":"\"on-roll-contains\": {\r\n\t\"list-name\": \"On Roll Contains\",\r\n\t\"display-text\": \"On Roll ([b]{0}[/b]) Contains [b]{1}[/b]\",\r\n\t\"description\": \"Triggers when the roll contains a specific value\",\r\n\t    \"params\": {\r\n        \"tag\": {\r\n            \"name\": \"Tag\",\r\n            \"desc\": \"Tag of dice roll\"\r\n        },\r\n        \"value\": {\r\n            \"name\": \"Value\",\r\n            \"desc\": \"Trigger conditionw hen this value is rolled\"\r\n        }\r\n    }\r\n}","Code":"OnRollContains(tag, value)\r\n{\r\n\tif(tag === '') tag = 'default';\r\n\tif(C3.compare(this.lastDiceTag, 0, tag)){\r\n\t\treturn this.diceRoll[tag].roll.includes(value);\r\n\t}\r\n\treturn false;\r\n}","Trigger":"true","FakeTrigger":"false","Static":"false","Looping":"false","Invertible":"true","TriggerCompatible":"true"}},"Expressions":{"get-seed":{"Id":"get-seed","Category":"seed","ScriptName":"GetSeed","IsVariadicParameters":"getseed","Ace":"{\r\n\t\"id\": \"get-seed\",\r\n\t\"expressionName\": \"GetSeed\",\r\n\t\"returnType\": \"number\"\r\n}","TranslatedName":"GetSeed","Description":"Gets the current seed","ReturnType":"number","Language":"\"get-seed\": { \r\n\t\"translated-name\": \"GetSeed\",\r\n\t\"description\": \"Gets the current seed\"\r\n}","Code":"GetSeed()\r\n{\r\n\treturn this.chance.mt.seed;\r\n}"},"get-char":{"Id":"get-char","Category":"string","ScriptName":"GetCharacter","IsVariadicParameters":"getcharacter","Ace":"{\r\n\t\"id\": \"get-char\",\r\n\t\"expressionName\": \"GetCharacter\",\r\n\t\"returnType\": \"string\"\r\n}","TranslatedName":"GetCharacter","Description":"Gets random character","ReturnType":"string","Language":"\"get-char\": { \r\n\t\"translated-name\": \"GetCharacter\",\r\n\t\"description\": \"Gets random character\"\r\n}","Code":"GetCharacter()\r\n{\r\n\treturn this.chance.character();\r\n}"},"get-char-lower":{"Id":"get-char-lower","Category":"string","ScriptName":"GetCharLower","IsVariadicParameters":"getcharacter","Ace":"{\r\n\t\"id\": \"get-char-lower\",\r\n\t\"expressionName\": \"GetCharacterLower\",\r\n\t\"returnType\": \"string\"\r\n}","TranslatedName":"GetCharLower","Description":"Gets random character","ReturnType":"string","Language":"\"get-char-lower\": { \r\n\t\"translated-name\": \"GetCharacterLower\",\r\n\t\"description\": \"Gets random character (lower)\"\r\n}","Code":"GetCharacterLower()\r\n{\r\n\treturn this.chance.character({pool:'abcdefghijklmnopqrstuvwxyz'});\r\n}"},"get-char-upper":{"Id":"get-char-upper","Category":"string","ScriptName":"GetCharUpper","IsVariadicParameters":"getcharacter","Ace":"{\r\n\t\"id\": \"get-char-upper\",\r\n\t\"expressionName\": \"GetCharacterUpper\",\r\n\t\"returnType\": \"string\"\r\n}","TranslatedName":"GetCharUpper","Description":"Gets random character","ReturnType":"string","Language":"\"get-char-upper\": { \r\n\t\"translated-name\": \"GetCharacterUpper\",\r\n\t\"description\": \"Gets random character (upper)\"\r\n}","Code":"GetCharacterUpper()\r\n{\r\n\treturn this.chance.character({pool:'ABCDEFGHIJKLMNOPQRSTUVWXYZ'});\r\n}"},"get-char-set":{"Id":"get-char-set","Category":"string","ScriptName":"GetCharSet","IsVariadicParameters":"getcharacter","Ace":"{\r\n  \"id\": \"get-char-set\",\r\n  \"expressionName\": \"GetCharacterFromSet\",\r\n  \"returnType\": \"string\",\r\n  \"params\": [\r\n    {\r\n      \"id\": \"set\",\r\n      \"type\": \"string\"\r\n    }\r\n  ]\r\n}","TranslatedName":"GetCharSet","Description":"Gets random character","ReturnType":"string","Language":"\"get-char-set\": { \r\n\t\"translated-name\": \"GetCharacterFromSet\",\r\n\t\"description\": \"Gets random character (set)\",\r\n\t\"params\": {\r\n        \"set\": {\r\n            \"name\": \"Set\",\r\n            \"desc\": \"List of characters to will be included in the set\"\r\n        }\r\n    }\r\n}","Code":"GetCharacterFromSet(set)\r\n{\r\n\tif(set === '') return this.chance.character();\r\n\treturn this.chance.character({pool:set});\r\n}"},"get-dice-sum":{"Id":"get-dice-sum","Category":"dice","ScriptName":"GetLastDiceSum","IsVariadicParameters":"getlastdicesum","Ace":"{\r\n\t\"id\": \"get-dice-sum\",\r\n\t\"expressionName\": \"GetLastDiceSum\",\r\n\t\"returnType\": \"number\"\r\n}","TranslatedName":"GetLastDiceSum","Description":"Gets the sum of the last dice roll","ReturnType":"number","Language":"\"get-dice-sum\": { \r\n\t\"translated-name\": \"GetLastDiceSum\",\r\n\t\"description\": \"Gets the sum of the last dice roll\"\r\n}","Code":"GetLastDiceSum()\r\n{\r\n\treturn this.lastDiceSum;\r\n}"},"get-dice-at":{"Id":"get-dice-at","Category":"dice","ScriptName":"GetLastDiceAt","IsVariadicParameters":"getlastdiceat","Ace":"{\r\n  \"id\": \"get-dice-at\",\r\n  \"expressionName\": \"GetLastDiceAt\",\r\n  \"returnType\": \"number\",\r\n  \"params\": [\r\n    {\r\n      \"id\": \"index\",\r\n      \"type\": \"number\"\r\n    }\r\n  ]\r\n}","TranslatedName":"GetLastDiceAt","Description":"Get the value of the last dice roll at index","ReturnType":"number","Language":"\"get-dice-at\": { \r\n\t\"translated-name\": \"GetLastDiceAt\",\r\n\t\"description\": \"Get the value of the last dice roll at index\",\r\n\t\"params\": {\r\n        \"index\": {\r\n            \"name\": \"Dice Index\",\r\n            \"desc\": \"The index of the dice to get the value\"\r\n        }\r\n    }\r\n}","Code":"GetLastDiceAt(index)\r\n{\r\n\tif(index < 0 || index > this.lastDiceRoll.length-1){\r\n\t\treturn -1;\r\n\t}\r\n\r\n\treturn this.lastDiceRoll[index];\r\n}"},"get-dice-sum-tag":{"Id":"get-dice-sum-tag","Category":"dice","ScriptName":"GetDiceSumTag","IsVariadicParameters":"getlastdicesum","Ace":"{\r\n  \"id\": \"get-dice-sum-tag\",\r\n  \"expressionName\": \"GetDiceSum\",\r\n  \"returnType\": \"number\",\r\n  \"params\": [\r\n    {\r\n      \"id\": \"tag\",\r\n      \"type\": \"string\"\r\n    }\r\n  ]\r\n}","TranslatedName":"GetDiceSumTag","Description":"Gets the sum of the last dice roll","ReturnType":"number","Language":"\"get-dice-sum-tag\": { \r\n\t\"translated-name\": \"GetDiceSum\",\r\n\t\"description\": \"Gets the sum of the dice roll with given tag\",\r\n\t\"params\": {\r\n        \"tag\": {\r\n            \"name\": \"Tag\",\r\n            \"desc\": \"The tag of the dice roll to get sum\"\r\n        }\r\n    }\r\n}","Code":"GetDiceSum(tag)\r\n{\r\n\tif(tag === '') tag = 'deafult';\r\n\treturn this.diceRoll[tag].sum;\r\n}"},"get-dice-at-tag":{"Id":"get-dice-at-tag","Category":"dice","ScriptName":"GetDiceAtTag","IsVariadicParameters":"getlastdiceat","Ace":"{\r\n  \"id\": \"get-dice-at-tag\",\r\n  \"expressionName\": \"GetDiceAt\",\r\n  \"returnType\": \"number\",\r\n  \"params\": [\r\n    {\r\n      \"id\": \"tag\",\r\n      \"type\": \"string\"\r\n    },\r\n    {\r\n      \"id\": \"index\",\r\n      \"type\": \"number\"\r\n    }\r\n  ]\r\n}","TranslatedName":"GetDiceAtTag","Description":"Get the value of the last dice roll at index","ReturnType":"number","Language":"\"get-dice-at-tag\": { \r\n\t\"translated-name\": \"GetDiceAt\",\r\n\t\"description\": \"Get the value of the last dice roll at index\",\r\n\t    \"params\": {\r\n        \"tag\": {\r\n            \"name\": \"tag\",\r\n            \"desc\": \"Get the value of a dice with tag and index\"\r\n        },\r\n        \"index\": {\r\n            \"name\": \"Dice Index\",\r\n            \"desc\": \"The index of the dice to get the value\"\r\n        }\r\n    }\r\n}","Code":"GetDiceAt(tag, index)\r\n{\r\n\tif(tag === '') tag = 'deafult';\r\n\tif(index < 0 || index > this.lastDiceRoll.length-1){\r\n\t\treturn -1;\r\n\t}\r\n\r\n\treturn this.lastDiceRoll[index];\r\n}"}},"ThirdPartyFiles":{"chance.js":{"FileName":"chance.js","Content":"//  Chance.js 1.0.16\r\n//  http://chancejs.com\r\n//  (c) 2013 Victor Quinn\r\n//  Chance may be freely distributed or modified under the MIT license.\r\n\r\n(function () {\r\n\r\n    // Constants\r\n    var MAX_INT = 9007199254740992;\r\n    var MIN_INT = -MAX_INT;\r\n    var NUMBERS = '0123456789';\r\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\r\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\r\n    var HEX_POOL  = NUMBERS + \"abcdef\";\r\n\r\n    // Errors\r\n    function UnsupportedError(message) {\r\n        this.name = 'UnsupportedError';\r\n        this.message = message || 'This feature is not supported on this platform';\r\n    }\r\n\r\n    UnsupportedError.prototype = new Error();\r\n    UnsupportedError.prototype.constructor = UnsupportedError;\r\n\r\n    // Cached array helpers\r\n    var slice = Array.prototype.slice;\r\n\r\n    // Constructor\r\n    function Chance (seed) {\r\n        if (!(this instanceof Chance)) {\r\n            if (!seed) { seed = null; } // handle other non-truthy seeds, as described in issue #322\r\n            return seed === null ? new Chance() : new Chance(seed);\r\n        }\r\n\r\n        // if user has provided a function, use that as the generator\r\n        if (typeof seed === 'function') {\r\n            this.random = seed;\r\n            return this;\r\n        }\r\n\r\n        if (arguments.length) {\r\n            // set a starting value of zero so we can add to it\r\n            this.seed = 0;\r\n        }\r\n\r\n        // otherwise, leave this.seed blank so that MT will receive a blank\r\n\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            var seedling = 0;\r\n            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\r\n                for (var j = 0; j < arguments[i].length; j++) {\r\n                    // create a numeric hash for each argument, add to seedling\r\n                    var hash = 0;\r\n                    for (var k = 0; k < arguments[i].length; k++) {\r\n                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\r\n                    }\r\n                    seedling += hash;\r\n                }\r\n            } else {\r\n                seedling = arguments[i];\r\n            }\r\n            this.seed += (arguments.length - i) * seedling;\r\n        }\r\n\r\n        // If no generator function was provided, use our MT\r\n        this.mt = this.mersenne_twister(this.seed);\r\n        this.bimd5 = this.blueimp_md5();\r\n        this.random = function () {\r\n            return this.mt.random(this.seed);\r\n        };\r\n\r\n        return this;\r\n    }\r\n\r\n    Chance.prototype.VERSION = \"1.0.16\";\r\n\r\n    // Random helper functions\r\n    function initOptions(options, defaults) {\r\n        options = options || {};\r\n\r\n        if (defaults) {\r\n            for (var i in defaults) {\r\n                if (typeof options[i] === 'undefined') {\r\n                    options[i] = defaults[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    function range(size) {\r\n        return Array.apply(null, Array(size)).map(function (_, i) {return i;});\r\n    }\r\n\r\n    function testRange(test, errorMessage) {\r\n        if (test) {\r\n            throw new RangeError(errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encode the input string with Base64.\r\n     */\r\n    var base64 = function() {\r\n        throw new Error('No Base64 encoder available.');\r\n    };\r\n\r\n    // Select proper Base64 encoder.\r\n    (function determineBase64Encoder() {\r\n        if (typeof btoa === 'function') {\r\n            base64 = btoa;\r\n        } else if (typeof Buffer === 'function') {\r\n            base64 = function(input) {\r\n                return new Buffer(input).toString('base64');\r\n            };\r\n        }\r\n    })();\r\n\r\n    // -- Basics --\r\n\r\n    /**\r\n     *  Return a random bool, either true or false\r\n     *\r\n     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\r\n     *    receiving a true or false value back.\r\n     *  @throws {RangeError} if the likelihood is out of bounds\r\n     *  @returns {Bool} either true or false\r\n     */\r\n    Chance.prototype.bool = function (options) {\r\n        // likelihood of success (true)\r\n        options = initOptions(options, {likelihood : 50});\r\n\r\n        // Note, we could get some minor perf optimizations by checking range\r\n        // prior to initializing defaults, but that makes code a bit messier\r\n        // and the check more complicated as we have to check existence of\r\n        // the object then existence of the key before checking constraints.\r\n        // Since the options initialization should be minor computationally,\r\n        // decision made for code cleanliness intentionally. This is mentioned\r\n        // here as it's the first occurrence, will not be mentioned again.\r\n        testRange(\r\n            options.likelihood < 0 || options.likelihood > 100,\r\n            \"Chance: Likelihood accepts values from 0 to 100.\"\r\n        );\r\n\r\n        return this.random() * 100 < options.likelihood;\r\n    };\r\n\r\n    Chance.prototype.animal = function (options){\r\n      //returns a random animal\r\n      options = initOptions(options);\r\n\r\n      if(typeof options.type !== 'undefined'){\r\n        //if user does not put in a valid animal type, user will get an error\r\n        testRange(\r\n           !this.get(\"animals\")[options.type.toLowerCase()],\r\n           \"Please pick from desert, ocean, grassland, forest, zoo, pets, farm.\"\r\n         );\r\n         //if user does put in valid animal type, will return a random animal of that type\r\n          return this.pick(this.get(\"animals\")[options.type.toLowerCase()]);\r\n      }\r\n       //if user does not put in any animal type, will return a random animal regardless\r\n      animalTypeArray = [\"desert\",\"forest\",\"ocean\",\"zoo\",\"farm\",\"pet\",\"grassland\"];\r\n      return this.pick(this.get(\"animals\")[this.pick(animalTypeArray)]);\r\n    };\r\n\r\n    /**\r\n     *  Return a random character.\r\n     *\r\n     *  @param {Object} [options={}] can specify a character pool, only alpha,\r\n     *    only symbols, and casing (lower or upper)\r\n     *  @returns {String} a single random character\r\n     *  @throws {RangeError} Can only specify alpha or symbols, not both\r\n     */\r\n    Chance.prototype.character = function (options) {\r\n        options = initOptions(options);\r\n        testRange(\r\n            options.alpha && options.symbols,\r\n            \"Chance: Cannot specify both alpha and symbols.\"\r\n        );\r\n\r\n        var symbols = \"!@#$%^&*()[]\",\r\n            letters, pool;\r\n\r\n        if (options.casing === 'lower') {\r\n            letters = CHARS_LOWER;\r\n        } else if (options.casing === 'upper') {\r\n            letters = CHARS_UPPER;\r\n        } else {\r\n            letters = CHARS_LOWER + CHARS_UPPER;\r\n        }\r\n\r\n        if (options.pool) {\r\n            pool = options.pool;\r\n        } else if (options.alpha) {\r\n            pool = letters;\r\n        } else if (options.symbols) {\r\n            pool = symbols;\r\n        } else {\r\n            pool = letters + NUMBERS + symbols;\r\n        }\r\n\r\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\r\n    };\r\n\r\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\r\n\r\n    // Note, fixed means N OR LESS digits after the decimal. This because\r\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\r\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\r\n    // needed\r\n    /**\r\n     *  Return a random floating point number\r\n     *\r\n     *  @param {Object} [options={}] can specify a fixed precision, min, max\r\n     *  @returns {Number} a single floating point number\r\n     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\r\n     *    min cannot be greater than max\r\n     */\r\n    Chance.prototype.floating = function (options) {\r\n        options = initOptions(options, {fixed : 4});\r\n        testRange(\r\n            options.fixed && options.precision,\r\n            \"Chance: Cannot specify both fixed and precision.\"\r\n        );\r\n\r\n        var num;\r\n        var fixed = Math.pow(10, options.fixed);\r\n\r\n        var max = MAX_INT / fixed;\r\n        var min = -max;\r\n\r\n        testRange(\r\n            options.min && options.fixed && options.min < min,\r\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\r\n        );\r\n        testRange(\r\n            options.max && options.fixed && options.max > max,\r\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\r\n        );\r\n\r\n        options = initOptions(options, { min : min, max : max });\r\n\r\n        // Todo - Make this work!\r\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\r\n\r\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\r\n        var num_fixed = (num / fixed).toFixed(options.fixed);\r\n\r\n        return parseFloat(num_fixed);\r\n    };\r\n\r\n    /**\r\n     *  Return a random integer\r\n     *\r\n     *  NOTE the max and min are INCLUDED in the range. So:\r\n     *  chance.integer({min: 1, max: 3});\r\n     *  would return either 1, 2, or 3.\r\n     *\r\n     *  @param {Object} [options={}] can specify a min and/or max\r\n     *  @returns {Number} a single random integer number\r\n     *  @throws {RangeError} min cannot be greater than max\r\n     */\r\n    Chance.prototype.integer = function (options) {\r\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\r\n        // See: http://vq.io/132sa2j\r\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\r\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\r\n\r\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\r\n    };\r\n\r\n    /**\r\n     *  Return a random natural\r\n     *\r\n     *  NOTE the max and min are INCLUDED in the range. So:\r\n     *  chance.natural({min: 1, max: 3});\r\n     *  would return either 1, 2, or 3.\r\n     *\r\n     *  @param {Object} [options={}] can specify a min and/or maxm or a numerals count.\r\n     *  @returns {Number} a single random integer number\r\n     *  @throws {RangeError} min cannot be greater than max\r\n     */\r\n    Chance.prototype.natural = function (options) {\r\n        options = initOptions(options, {min: 0, max: MAX_INT});\r\n        if (typeof options.numerals === 'number'){\r\n          testRange(options.numerals < 1, \"Chance: Numerals cannot be less than one.\");\r\n          options.min = Math.pow(10, options.numerals - 1);\r\n          options.max = Math.pow(10, options.numerals) - 1;\r\n        }\r\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\r\n        return this.integer(options);\r\n    };\r\n\r\n    /**\r\n     *  Return a random hex number as string\r\n     *\r\n     *  NOTE the max and min are INCLUDED in the range. So:\r\n     *  chance.hex({min: '9', max: 'B'});\r\n     *  would return either '9', 'A' or 'B'.\r\n     *\r\n     *  @param {Object} [options={}] can specify a min and/or max and/or casing\r\n     *  @returns {String} a single random string hex number\r\n     *  @throws {RangeError} min cannot be greater than max\r\n     */\r\n    Chance.prototype.hex = function (options) {\r\n        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\r\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\r\n\t\tvar integer = this.natural({min: options.min, max: options.max});\r\n\t\tif (options.casing === 'upper') {\r\n\t\t\treturn integer.toString(16).toUpperCase();\r\n\t\t}\r\n\t\treturn integer.toString(16);\r\n    };\r\n\r\n    Chance.prototype.letter = function(options) {\r\n        options = initOptions(options, {casing: 'lower'});\r\n        var pool = \"abcdefghijklmnopqrstuvwxyz\";\r\n        var letter = this.character({pool: pool});\r\n        if (options.casing === 'upper') {\r\n            letter = letter.toUpperCase();\r\n        }\r\n        return letter;\r\n    }\r\n\r\n    /**\r\n     *  Return a random string\r\n     *\r\n     *  @param {Object} [options={}] can specify a length\r\n     *  @returns {String} a string of random length\r\n     *  @throws {RangeError} length cannot be less than zero\r\n     */\r\n    Chance.prototype.string = function (options) {\r\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\r\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\r\n        var length = options.length,\r\n            text = this.n(this.character, length, options);\r\n\r\n        return text.join(\"\");\r\n    };\r\n\r\n    /**\r\n     *  Return a random buffer\r\n     *\r\n     *  @param {Object} [options={}] can specify a length\r\n     *  @returns {Buffer} a buffer of random length\r\n     *  @throws {RangeError} length cannot be less than zero\r\n     */\r\n    Chance.prototype.buffer = function (options) {\r\n        if (typeof Buffer === 'undefined') {\r\n            throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');\r\n        }\r\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\r\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\r\n        var length = options.length;\r\n        var content = this.n(this.character, length, options);\r\n\r\n        return Buffer.from(content);\r\n    };\r\n\r\n    // -- End Basics --\r\n\r\n    // -- Helpers --\r\n\r\n    Chance.prototype.capitalize = function (word) {\r\n        return word.charAt(0).toUpperCase() + word.substr(1);\r\n    };\r\n\r\n    Chance.prototype.mixin = function (obj) {\r\n        for (var func_name in obj) {\r\n            Chance.prototype[func_name] = obj[func_name];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *  Given a function that generates something random and a number of items to generate,\r\n     *    return an array of items where none repeat.\r\n     *\r\n     *  @param {Function} fn the function that generates something random\r\n     *  @param {Number} num number of terms to generate\r\n     *  @param {Object} options any options to pass on to the generator function\r\n     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\r\n     *\r\n     *  There can be more parameters after these. All additional parameters are provided to the given function\r\n     */\r\n    Chance.prototype.unique = function(fn, num, options) {\r\n        testRange(\r\n            typeof fn !== \"function\",\r\n            \"Chance: The first argument must be a function.\"\r\n        );\r\n\r\n        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\r\n\r\n        if (options) {\r\n            comparator = options.comparator || comparator;\r\n        }\r\n\r\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\r\n\r\n        while (arr.length < num) {\r\n            var clonedParams = JSON.parse(JSON.stringify(params));\r\n            result = fn.apply(this, clonedParams);\r\n            if (!comparator(arr, result)) {\r\n                arr.push(result);\r\n                // reset count when unique found\r\n                count = 0;\r\n            }\r\n\r\n            if (++count > MAX_DUPLICATES) {\r\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     *  Gives an array of n random terms\r\n     *\r\n     *  @param {Function} fn the function that generates something random\r\n     *  @param {Number} n number of terms to generate\r\n     *  @returns {Array} an array of length `n` with items generated by `fn`\r\n     *\r\n     *  There can be more parameters after these. All additional parameters are provided to the given function\r\n     */\r\n    Chance.prototype.n = function(fn, n) {\r\n        testRange(\r\n            typeof fn !== \"function\",\r\n            \"Chance: The first argument must be a function.\"\r\n        );\r\n\r\n        if (typeof n === 'undefined') {\r\n            n = 1;\r\n        }\r\n        var i = n, arr = [], params = slice.call(arguments, 2);\r\n\r\n        // Providing a negative count should result in a noop.\r\n        i = Math.max( 0, i );\r\n\r\n        for (null; i--; null) {\r\n            arr.push(fn.apply(this, params));\r\n        }\r\n\r\n        return arr;\r\n    };\r\n\r\n    // H/T to SO for this one: http://vq.io/OtUrZ5\r\n    Chance.prototype.pad = function (number, width, pad) {\r\n        // Default pad to 0 if none provided\r\n        pad = pad || '0';\r\n        // Convert number to a string\r\n        number = number + '';\r\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\r\n    };\r\n\r\n    // DEPRECATED on 2015-10-01\r\n    Chance.prototype.pick = function (arr, count) {\r\n        if (arr.length === 0) {\r\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\r\n        }\r\n        if (!count || count === 1) {\r\n            return arr[this.natural({max: arr.length - 1})];\r\n        } else {\r\n            return this.shuffle(arr).slice(0, count);\r\n        }\r\n    };\r\n\r\n    // Given an array, returns a single random element\r\n    Chance.prototype.pickone = function (arr) {\r\n        if (arr.length === 0) {\r\n          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\r\n        }\r\n        return arr[this.natural({max: arr.length - 1})];\r\n    };\r\n\r\n    // Given an array, returns a random set with 'count' elements\r\n    Chance.prototype.pickset = function (arr, count) {\r\n        if (count === 0) {\r\n            return [];\r\n        }\r\n        if (arr.length === 0) {\r\n            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\r\n        }\r\n        if (count < 0) {\r\n            throw new RangeError(\"Chance: Count must be a positive number\");\r\n        }\r\n        if (!count || count === 1) {\r\n            return [ this.pickone(arr) ];\r\n        } else {\r\n            return this.shuffle(arr).slice(0, count);\r\n        }\r\n    };\r\n\r\n    Chance.prototype.shuffle = function (arr) {\r\n        var new_array = [],\r\n            j = 0,\r\n            length = Number(arr.length),\r\n            source_indexes = range(length),\r\n            last_source_index = length - 1,\r\n            selected_source_index;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            // Pick a random index from the array\r\n            selected_source_index = this.natural({max: last_source_index});\r\n            j = source_indexes[selected_source_index];\r\n\r\n            // Add it to the new array\r\n            new_array[i] = arr[j];\r\n\r\n            // Mark the source index as used\r\n            source_indexes[selected_source_index] = source_indexes[last_source_index];\r\n            last_source_index -= 1;\r\n        }\r\n\r\n        return new_array;\r\n    };\r\n\r\n    // Returns a single item from an array with relative weighting of odds\r\n    Chance.prototype.weighted = function (arr, weights, trim) {\r\n        if (arr.length !== weights.length) {\r\n            throw new RangeError(\"Chance: Length of array and weights must match\");\r\n        }\r\n\r\n        // scan weights array and sum valid entries\r\n        var sum = 0;\r\n        var val;\r\n        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\r\n            val = weights[weightIndex];\r\n            if (isNaN(val)) {\r\n                throw new RangeError(\"Chance: All weights must be numbers\");\r\n            }\r\n\r\n            if (val > 0) {\r\n                sum += val;\r\n            }\r\n        }\r\n\r\n        if (sum === 0) {\r\n            throw new RangeError(\"Chance: No valid entries in array weights\");\r\n        }\r\n\r\n        // select a value within range\r\n        var selected = this.random() * sum;\r\n\r\n        // find array entry corresponding to selected value\r\n        var total = 0;\r\n        var lastGoodIdx = -1;\r\n        var chosenIdx;\r\n        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\r\n            val = weights[weightIndex];\r\n            total += val;\r\n            if (val > 0) {\r\n                if (selected <= total) {\r\n                    chosenIdx = weightIndex;\r\n                    break;\r\n                }\r\n                lastGoodIdx = weightIndex;\r\n            }\r\n\r\n            // handle any possible rounding error comparison to ensure something is picked\r\n            if (weightIndex === (weights.length - 1)) {\r\n                chosenIdx = lastGoodIdx;\r\n            }\r\n        }\r\n\r\n        var chosen = arr[chosenIdx];\r\n        trim = (typeof trim === 'undefined') ? false : trim;\r\n        if (trim) {\r\n            arr.splice(chosenIdx, 1);\r\n            weights.splice(chosenIdx, 1);\r\n        }\r\n\r\n        return chosen;\r\n    };\r\n\r\n    // -- End Helpers --\r\n\r\n    // -- Text --\r\n\r\n    Chance.prototype.paragraph = function (options) {\r\n        options = initOptions(options);\r\n\r\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\r\n            sentence_array = this.n(this.sentence, sentences);\r\n\r\n        return sentence_array.join(' ');\r\n    };\r\n\r\n    // Could get smarter about this than generating random words and\r\n    // chaining them together. Such as: http://vq.io/1a5ceOh\r\n    Chance.prototype.sentence = function (options) {\r\n        options = initOptions(options);\r\n\r\n        var words = options.words || this.natural({min: 12, max: 18}),\r\n            punctuation = options.punctuation,\r\n            text, word_array = this.n(this.word, words);\r\n\r\n        text = word_array.join(' ');\r\n\r\n        // Capitalize first letter of sentence\r\n        text = this.capitalize(text);\r\n\r\n        // Make sure punctuation has a usable value\r\n        if (punctuation !== false && !/^[\\.\\?;!:]$/.test(punctuation)) {\r\n            punctuation = '.';\r\n        }\r\n\r\n        // Add punctuation mark\r\n        if (punctuation) {\r\n            text += punctuation;\r\n        }\r\n\r\n        return text;\r\n    };\r\n\r\n    Chance.prototype.syllable = function (options) {\r\n        options = initOptions(options);\r\n\r\n        var length = options.length || this.natural({min: 2, max: 3}),\r\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\r\n            vowels = 'aeiou', // vowels\r\n            all = consonants + vowels, // all\r\n            text = '',\r\n            chr;\r\n\r\n        // I'm sure there's a more elegant way to do this, but this works\r\n        // decently well.\r\n        for (var i = 0; i < length; i++) {\r\n            if (i === 0) {\r\n                // First character can be anything\r\n                chr = this.character({pool: all});\r\n            } else if (consonants.indexOf(chr) === -1) {\r\n                // Last character was a vowel, now we want a consonant\r\n                chr = this.character({pool: consonants});\r\n            } else {\r\n                // Last character was a consonant, now we want a vowel\r\n                chr = this.character({pool: vowels});\r\n            }\r\n\r\n            text += chr;\r\n        }\r\n\r\n        if (options.capitalize) {\r\n            text = this.capitalize(text);\r\n        }\r\n\r\n        return text;\r\n    };\r\n\r\n    Chance.prototype.word = function (options) {\r\n        options = initOptions(options);\r\n\r\n        testRange(\r\n            options.syllables && options.length,\r\n            \"Chance: Cannot specify both syllables AND length.\"\r\n        );\r\n\r\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\r\n            text = '';\r\n\r\n        if (options.length) {\r\n            // Either bound word by length\r\n            do {\r\n                text += this.syllable();\r\n            } while (text.length < options.length);\r\n            text = text.substring(0, options.length);\r\n        } else {\r\n            // Or by number of syllables\r\n            for (var i = 0; i < syllables; i++) {\r\n                text += this.syllable();\r\n            }\r\n        }\r\n\r\n        if (options.capitalize) {\r\n            text = this.capitalize(text);\r\n        }\r\n\r\n        return text;\r\n    };\r\n\r\n    // -- End Text --\r\n\r\n    // -- Person --\r\n\r\n    Chance.prototype.age = function (options) {\r\n        options = initOptions(options);\r\n        var ageRange;\r\n\r\n        switch (options.type) {\r\n            case 'child':\r\n                ageRange = {min: 0, max: 12};\r\n                break;\r\n            case 'teen':\r\n                ageRange = {min: 13, max: 19};\r\n                break;\r\n            case 'adult':\r\n                ageRange = {min: 18, max: 65};\r\n                break;\r\n            case 'senior':\r\n                ageRange = {min: 65, max: 100};\r\n                break;\r\n            case 'all':\r\n                ageRange = {min: 0, max: 100};\r\n                break;\r\n            default:\r\n                ageRange = {min: 18, max: 65};\r\n                break;\r\n        }\r\n\r\n        return this.natural(ageRange);\r\n    };\r\n\r\n    Chance.prototype.birthday = function (options) {\r\n        var age = this.age(options);\r\n        var currentYear = new Date().getFullYear();\r\n\r\n        if (options && options.type) {\r\n            var min = new Date();\r\n            var max = new Date();\r\n            min.setFullYear(currentYear - age - 1);\r\n            max.setFullYear(currentYear - age);\r\n\r\n            options = initOptions(options, {\r\n                min: min,\r\n                max: max\r\n            });\r\n        } else {\r\n            options = initOptions(options, {\r\n                year: currentYear - age\r\n            });\r\n        }\r\n\r\n        return this.date(options);\r\n    };\r\n\r\n    // CPF; ID to identify taxpayers in Brazil\r\n    Chance.prototype.cpf = function (options) {\r\n        options = initOptions(options, {\r\n            formatted: true\r\n        });\r\n\r\n        var n = this.n(this.natural, 9, { max: 9 });\r\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\r\n        d1 = 11 - (d1 % 11);\r\n        if (d1>=10) {\r\n            d1 = 0;\r\n        }\r\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\r\n        d2 = 11 - (d2 % 11);\r\n        if (d2>=10) {\r\n            d2 = 0;\r\n        }\r\n        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\r\n        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\r\n    };\r\n\r\n    // CNPJ: ID to identify companies in Brazil\r\n    Chance.prototype.cnpj = function (options) {\r\n        options = initOptions(options, {\r\n            formatted: true\r\n        });\r\n\r\n        var n = this.n(this.natural, 12, { max: 12 });\r\n        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\r\n        d1 = 11 - (d1 % 11);\r\n        if (d1<2) {\r\n            d1 = 0;\r\n        }\r\n        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\r\n        d2 = 11 - (d2 % 11);\r\n        if (d2<2) {\r\n            d2 = 0;\r\n        }\r\n        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\r\n        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\r\n    };\r\n\r\n    Chance.prototype.first = function (options) {\r\n        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\r\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\r\n    };\r\n\r\n    Chance.prototype.profession = function (options) {\r\n        options = initOptions(options);\r\n        if(options.rank){\r\n            return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get(\"profession\"));\r\n        } else{\r\n            return this.pick(this.get(\"profession\"));\r\n        }\r\n    };\r\n\r\n    Chance.prototype.company = function (){\r\n        return this.pick(this.get(\"company\"));\r\n    };\r\n\r\n    Chance.prototype.gender = function (options) {\r\n        options = initOptions(options, {extraGenders: []});\r\n        return this.pick(['Male', 'Female'].concat(options.extraGenders));\r\n    };\r\n\r\n    Chance.prototype.last = function (options) {\r\n      options = initOptions(options, {nationality: '*'});\r\n      if (options.nationality === \"*\") {\r\n        var allLastNames = []\r\n        var lastNames = this.get(\"lastNames\")\r\n        Object.keys(lastNames).forEach(function(key, i){\r\n          allLastNames = allLastNames.concat(lastNames[key])\r\n        })\r\n        return this.pick(allLastNames)\r\n      }\r\n      else {\r\n        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\r\n      }\r\n\r\n    };\r\n\r\n    Chance.prototype.israelId=function(){\r\n        var x=this.string({pool: '0123456789',length:8});\r\n        var y=0;\r\n        for (var i=0;i<x.length;i++){\r\n            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\r\n            thisDigit=this.pad(thisDigit,2).toString();\r\n            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\r\n            y=y+thisDigit;\r\n        }\r\n        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\r\n        return x;\r\n    };\r\n\r\n    Chance.prototype.mrz = function (options) {\r\n        var checkDigit = function (input) {\r\n            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\r\n                multipliers = [ 7, 3, 1 ],\r\n                runningTotal = 0;\r\n\r\n            if (typeof input !== 'string') {\r\n                input = input.toString();\r\n            }\r\n\r\n            input.split('').forEach(function(character, idx) {\r\n                var pos = alpha.indexOf(character);\r\n\r\n                if(pos !== -1) {\r\n                    character = pos === 0 ? 0 : pos + 9;\r\n                } else {\r\n                    character = parseInt(character, 10);\r\n                }\r\n                character *= multipliers[idx % multipliers.length];\r\n                runningTotal += character;\r\n            });\r\n            return runningTotal % 10;\r\n        };\r\n        var generate = function (opts) {\r\n            var pad = function (length) {\r\n                return new Array(length + 1).join('<');\r\n            };\r\n            var number = [ 'P<',\r\n                           opts.issuer,\r\n                           opts.last.toUpperCase(),\r\n                           '<<',\r\n                           opts.first.toUpperCase(),\r\n                           pad(39 - (opts.last.length + opts.first.length + 2)),\r\n                           opts.passportNumber,\r\n                           checkDigit(opts.passportNumber),\r\n                           opts.nationality,\r\n                           opts.dob,\r\n                           checkDigit(opts.dob),\r\n                           opts.gender,\r\n                           opts.expiry,\r\n                           checkDigit(opts.expiry),\r\n                           pad(14),\r\n                           checkDigit(pad(14)) ].join('');\r\n\r\n            return number +\r\n                (checkDigit(number.substr(44, 10) +\r\n                            number.substr(57, 7) +\r\n                            number.substr(65, 7)));\r\n        };\r\n\r\n        var that = this;\r\n\r\n        options = initOptions(options, {\r\n            first: this.first(),\r\n            last: this.last(),\r\n            passportNumber: this.integer({min: 100000000, max: 999999999}),\r\n            dob: (function () {\r\n                var date = that.birthday({type: 'adult'});\r\n                return [date.getFullYear().toString().substr(2),\r\n                        that.pad(date.getMonth() + 1, 2),\r\n                        that.pad(date.getDate(), 2)].join('');\r\n            }()),\r\n            expiry: (function () {\r\n                var date = new Date();\r\n                return [(date.getFullYear() + 5).toString().substr(2),\r\n                        that.pad(date.getMonth() + 1, 2),\r\n                        that.pad(date.getDate(), 2)].join('');\r\n            }()),\r\n            gender: this.gender() === 'Female' ? 'F': 'M',\r\n            issuer: 'GBR',\r\n            nationality: 'GBR'\r\n        });\r\n        return generate (options);\r\n    };\r\n\r\n    Chance.prototype.name = function (options) {\r\n        options = initOptions(options);\r\n\r\n        var first = this.first(options),\r\n            last = this.last(options),\r\n            name;\r\n\r\n        if (options.middle) {\r\n            name = first + ' ' + this.first(options) + ' ' + last;\r\n        } else if (options.middle_initial) {\r\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\r\n        } else {\r\n            name = first + ' ' + last;\r\n        }\r\n\r\n        if (options.prefix) {\r\n            name = this.prefix(options) + ' ' + name;\r\n        }\r\n\r\n        if (options.suffix) {\r\n            name = name + ' ' + this.suffix(options);\r\n        }\r\n\r\n        return name;\r\n    };\r\n\r\n    // Return the list of available name prefixes based on supplied gender.\r\n    // @todo introduce internationalization\r\n    Chance.prototype.name_prefixes = function (gender) {\r\n        gender = gender || \"all\";\r\n        gender = gender.toLowerCase();\r\n\r\n        var prefixes = [\r\n            { name: 'Doctor', abbreviation: 'Dr.' }\r\n        ];\r\n\r\n        if (gender === \"male\" || gender === \"all\") {\r\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\r\n        }\r\n\r\n        if (gender === \"female\" || gender === \"all\") {\r\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\r\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\r\n        }\r\n\r\n        return prefixes;\r\n    };\r\n\r\n    // Alias for name_prefix\r\n    Chance.prototype.prefix = function (options) {\r\n        return this.name_prefix(options);\r\n    };\r\n\r\n    Chance.prototype.name_prefix = function (options) {\r\n        options = initOptions(options, { gender: \"all\" });\r\n        return options.full ?\r\n            this.pick(this.name_prefixes(options.gender)).name :\r\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\r\n    };\r\n    //Hungarian ID number\r\n    Chance.prototype.HIDN= function(){\r\n     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\r\n      var idn_pool=\"0123456789\";\r\n      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\r\n      var idn=\"\";\r\n        idn+=this.string({pool:idn_pool,length:6});\r\n        idn+=this.string({pool:idn_chrs,length:2});\r\n        return idn;\r\n    };\r\n\r\n\r\n    Chance.prototype.ssn = function (options) {\r\n        options = initOptions(options, {ssnFour: false, dashes: true});\r\n        var ssn_pool = \"1234567890\",\r\n            ssn,\r\n            dash = options.dashes ? '-' : '';\r\n\r\n        if(!options.ssnFour) {\r\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\r\n            this.string({pool: ssn_pool, length: 2}) + dash +\r\n            this.string({pool: ssn_pool, length: 4});\r\n        } else {\r\n            ssn = this.string({pool: ssn_pool, length: 4});\r\n        }\r\n        return ssn;\r\n    };\r\n\r\n    // Aadhar is similar to ssn, used in India to uniquely identify a person\r\n    Chance.prototype.aadhar = function (options) {\r\n        options = initOptions(options, {onlyLastFour: false, separatedByWhiteSpace: true});\r\n        var aadhar_pool = \"1234567890\",\r\n            aadhar,\r\n            whiteSpace = options.separatedByWhiteSpace ? ' ' : '';\r\n\r\n        if(!options.onlyLastFour) {\r\n            aadhar = this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\r\n            this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\r\n            this.string({pool: aadhar_pool, length: 4});\r\n        } else {\r\n            aadhar = this.string({pool: aadhar_pool, length: 4});\r\n        }\r\n        return aadhar;\r\n    };\r\n\r\n    // Return the list of available name suffixes\r\n    // @todo introduce internationalization\r\n    Chance.prototype.name_suffixes = function () {\r\n        var suffixes = [\r\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\r\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\r\n            { name: 'Esquire', abbreviation: 'Esq.' },\r\n            { name: 'Junior', abbreviation: 'Jr.' },\r\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\r\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\r\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\r\n            { name: 'Master of Science', abbreviation: 'M.S.' },\r\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\r\n            { name: 'Senior', abbreviation: 'Sr.' },\r\n            { name: 'The Third', abbreviation: 'III' },\r\n            { name: 'The Fourth', abbreviation: 'IV' },\r\n            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\r\n            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\r\n        ];\r\n        return suffixes;\r\n    };\r\n\r\n    // Alias for name_suffix\r\n    Chance.prototype.suffix = function (options) {\r\n        return this.name_suffix(options);\r\n    };\r\n\r\n    Chance.prototype.name_suffix = function (options) {\r\n        options = initOptions(options);\r\n        return options.full ?\r\n            this.pick(this.name_suffixes()).name :\r\n            this.pick(this.name_suffixes()).abbreviation;\r\n    };\r\n\r\n    Chance.prototype.nationalities = function () {\r\n        return this.get(\"nationalities\");\r\n    };\r\n\r\n    // Generate random nationality based on json list\r\n    Chance.prototype.nationality = function () {\r\n        var nationality = this.pick(this.nationalities());\r\n        return nationality.name;\r\n    };\r\n\r\n    // -- End Person --\r\n\r\n    // -- Mobile --\r\n    // Android GCM Registration ID\r\n    Chance.prototype.android_id = function () {\r\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\r\n    };\r\n\r\n    // Apple Push Token\r\n    Chance.prototype.apple_token = function () {\r\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\r\n    };\r\n\r\n    // Windows Phone 8 ANID2\r\n    Chance.prototype.wp8_anid2 = function () {\r\n        return base64( this.hash( { length : 32 } ) );\r\n    };\r\n\r\n    // Windows Phone 7 ANID\r\n    Chance.prototype.wp7_anid = function () {\r\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\r\n    };\r\n\r\n    // BlackBerry Device PIN\r\n    Chance.prototype.bb_pin = function () {\r\n        return this.hash({ length: 8 });\r\n    };\r\n\r\n    // -- End Mobile --\r\n\r\n    // -- Web --\r\n    Chance.prototype.avatar = function (options) {\r\n        var url = null;\r\n        var URL_BASE = '//www.gravatar.com/avatar/';\r\n        var PROTOCOLS = {\r\n            http: 'http',\r\n            https: 'https'\r\n        };\r\n        var FILE_TYPES = {\r\n            bmp: 'bmp',\r\n            gif: 'gif',\r\n            jpg: 'jpg',\r\n            png: 'png'\r\n        };\r\n        var FALLBACKS = {\r\n            '404': '404', // Return 404 if not found\r\n            mm: 'mm', // Mystery man\r\n            identicon: 'identicon', // Geometric pattern based on hash\r\n            monsterid: 'monsterid', // A generated monster icon\r\n            wavatar: 'wavatar', // A generated face\r\n            retro: 'retro', // 8-bit icon\r\n            blank: 'blank' // A transparent png\r\n        };\r\n        var RATINGS = {\r\n            g: 'g',\r\n            pg: 'pg',\r\n            r: 'r',\r\n            x: 'x'\r\n        };\r\n        var opts = {\r\n            protocol: null,\r\n            email: null,\r\n            fileExtension: null,\r\n            size: null,\r\n            fallback: null,\r\n            rating: null\r\n        };\r\n\r\n        if (!options) {\r\n            // Set to a random email\r\n            opts.email = this.email();\r\n            options = {};\r\n        }\r\n        else if (typeof options === 'string') {\r\n            opts.email = options;\r\n            options = {};\r\n        }\r\n        else if (typeof options !== 'object') {\r\n            return null;\r\n        }\r\n        else if (options.constructor === 'Array') {\r\n            return null;\r\n        }\r\n\r\n        opts = initOptions(options, opts);\r\n\r\n        if (!opts.email) {\r\n            // Set to a random email\r\n            opts.email = this.email();\r\n        }\r\n\r\n        // Safe checking for params\r\n        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\r\n        opts.size = parseInt(opts.size, 0) ? opts.size : '';\r\n        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\r\n        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\r\n        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\r\n\r\n        url =\r\n            opts.protocol +\r\n            URL_BASE +\r\n            this.bimd5.md5(opts.email) +\r\n            (opts.fileExtension ? '.' + opts.fileExtension : '') +\r\n            (opts.size || opts.rating || opts.fallback ? '?' : '') +\r\n            (opts.size ? '&s=' + opts.size.toString() : '') +\r\n            (opts.rating ? '&r=' + opts.rating : '') +\r\n            (opts.fallback ? '&d=' + opts.fallback : '')\r\n            ;\r\n\r\n        return url;\r\n    };\r\n\r\n    /**\r\n     * #Description:\r\n     * ===============================================\r\n     * Generate random color value base on color type:\r\n     * -> hex\r\n     * -> rgb\r\n     * -> rgba\r\n     * -> 0x\r\n     * -> named color\r\n     *\r\n     * #Examples:\r\n     * ===============================================\r\n     * * Geerate random hex color\r\n     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\r\n     *\r\n     * * Generate Hex based color value\r\n     * chance.color({format: 'hex'})    => '#d67118'\r\n     *\r\n     * * Generate simple rgb value\r\n     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\r\n     *\r\n     * * Generate Ox based color value\r\n     * chance.color({format: '0x'})     => '0x67ae0b'\r\n     *\r\n     * * Generate graiscale based value\r\n     * chance.color({grayscale: true})  => '#e2e2e2'\r\n     *\r\n     * * Return valide color name\r\n     * chance.color({format: 'name'})   => 'red'\r\n     *\r\n     * * Make color uppercase\r\n     * chance.color({casing: 'upper'})  => '#29CFA7'\r\n     *\r\n     * * Min Max values for RGBA\r\n     * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\r\n     *\r\n     * @param  [object] options\r\n     * @return [string] color value\r\n     */\r\n    Chance.prototype.color = function (options) {\r\n        function gray(value, delimiter) {\r\n            return [value, value, value].join(delimiter || '');\r\n        }\r\n\r\n        function rgb(hasAlpha) {\r\n            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\r\n            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\r\n            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\r\n            return rgbValue + '(' + colorValue + alphaChannel + ')';\r\n        }\r\n\r\n        function hex(start, end, withHash) {\r\n            var symbol = (withHash) ? \"#\" : \"\";\r\n            var hexstring = \"\";\r\n\r\n            if (isGrayscale) {\r\n                hexstring = gray(this.pad(this.hex({min: min_rgb, max: max_rgb}), 2));\r\n                if (options.format === \"shorthex\") {\r\n                    hexstring = gray(this.hex({min: 0, max: 15}));\r\n                }\r\n            }\r\n            else {\r\n                if (options.format === \"shorthex\") {\r\n                    hexstring = this.pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\r\n                }\r\n                else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\r\n                    hexstring = this.pad(this.hex({min: min_red, max: max_red}), 2) + this.pad(this.hex({min: min_green, max: max_green}), 2) + this.pad(this.hex({min: min_blue, max: max_blue}), 2);\r\n                }\r\n                else {\r\n                    hexstring = this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2);\r\n                }\r\n            }\r\n\r\n            return symbol + hexstring;\r\n        }\r\n\r\n        options = initOptions(options, {\r\n            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\r\n            grayscale: false,\r\n            casing: 'lower',\r\n            min: 0,\r\n            max: 255,\r\n            min_red: undefined,\r\n            max_red: undefined,\r\n            min_green: undefined,\r\n            max_green: undefined,\r\n            min_blue: undefined,\r\n            max_blue: undefined,\r\n            min_alpha: 0,\r\n            max_alpha: 1\r\n        });\r\n\r\n        var isGrayscale = options.grayscale;\r\n        var min_rgb = options.min;\r\n        var max_rgb = options.max;\r\n        var min_red = options.min_red;\r\n        var max_red = options.max_red;\r\n        var min_green = options.min_green;\r\n        var max_green = options.max_green;\r\n        var min_blue = options.min_blue;\r\n        var max_blue = options.max_blue;\r\n        var min_alpha = options.min_alpha;\r\n        var max_alpha = options.max_alpha;\r\n        if (options.min_red === undefined) { min_red = min_rgb; }\r\n        if (options.max_red === undefined) { max_red = max_rgb; }\r\n        if (options.min_green === undefined) { min_green = min_rgb; }\r\n        if (options.max_green === undefined) { max_green = max_rgb; }\r\n        if (options.min_blue === undefined) { min_blue = min_rgb; }\r\n        if (options.max_blue === undefined) { max_blue = max_rgb; }\r\n        if (options.min_alpha === undefined) { min_alpha = 0; }\r\n        if (options.max_alpha === undefined) { max_alpha = 1; }\r\n        if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\r\n            min_rgb = ((min_red + min_green + min_blue) / 3);\r\n            max_rgb = ((max_red + max_green + max_blue) / 3);\r\n        }\r\n        var colorValue;\r\n\r\n        if (options.format === 'hex') {\r\n            colorValue = hex.call(this, 2, 6, true);\r\n        }\r\n        else if (options.format === 'shorthex') {\r\n            colorValue = hex.call(this, 1, 3, true);\r\n        }\r\n        else if (options.format === 'rgb') {\r\n            colorValue = rgb.call(this, false);\r\n        }\r\n        else if (options.format === 'rgba') {\r\n            colorValue = rgb.call(this, true);\r\n        }\r\n        else if (options.format === '0x') {\r\n            colorValue = '0x' + hex.call(this, 2, 6);\r\n        }\r\n        else if(options.format === 'name') {\r\n            return this.pick(this.get(\"colorNames\"));\r\n        }\r\n        else {\r\n            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\r\n        }\r\n\r\n        if (options.casing === 'upper' ) {\r\n            colorValue = colorValue.toUpperCase();\r\n        }\r\n\r\n        return colorValue;\r\n    };\r\n\r\n    Chance.prototype.domain = function (options) {\r\n        options = initOptions(options);\r\n        return this.word() + '.' + (options.tld || this.tld());\r\n    };\r\n\r\n    Chance.prototype.email = function (options) {\r\n        options = initOptions(options);\r\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\r\n    };\r\n\r\n    /**\r\n     * #Description:\r\n     * ===============================================\r\n     * Generate a random Facebook id, aka fbid.\r\n     *\r\n     * NOTE: At the moment (Sep 2017), Facebook ids are\r\n     * \"numeric strings\" of length 16.\r\n     * However, Facebook Graph API documentation states that\r\n     * \"it is extremely likely to change over time\".\r\n     * @see https://developers.facebook.com/docs/graph-api/overview/\r\n     *\r\n     * #Examples:\r\n     * ===============================================\r\n     * chance.fbid() => '1000035231661304'\r\n     *\r\n     * @return [string] facebook id\r\n     */\r\n    Chance.prototype.fbid = function () {\r\n        return '10000' + this.string({pool: \"1234567890\", length: 11});\r\n    };\r\n\r\n    Chance.prototype.google_analytics = function () {\r\n        var account = this.pad(this.natural({max: 999999}), 6);\r\n        var property = this.pad(this.natural({max: 99}), 2);\r\n\r\n        return 'UA-' + account + '-' + property;\r\n    };\r\n\r\n    Chance.prototype.hashtag = function () {\r\n        return '#' + this.word();\r\n    };\r\n\r\n    Chance.prototype.ip = function () {\r\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\r\n        // this should probably be updated to account for that rare as it may be\r\n        return this.natural({min: 1, max: 254}) + '.' +\r\n               this.natural({max: 255}) + '.' +\r\n               this.natural({max: 255}) + '.' +\r\n               this.natural({min: 1, max: 254});\r\n    };\r\n\r\n    Chance.prototype.ipv6 = function () {\r\n        var ip_addr = this.n(this.hash, 8, {length: 4});\r\n\r\n        return ip_addr.join(\":\");\r\n    };\r\n\r\n    Chance.prototype.klout = function () {\r\n        return this.natural({min: 1, max: 99});\r\n    };\r\n\r\n    Chance.prototype.semver = function (options) {\r\n        options = initOptions(options, { include_prerelease: true });\r\n\r\n        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\r\n        if (options.range) {\r\n            range = options.range;\r\n        }\r\n\r\n        var prerelease = \"\";\r\n        if (options.include_prerelease) {\r\n            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\r\n        }\r\n        return range + this.rpg('3d10').join('.') + prerelease;\r\n    };\r\n\r\n    Chance.prototype.tlds = function () {\r\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\r\n    };\r\n\r\n    Chance.prototype.tld = function () {\r\n        return this.pick(this.tlds());\r\n    };\r\n\r\n    Chance.prototype.twitter = function () {\r\n        return '@' + this.word();\r\n    };\r\n\r\n    Chance.prototype.url = function (options) {\r\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\r\n\r\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\r\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\r\n\r\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\r\n    };\r\n\r\n    Chance.prototype.port = function() {\r\n        return this.integer({min: 0, max: 65535});\r\n    };\r\n\r\n    Chance.prototype.locale = function (options) {\r\n        options = initOptions(options);\r\n        if (options.region){\r\n          return this.pick(this.get(\"locale_regions\"));\r\n        } else {\r\n          return this.pick(this.get(\"locale_languages\"));\r\n        }\r\n    };\r\n\r\n    Chance.prototype.locales = function (options) {\r\n      options = initOptions(options);\r\n      if (options.region){\r\n        return this.get(\"locale_regions\");\r\n      } else {\r\n        return this.get(\"locale_languages\");\r\n      }\r\n    };\r\n\r\n    Chance.prototype.loremPicsum = function (options) {\r\n        options = initOptions(options, { width: 500, height: 500, greyscale: false, blurred: false });\r\n\r\n        var greyscale = options.greyscale ? 'g/' : '';\r\n        var query = options.blurred ? '/?blur' : '/?random';\r\n\r\n        return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;\r\n    }\r\n\r\n    // -- End Web --\r\n\r\n    // -- Location --\r\n\r\n    Chance.prototype.address = function (options) {\r\n        options = initOptions(options);\r\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\r\n    };\r\n\r\n    Chance.prototype.altitude = function (options) {\r\n        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\r\n        return this.floating({\r\n            min: options.min,\r\n            max: options.max,\r\n            fixed: options.fixed\r\n        });\r\n    };\r\n\r\n    Chance.prototype.areacode = function (options) {\r\n        options = initOptions(options, {parens : true});\r\n        // Don't want area codes to start with 1, or have a 9 as the second digit\r\n        var areacode = this.natural({min: 2, max: 9}).toString() +\r\n                this.natural({min: 0, max: 8}).toString() +\r\n                this.natural({min: 0, max: 9}).toString();\r\n\r\n        return options.parens ? '(' + areacode + ')' : areacode;\r\n    };\r\n\r\n    Chance.prototype.city = function () {\r\n        return this.capitalize(this.word({syllables: 3}));\r\n    };\r\n\r\n    Chance.prototype.coordinates = function (options) {\r\n        return this.latitude(options) + ', ' + this.longitude(options);\r\n    };\r\n\r\n    Chance.prototype.countries = function () {\r\n        return this.get(\"countries\");\r\n    };\r\n\r\n    Chance.prototype.country = function (options) {\r\n        options = initOptions(options);\r\n        var country = this.pick(this.countries());\r\n        return options.raw ? country : options.full ? country.name : country.abbreviation;\r\n    };\r\n\r\n    Chance.prototype.depth = function (options) {\r\n        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\r\n        return this.floating({\r\n            min: options.min,\r\n            max: options.max,\r\n            fixed: options.fixed\r\n        });\r\n    };\r\n\r\n    Chance.prototype.geohash = function (options) {\r\n        options = initOptions(options, { length: 7 });\r\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\r\n    };\r\n\r\n    Chance.prototype.geojson = function (options) {\r\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\r\n    };\r\n\r\n    Chance.prototype.latitude = function (options) {\r\n        options = initOptions(options, {fixed: 5, min: -90, max: 90});\r\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\r\n    };\r\n\r\n    Chance.prototype.longitude = function (options) {\r\n        options = initOptions(options, {fixed: 5, min: -180, max: 180});\r\n        return this.floating({min: options.min, max: options.max, fixed: options.fixed});\r\n    };\r\n\r\n    Chance.prototype.phone = function (options) {\r\n        var self = this,\r\n            numPick,\r\n            ukNum = function (parts) {\r\n                var section = [];\r\n                //fills the section part of the phone number with random numbers.\r\n                parts.sections.forEach(function(n) {\r\n                    section.push(self.string({ pool: '0123456789', length: n}));\r\n                });\r\n                return parts.area + section.join(' ');\r\n            };\r\n        options = initOptions(options, {\r\n            formatted: true,\r\n            country: 'us',\r\n            mobile: false\r\n        });\r\n        if (!options.formatted) {\r\n            options.parens = false;\r\n        }\r\n        var phone;\r\n        switch (options.country) {\r\n            case 'fr':\r\n                if (!options.mobile) {\r\n                    numPick = this.pick([\r\n                        // Valid zone and département codes.\r\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '09' + self.string({ pool: '0123456789', length: 8}),\r\n                    ]);\r\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\r\n                } else {\r\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\r\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\r\n                }\r\n                break;\r\n            case 'uk':\r\n                if (!options.mobile) {\r\n                    numPick = this.pick([\r\n                        //valid area codes of major cities/counties followed by random numbers in required format.\r\n\r\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\r\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\r\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\r\n                        { area: '024 7', sections: [3,4] },\r\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\r\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\r\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\r\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\r\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\r\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\r\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\r\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\r\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\r\n                    ]);\r\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\r\n                } else {\r\n                    numPick = this.pick([\r\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\r\n                        { area: '07624 ', sections: [6] }\r\n                    ]);\r\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\r\n                }\r\n                break;\r\n            case 'za':\r\n                if (!options.mobile) {\r\n                    numPick = this.pick([\r\n                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\r\n                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\r\n                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\r\n                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),\r\n                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\r\n                    ]);\r\n                    phone = options.formatted || numPick;\r\n                } else {\r\n                    numPick = this.pick([\r\n                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '06'  + self.string({ pool: '0123456789', length: 7}),\r\n                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\r\n                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\r\n                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),\r\n                    ]);\r\n                    phone = options.formatted || numPick;\r\n                }\r\n                break;\r\n            case 'us':\r\n                var areacode = this.areacode(options).toString();\r\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\r\n                    this.natural({ min: 0, max: 9 }).toString() +\r\n                    this.natural({ min: 0, max: 9 }).toString();\r\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\r\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\r\n                break;\r\n            case 'br':\r\n                var areaCode = this.pick([\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"21\", \"22\", \"24\", \"27\", \"28\", \"31\", \"32\", \"33\", \"34\", \"35\", \"37\", \"38\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"51\", \"53\", \"54\", \"55\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"71\", \"73\", \"74\", \"75\", \"77\", \"79\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]);\r\n                var prefix;\r\n                if (options.mobile) {\r\n                    // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330\r\n                    prefix = '9' + self.string({ pool: '0123456789', length: 4});\r\n                } else {\r\n                    // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331\r\n                    prefix = this.natural({ min: 2000, max: 5999 }).toString();\r\n                }\r\n                var mcdu = self.string({ pool: '0123456789', length: 4});\r\n                phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;\r\n                break;\r\n        }\r\n        return phone;\r\n    };\r\n\r\n    Chance.prototype.postal = function () {\r\n        // Postal District\r\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\r\n        // Forward Sortation Area (FSA)\r\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\r\n        // Local Delivery Unut (LDU)\r\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\r\n\r\n        return fsa + \" \" + ldu;\r\n    };\r\n\r\n    Chance.prototype.counties = function (options) {\r\n        options = initOptions(options, { country: 'uk' });\r\n        return this.get(\"counties\")[options.country.toLowerCase()];\r\n    };\r\n\r\n    Chance.prototype.county = function (options) {\r\n        return this.pick(this.counties(options)).name;\r\n    };\r\n\r\n    Chance.prototype.provinces = function (options) {\r\n        options = initOptions(options, { country: 'ca' });\r\n        return this.get(\"provinces\")[options.country.toLowerCase()];\r\n    };\r\n\r\n    Chance.prototype.province = function (options) {\r\n        return (options && options.full) ?\r\n            this.pick(this.provinces(options)).name :\r\n            this.pick(this.provinces(options)).abbreviation;\r\n    };\r\n\r\n    Chance.prototype.state = function (options) {\r\n        return (options && options.full) ?\r\n            this.pick(this.states(options)).name :\r\n            this.pick(this.states(options)).abbreviation;\r\n    };\r\n\r\n    Chance.prototype.states = function (options) {\r\n        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\r\n\r\n        var states;\r\n\r\n        switch (options.country.toLowerCase()) {\r\n            case 'us':\r\n                var us_states_and_dc = this.get(\"us_states_and_dc\"),\r\n                    territories = this.get(\"territories\"),\r\n                    armed_forces = this.get(\"armed_forces\");\r\n\r\n                states = [];\r\n\r\n                if (options.us_states_and_dc) {\r\n                    states = states.concat(us_states_and_dc);\r\n                }\r\n                if (options.territories) {\r\n                    states = states.concat(territories);\r\n                }\r\n                if (options.armed_forces) {\r\n                    states = states.concat(armed_forces);\r\n                }\r\n                break;\r\n            case 'it':\r\n                states = this.get(\"country_regions\")[options.country.toLowerCase()];\r\n                break;\r\n            case 'uk':\r\n                states = this.get(\"counties\")[options.country.toLowerCase()];\r\n                break;\r\n        }\r\n\r\n        return states;\r\n    };\r\n\r\n    Chance.prototype.street = function (options) {\r\n        options = initOptions(options, { country: 'us', syllables: 2 });\r\n        var     street;\r\n\r\n        switch (options.country.toLowerCase()) {\r\n            case 'us':\r\n                street = this.word({ syllables: options.syllables });\r\n                street = this.capitalize(street);\r\n                street += ' ';\r\n                street += options.short_suffix ?\r\n                    this.street_suffix(options).abbreviation :\r\n                    this.street_suffix(options).name;\r\n                break;\r\n            case 'it':\r\n                street = this.word({ syllables: options.syllables });\r\n                street = this.capitalize(street);\r\n                street = (options.short_suffix ?\r\n                    this.street_suffix(options).abbreviation :\r\n                    this.street_suffix(options).name) + \" \" + street;\r\n                break;\r\n        }\r\n        return street;\r\n    };\r\n\r\n    Chance.prototype.street_suffix = function (options) {\r\n        options = initOptions(options, { country: 'us' });\r\n        return this.pick(this.street_suffixes(options));\r\n    };\r\n\r\n    Chance.prototype.street_suffixes = function (options) {\r\n        options = initOptions(options, { country: 'us' });\r\n        // These are the most common suffixes.\r\n        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\r\n    };\r\n\r\n    // Note: only returning US zip codes, internationalization will be a whole\r\n    // other beast to tackle at some point.\r\n    Chance.prototype.zip = function (options) {\r\n        var zip = this.n(this.natural, 5, {max: 9});\r\n\r\n        if (options && options.plusfour === true) {\r\n            zip.push('-');\r\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\r\n        }\r\n\r\n        return zip.join(\"\");\r\n    };\r\n\r\n    // -- End Location --\r\n\r\n    // -- Time\r\n\r\n    Chance.prototype.ampm = function () {\r\n        return this.bool() ? 'am' : 'pm';\r\n    };\r\n\r\n    Chance.prototype.date = function (options) {\r\n        var date_string, date;\r\n\r\n        // If interval is specified we ignore preset\r\n        if(options && (options.min || options.max)) {\r\n            options = initOptions(options, {\r\n                american: true,\r\n                string: false\r\n            });\r\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\r\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\r\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\r\n\r\n            date = new Date(this.integer({min: min, max: max}));\r\n        } else {\r\n            var m = this.month({raw: true});\r\n            var daysInMonth = m.days;\r\n\r\n            if(options && options.month) {\r\n                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\r\n                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\r\n            }\r\n\r\n            options = initOptions(options, {\r\n                year: parseInt(this.year(), 10),\r\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\r\n                // for some reason.\r\n                month: m.numeric - 1,\r\n                day: this.natural({min: 1, max: daysInMonth}),\r\n                hour: this.hour({twentyfour: true}),\r\n                minute: this.minute(),\r\n                second: this.second(),\r\n                millisecond: this.millisecond(),\r\n                american: true,\r\n                string: false\r\n            });\r\n\r\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\r\n        }\r\n\r\n        if (options.american) {\r\n            // Adding 1 to the month is necessary because Date() 0-indexes\r\n            // months but not day for some odd reason.\r\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\r\n        } else {\r\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\r\n        }\r\n\r\n        return options.string ? date_string : date;\r\n    };\r\n\r\n    Chance.prototype.hammertime = function (options) {\r\n        return this.date(options).getTime();\r\n    };\r\n\r\n    Chance.prototype.hour = function (options) {\r\n        options = initOptions(options, {\r\n            min: options && options.twentyfour ? 0 : 1,\r\n            max: options && options.twentyfour ? 23 : 12\r\n        });\r\n\r\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\r\n        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\r\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\r\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\r\n\r\n        return this.natural({min: options.min, max: options.max});\r\n    };\r\n\r\n    Chance.prototype.millisecond = function () {\r\n        return this.natural({max: 999});\r\n    };\r\n\r\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\r\n        options = initOptions(options, {min: 0, max: 59});\r\n\r\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\r\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\r\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\r\n\r\n        return this.natural({min: options.min, max: options.max});\r\n    };\r\n\r\n    Chance.prototype.month = function (options) {\r\n        options = initOptions(options, {min: 1, max: 12});\r\n\r\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\r\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\r\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\r\n\r\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\r\n        return options.raw ? month : month.name;\r\n    };\r\n\r\n    Chance.prototype.months = function () {\r\n        return this.get(\"months\");\r\n    };\r\n\r\n    Chance.prototype.second = function () {\r\n        return this.natural({max: 59});\r\n    };\r\n\r\n    Chance.prototype.timestamp = function () {\r\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\r\n    };\r\n\r\n    Chance.prototype.weekday = function (options) {\r\n        options = initOptions(options, {weekday_only: false});\r\n        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n        if (!options.weekday_only) {\r\n            weekdays.push(\"Saturday\");\r\n            weekdays.push(\"Sunday\");\r\n        }\r\n        return this.pickone(weekdays);\r\n    };\r\n\r\n    Chance.prototype.year = function (options) {\r\n        // Default to current year as min if none specified\r\n        options = initOptions(options, {min: new Date().getFullYear()});\r\n\r\n        // Default to one century after current year as max if none specified\r\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\r\n\r\n        return this.natural(options).toString();\r\n    };\r\n\r\n    // -- End Time\r\n\r\n    // -- Finance --\r\n\r\n    Chance.prototype.cc = function (options) {\r\n        options = initOptions(options);\r\n\r\n        var type, number, to_generate;\r\n\r\n        type = (options.type) ?\r\n                    this.cc_type({ name: options.type, raw: true }) :\r\n                    this.cc_type({ raw: true });\r\n\r\n        number = type.prefix.split(\"\");\r\n        to_generate = type.length - type.prefix.length - 1;\r\n\r\n        // Generates n - 1 digits\r\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\r\n\r\n        // Generates the last digit according to Luhn algorithm\r\n        number.push(this.luhn_calculate(number.join(\"\")));\r\n\r\n        return number.join(\"\");\r\n    };\r\n\r\n    Chance.prototype.cc_types = function () {\r\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\r\n        return this.get(\"cc_types\");\r\n    };\r\n\r\n    Chance.prototype.cc_type = function (options) {\r\n        options = initOptions(options);\r\n        var types = this.cc_types(),\r\n            type = null;\r\n\r\n        if (options.name) {\r\n            for (var i = 0; i < types.length; i++) {\r\n                // Accept either name or short_name to specify card type\r\n                if (types[i].name === options.name || types[i].short_name === options.name) {\r\n                    type = types[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (type === null) {\r\n                throw new RangeError(\"Chance: Credit card type '\" + options.name + \"' is not supported\");\r\n            }\r\n        } else {\r\n            type = this.pick(types);\r\n        }\r\n\r\n        return options.raw ? type : type.name;\r\n    };\r\n\r\n    // return all world currency by ISO 4217\r\n    Chance.prototype.currency_types = function () {\r\n        return this.get(\"currency_types\");\r\n    };\r\n\r\n    // return random world currency by ISO 4217\r\n    Chance.prototype.currency = function () {\r\n        return this.pick(this.currency_types());\r\n    };\r\n\r\n    // return all timezones available\r\n    Chance.prototype.timezones = function () {\r\n        return this.get(\"timezones\");\r\n    };\r\n\r\n    // return random timezone\r\n    Chance.prototype.timezone = function () {\r\n        return this.pick(this.timezones());\r\n    };\r\n\r\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\r\n    Chance.prototype.currency_pair = function (returnAsString) {\r\n        var currencies = this.unique(this.currency, 2, {\r\n            comparator: function(arr, val) {\r\n\r\n                return arr.reduce(function(acc, item) {\r\n                    // If a match has been found, short circuit check and just return\r\n                    return acc || (item.code === val.code);\r\n                }, false);\r\n            }\r\n        });\r\n\r\n        if (returnAsString) {\r\n            return currencies[0].code + '/' + currencies[1].code;\r\n        } else {\r\n            return currencies;\r\n        }\r\n    };\r\n\r\n    Chance.prototype.dollar = function (options) {\r\n        // By default, a somewhat more sane max for dollar than all available numbers\r\n        options = initOptions(options, {max : 10000, min : 0});\r\n\r\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\r\n            cents = dollar.split('.')[1];\r\n\r\n        if (cents === undefined) {\r\n            dollar += '.00';\r\n        } else if (cents.length < 2) {\r\n            dollar = dollar + '0';\r\n        }\r\n\r\n        if (dollar < 0) {\r\n            return '-$' + dollar.replace('-', '');\r\n        } else {\r\n            return '$' + dollar;\r\n        }\r\n    };\r\n\r\n    Chance.prototype.euro = function (options) {\r\n        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\r\n    };\r\n\r\n    Chance.prototype.exp = function (options) {\r\n        options = initOptions(options);\r\n        var exp = {};\r\n\r\n        exp.year = this.exp_year();\r\n\r\n        // If the year is this year, need to ensure month is greater than the\r\n        // current month or this expiration will not be valid\r\n        if (exp.year === (new Date().getFullYear()).toString()) {\r\n            exp.month = this.exp_month({future: true});\r\n        } else {\r\n            exp.month = this.exp_month();\r\n        }\r\n\r\n        return options.raw ? exp : exp.month + '/' + exp.year;\r\n    };\r\n\r\n    Chance.prototype.exp_month = function (options) {\r\n        options = initOptions(options);\r\n        var month, month_int,\r\n            // Date object months are 0 indexed\r\n            curMonth = new Date().getMonth() + 1;\r\n\r\n        if (options.future && (curMonth !== 12)) {\r\n            do {\r\n                month = this.month({raw: true}).numeric;\r\n                month_int = parseInt(month, 10);\r\n            } while (month_int <= curMonth);\r\n        } else {\r\n            month = this.month({raw: true}).numeric;\r\n        }\r\n\r\n        return month;\r\n    };\r\n\r\n    Chance.prototype.exp_year = function () {\r\n        var curMonth = new Date().getMonth() + 1,\r\n            curYear = new Date().getFullYear();\r\n\r\n        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\r\n    };\r\n\r\n    Chance.prototype.vat = function (options) {\r\n        options = initOptions(options, { country: 'it' });\r\n        switch (options.country.toLowerCase()) {\r\n            case 'it':\r\n                return this.it_vat();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).\r\n     * No country-specific formats support (yet)\r\n     */\r\n    Chance.prototype.iban = function () {\r\n        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        var alphanum = alpha + '0123456789';\r\n        var iban =\r\n            this.string({ length: 2, pool: alpha }) +\r\n            this.pad(this.integer({ min: 0, max: 99 }), 2) +\r\n            this.string({ length: 4, pool: alphanum }) +\r\n            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\r\n        return iban;\r\n    };\r\n\r\n    // -- End Finance\r\n\r\n    // -- Regional\r\n\r\n    Chance.prototype.it_vat = function () {\r\n        var it_vat = this.natural({min: 1, max: 1800000});\r\n\r\n        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\r\n        return it_vat + this.luhn_calculate(it_vat);\r\n    };\r\n\r\n    /*\r\n     * this generator is written following the official algorithm\r\n     * all data can be passed explicitely or randomized by calling chance.cf() without options\r\n     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\r\n     *\r\n     * @param  [Object] options = { first: first name,\r\n     *                              last: last name,\r\n     *                              gender: female|male,\r\n                                    birthday: JavaScript date object,\r\n                                    city: string(4), 1 letter + 3 numbers\r\n                                   }\r\n     * @return [string] codice fiscale\r\n     *\r\n    */\r\n    Chance.prototype.cf = function (options) {\r\n        options = options || {};\r\n        var gender = !!options.gender ? options.gender : this.gender(),\r\n            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\r\n            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\r\n            birthday = !!options.birthday ? options.birthday : this.birthday(),\r\n            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\r\n            cf = [],\r\n            name_generator = function(name, isLast) {\r\n                var temp,\r\n                    return_value = [];\r\n\r\n                if (name.length < 3) {\r\n                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\r\n                }\r\n                else {\r\n                    temp = name.toUpperCase().split('').map(function(c){\r\n                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\r\n                    }).join('');\r\n                    if (temp.length > 3) {\r\n                        if (isLast) {\r\n                            temp = temp.substr(0,3);\r\n                        } else {\r\n                            temp = temp[0] + temp.substr(2,2);\r\n                        }\r\n                    }\r\n                    if (temp.length < 3) {\r\n                        return_value = temp;\r\n                        temp = name.toUpperCase().split('').map(function(c){\r\n                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\r\n                        }).join('').substr(0, 3 - return_value.length);\r\n                    }\r\n                    return_value = return_value + temp;\r\n                }\r\n\r\n                return return_value;\r\n            },\r\n            date_generator = function(birthday, gender, that) {\r\n                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\r\n\r\n                return  birthday.getFullYear().toString().substr(2) +\r\n                        lettermonths[birthday.getMonth()] +\r\n                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\r\n            },\r\n            checkdigit_generator = function(cf) {\r\n                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\r\n                    digit  = 0;\r\n\r\n\r\n                for(var i = 0; i < 15; i++) {\r\n                    if (i % 2 !== 0) {\r\n                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\r\n                    }\r\n                    else {\r\n                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\r\n                    }\r\n                }\r\n                return evens[digit % 26];\r\n            };\r\n\r\n        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\r\n        cf += checkdigit_generator(cf.toUpperCase(), this);\r\n\r\n        return cf.toUpperCase();\r\n    };\r\n\r\n    Chance.prototype.pl_pesel = function () {\r\n        var number = this.natural({min: 1, max: 9999999999});\r\n        var arr = this.pad(number, 10).split('');\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = parseInt(arr[i]);\r\n        }\r\n\r\n        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\r\n        if(controlNumber !== 0) {\r\n            controlNumber = 10 - controlNumber;\r\n        }\r\n\r\n        return arr.join('') + controlNumber;\r\n    };\r\n\r\n    Chance.prototype.pl_nip = function () {\r\n        var number = this.natural({min: 1, max: 999999999});\r\n        var arr = this.pad(number, 9).split('');\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = parseInt(arr[i]);\r\n        }\r\n\r\n        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\r\n        if(controlNumber === 10) {\r\n            return this.pl_nip();\r\n        }\r\n\r\n        return arr.join('') + controlNumber;\r\n    };\r\n\r\n    Chance.prototype.pl_regon = function () {\r\n        var number = this.natural({min: 1, max: 99999999});\r\n        var arr = this.pad(number, 8).split('');\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = parseInt(arr[i]);\r\n        }\r\n\r\n        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\r\n        if(controlNumber === 10) {\r\n            controlNumber = 0;\r\n        }\r\n\r\n        return arr.join('') + controlNumber;\r\n    };\r\n\r\n    // -- End Regional\r\n\r\n    // -- Music --\r\n\r\n    Chance.prototype.note = function(options) {\r\n      // choices for 'notes' option:\r\n      // flatKey - chromatic scale with flat notes (default)\r\n      // sharpKey - chromatic scale with sharp notes\r\n      // flats - just flat notes\r\n      // sharps - just sharp notes\r\n      // naturals - just natural notes\r\n      // all - naturals, sharps and flats\r\n      options = initOptions(options, { notes : 'flatKey'});\r\n      var scales = {\r\n        naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\r\n        flats: ['D♭', 'E♭', 'G♭', 'A♭', 'B♭'],\r\n        sharps: ['C♯', 'D♯', 'F♯', 'G♯', 'A♯']\r\n      };\r\n      scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps))\r\n      scales.flatKey = scales.naturals.concat(scales.flats)\r\n      scales.sharpKey = scales.naturals.concat(scales.sharps)\r\n      return this.pickone(scales[options.notes]);\r\n    }\r\n\r\n    Chance.prototype.midi_note = function(options) {\r\n      var min = 0;\r\n      var max = 127;\r\n      options = initOptions(options, { min : min, max : max });\r\n      return this.integer({min: options.min, max: options.max});\r\n    }\r\n\r\n    Chance.prototype.chord_quality = function(options) {\r\n      options = initOptions(options, { jazz: true });\r\n      var chord_qualities = ['maj', 'min', 'aug', 'dim'];\r\n      if (options.jazz){\r\n        chord_qualities = [\r\n          'maj7',\r\n          'min7',\r\n          '7',\r\n          'sus',\r\n          'dim',\r\n          'ø'\r\n        ];\r\n      }\r\n      return this.pickone(chord_qualities);\r\n    }\r\n\r\n    Chance.prototype.chord = function (options) {\r\n      options = initOptions(options);\r\n      return this.note(options) + this.chord_quality(options);\r\n    }\r\n\r\n    Chance.prototype.tempo = function (options) {\r\n      var min = 40;\r\n      var max = 320;\r\n      options = initOptions(options, {min: min, max: max});\r\n      return this.integer({min: options.min, max: options.max});\r\n    }\r\n\r\n    // -- End Music\r\n\r\n    // -- Miscellaneous --\r\n\r\n    // Coin - Flip, flip, flipadelphia\r\n    Chance.prototype.coin = function(options) {\r\n      return this.bool() ? \"heads\" : \"tails\";\r\n    }\r\n\r\n    // Dice - For all the board game geeks out there, myself included ;)\r\n    function diceFn (range) {\r\n        return function () {\r\n            return this.natural(range);\r\n        };\r\n    }\r\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\r\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\r\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\r\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\r\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\r\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\r\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\r\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\r\n\r\n    Chance.prototype.rpg = function (thrown, options) {\r\n        options = initOptions(options);\r\n        if (!thrown) {\r\n            throw new RangeError(\"Chance: A type of die roll must be included\");\r\n        } else {\r\n            var bits = thrown.toLowerCase().split(\"d\"),\r\n                rolls = [];\r\n\r\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\r\n                throw new Error(\"Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\r\n            }\r\n            for (var i = bits[0]; i > 0; i--) {\r\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\r\n            }\r\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\r\n        }\r\n    };\r\n\r\n    // Guid\r\n    Chance.prototype.guid = function (options) {\r\n        options = initOptions(options, { version: 5 });\r\n\r\n        var guid_pool = \"abcdef1234567890\",\r\n            variant_pool = \"ab89\",\r\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\r\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\r\n                   // The Version\r\n                   options.version +\r\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\r\n                   // The Variant\r\n                   this.string({ pool: variant_pool, length: 1 }) +\r\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\r\n                   this.string({ pool: guid_pool, length: 12 });\r\n        return guid;\r\n    };\r\n\r\n    // Hash\r\n    Chance.prototype.hash = function (options) {\r\n        options = initOptions(options, {length : 40, casing: 'lower'});\r\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\r\n        return this.string({pool: pool, length: options.length});\r\n    };\r\n\r\n    Chance.prototype.luhn_check = function (num) {\r\n        var str = num.toString();\r\n        var checkDigit = +str.substring(str.length - 1);\r\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\r\n    };\r\n\r\n    Chance.prototype.luhn_calculate = function (num) {\r\n        var digits = num.toString().split(\"\").reverse();\r\n        var sum = 0;\r\n        var digit;\r\n\r\n        for (var i = 0, l = digits.length; l > i; ++i) {\r\n            digit = +digits[i];\r\n            if (i % 2 === 0) {\r\n                digit *= 2;\r\n                if (digit > 9) {\r\n                    digit -= 9;\r\n                }\r\n            }\r\n            sum += digit;\r\n        }\r\n        return (sum * 9) % 10;\r\n    };\r\n\r\n    // MD5 Hash\r\n    Chance.prototype.md5 = function(options) {\r\n        var opts = { str: '', key: null, raw: false };\r\n\r\n        if (!options) {\r\n            opts.str = this.string();\r\n            options = {};\r\n        }\r\n        else if (typeof options === 'string') {\r\n            opts.str = options;\r\n            options = {};\r\n        }\r\n        else if (typeof options !== 'object') {\r\n            return null;\r\n        }\r\n        else if(options.constructor === 'Array') {\r\n            return null;\r\n        }\r\n\r\n        opts = initOptions(options, opts);\r\n\r\n        if(!opts.str){\r\n            throw new Error('A parameter is required to return an md5 hash.');\r\n        }\r\n\r\n        return this.bimd5.md5(opts.str, opts.key, opts.raw);\r\n    };\r\n\r\n    /**\r\n     * #Description:\r\n     * =====================================================\r\n     * Generate random file name with extension\r\n     *\r\n     * The argument provide extension type\r\n     * -> raster\r\n     * -> vector\r\n     * -> 3d\r\n     * -> document\r\n     *\r\n     * If nothing is provided the function return random file name with random\r\n     * extension type of any kind\r\n     *\r\n     * The user can validate the file name length range\r\n     * If nothing provided the generated file name is random\r\n     *\r\n     * #Extension Pool :\r\n     * * Currently the supported extensions are\r\n     *  -> some of the most popular raster image extensions\r\n     *  -> some of the most popular vector image extensions\r\n     *  -> some of the most popular 3d image extensions\r\n     *  -> some of the most popular document extensions\r\n     *\r\n     * #Examples :\r\n     * =====================================================\r\n     *\r\n     * Return random file name with random extension. The file extension\r\n     * is provided by a predefined collection of extensions. More about the extension\r\n     * pool can be found in #Extension Pool section\r\n     *\r\n     * chance.file()\r\n     * => dsfsdhjf.xml\r\n     *\r\n     * In order to generate a file name with specific length, specify the\r\n     * length property and integer value. The extension is going to be random\r\n     *\r\n     * chance.file({length : 10})\r\n     * => asrtineqos.pdf\r\n     *\r\n     * In order to generate file with extension from some of the predefined groups\r\n     * of the extension pool just specify the extension pool category in fileType property\r\n     *\r\n     * chance.file({fileType : 'raster'})\r\n     * => dshgssds.psd\r\n     *\r\n     * You can provide specific extension for your files\r\n     * chance.file({extension : 'html'})\r\n     * => djfsd.html\r\n     *\r\n     * Or you could pass custom collection of extensions by array or by object\r\n     * chance.file({extensions : [...]})\r\n     * => dhgsdsd.psd\r\n     *\r\n     * chance.file({extensions : { key : [...], key : [...]}})\r\n     * => djsfksdjsd.xml\r\n     *\r\n     * @param  [collection] options\r\n     * @return [string]\r\n     *\r\n     */\r\n    Chance.prototype.file = function(options) {\r\n\r\n        var fileOptions = options || {};\r\n        var poolCollectionKey = \"fileExtension\";\r\n        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\r\n        var fileName;\r\n        var fileExtension;\r\n\r\n        // Generate random file name\r\n        fileName = this.word({length : fileOptions.length});\r\n\r\n        // Generate file by specific extension provided by the user\r\n        if(fileOptions.extension) {\r\n\r\n            fileExtension = fileOptions.extension;\r\n            return (fileName + '.' + fileExtension);\r\n        }\r\n\r\n        // Generate file by specific extension collection\r\n        if(fileOptions.extensions) {\r\n\r\n            if(Array.isArray(fileOptions.extensions)) {\r\n\r\n                fileExtension = this.pickone(fileOptions.extensions);\r\n                return (fileName + '.' + fileExtension);\r\n            }\r\n            else if(fileOptions.extensions.constructor === Object) {\r\n\r\n                var extensionObjectCollection = fileOptions.extensions;\r\n                var keys = Object.keys(extensionObjectCollection);\r\n\r\n                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\r\n                return (fileName + '.' + fileExtension);\r\n            }\r\n\r\n            throw new Error(\"Chance: Extensions must be an Array or Object\");\r\n        }\r\n\r\n        // Generate file extension based on specific file type\r\n        if(fileOptions.fileType) {\r\n\r\n            var fileType = fileOptions.fileType;\r\n            if(typeRange.indexOf(fileType) !== -1) {\r\n\r\n                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\r\n                return (fileName + '.' + fileExtension);\r\n            }\r\n\r\n            throw new RangeError(\"Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'\");\r\n        }\r\n\r\n        // Generate random file name if no extension options are passed\r\n        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\r\n        return (fileName + '.' + fileExtension);\r\n    };\r\n\r\n    var data = {\r\n\r\n        firstNames: {\r\n            \"male\": {\r\n                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\r\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\r\n                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"],\r\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\r\n                \"nl\": [\"Aaron\",\"Abel\",\"Adam\",\"Adriaan\",\"Albert\",\"Alexander\",\"Ali\",\"Arjen\",\"Arno\",\"Bart\",\"Bas\",\"Bastiaan\",\"Benjamin\",\"Bob\", \"Boris\",\"Bram\",\"Brent\",\"Cas\",\"Casper\",\"Chris\",\"Christiaan\",\"Cornelis\",\"Daan\",\"Daley\",\"Damian\",\"Dani\",\"Daniel\",\"Daniël\",\"David\",\"Dean\",\"Dirk\",\"Dylan\",\"Egbert\",\"Elijah\",\"Erik\",\"Erwin\",\"Evert\",\"Ezra\",\"Fabian\",\"Fedde\",\"Finn\",\"Florian\",\"Floris\",\"Frank\",\"Frans\",\"Frederik\",\"Freek\",\"Geert\",\"Gerard\",\"Gerben\",\"Gerrit\",\"Gijs\",\"Guus\",\"Hans\",\"Hendrik\",\"Henk\",\"Herman\",\"Hidde\",\"Hugo\",\"Jaap\",\"Jan Jaap\",\"Jan-Willem\",\"Jack\",\"Jacob\",\"Jan\",\"Jason\",\"Jasper\",\"Jayden\",\"Jelle\",\"Jelte\",\"Jens\",\"Jeroen\",\"Jesse\",\"Jim\",\"Job\",\"Joep\",\"Johannes\",\"John\",\"Jonathan\",\"Joris\",\"Joshua\",\"Joël\",\"Julian\",\"Kees\",\"Kevin\",\"Koen\",\"Lars\",\"Laurens\",\"Leendert\",\"Lennard\",\"Lodewijk\",\"Luc\",\"Luca\",\"Lucas\",\"Lukas\",\"Luuk\",\"Maarten\",\"Marcus\",\"Martijn\",\"Martin\",\"Matthijs\",\"Maurits\",\"Max\",\"Mees\",\"Melle\",\"Mick\",\"Mika\",\"Milan\",\"Mohamed\",\"Mohammed\",\"Morris\",\"Muhammed\",\"Nathan\",\"Nick\",\"Nico\",\"Niek\",\"Niels\",\"Noah\",\"Noud\",\"Olivier\",\"Oscar\",\"Owen\",\"Paul\",\"Pepijn\",\"Peter\",\"Pieter\",\"Pim\",\"Quinten\",\"Reinier\",\"Rens\",\"Robin\",\"Ruben\",\"Sam\",\"Samuel\",\"Sander\",\"Sebastiaan\",\"Sem\",\"Sep\",\"Sepp\",\"Siem\",\"Simon\",\"Stan\",\"Stef\",\"Steven\",\"Stijn\",\"Sven\",\"Teun\",\"Thijmen\",\"Thijs\",\"Thomas\",\"Tijn\",\"Tim\",\"Timo\",\"Tobias\",\"Tom\",\"Victor\",\"Vince\",\"Willem\",\"Wim\",\"Wouter\",\"Yusuf\"],\r\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\r\n                \"fr\": [\"Aaron\",\"Abdon\",\"Abel\",\"Abélard\",\"Abelin\",\"Abondance\",\"Abraham\",\"Absalon\",\"Acace\",\"Achaire\",\"Achille\",\"Adalard\",\"Adalbald\",\"Adalbéron\",\"Adalbert\",\"Adalric\",\"Adam\",\"Adegrin\",\"Adel\",\"Adelin\",\"Andelin\",\"Adelphe\",\"Adam\",\"Adéodat\",\"Adhémar\",\"Adjutor\",\"Adolphe\",\"Adonis\",\"Adon\",\"Adrien\",\"Agapet\",\"Agathange\",\"Agathon\",\"Agilbert\",\"Agénor\",\"Agnan\",\"Aignan\",\"Agrippin\",\"Aimable\",\"Aimé\",\"Alain\",\"Alban\",\"Albin\",\"Aubin\",\"Albéric\",\"Albert\",\"Albertet\",\"Alcibiade\",\"Alcide\",\"Alcée\",\"Alcime\",\"Aldonce\",\"Aldric\",\"Aldéric\",\"Aleaume\",\"Alexandre\",\"Alexis\",\"Alix\",\"Alliaume\",\"Aleaume\",\"Almine\",\"Almire\",\"Aloïs\",\"Alphée\",\"Alphonse\",\"Alpinien\",\"Alverède\",\"Amalric\",\"Amaury\",\"Amandin\",\"Amant\",\"Ambroise\",\"Amédée\",\"Amélien\",\"Amiel\",\"Amour\",\"Anaël\",\"Anastase\",\"Anatole\",\"Ancelin\",\"Andéol\",\"Andoche\",\"André\",\"Andoche\",\"Ange\",\"Angelin\",\"Angilbe\",\"Anglebert\",\"Angoustan\",\"Anicet\",\"Anne\",\"Annibal\",\"Ansbert\",\"Anselme\",\"Anthelme\",\"Antheaume\",\"Anthime\",\"Antide\",\"Antoine\",\"Antonius\",\"Antonin\",\"Apollinaire\",\"Apollon\",\"Aquilin\",\"Arcade\",\"Archambaud\",\"Archambeau\",\"Archange\",\"Archibald\",\"Arian\",\"Ariel\",\"Ariste\",\"Aristide\",\"Armand\",\"Armel\",\"Armin\",\"Arnould\",\"Arnaud\",\"Arolde\",\"Arsène\",\"Arsinoé\",\"Arthaud\",\"Arthème\",\"Arthur\",\"Ascelin\",\"Athanase\",\"Aubry\",\"Audebert\",\"Audouin\",\"Audran\",\"Audric\",\"Auguste\",\"Augustin\",\"Aurèle\",\"Aurélien\",\"Aurian\",\"Auxence\",\"Axel\",\"Aymard\",\"Aymeric\",\"Aymon\",\"Aymond\",\"Balthazar\",\"Baptiste\",\"Barnabé\",\"Barthélemy\",\"Bartimée\",\"Basile\",\"Bastien\",\"Baudouin\",\"Bénigne\",\"Benjamin\",\"Benoît\",\"Bérenger\",\"Bérard\",\"Bernard\",\"Bertrand\",\"Blaise\",\"Bon\",\"Boniface\",\"Bouchard\",\"Brice\",\"Brieuc\",\"Bruno\",\"Brunon\",\"Calixte\",\"Calliste\",\"Camélien\",\"Camille\",\"Camillien\",\"Candide\",\"Caribert\",\"Carloman\",\"Cassandre\",\"Cassien\",\"Cédric\",\"Céleste\",\"Célestin\",\"Célien\",\"Césaire\",\"César\",\"Charles\",\"Charlemagne\",\"Childebert\",\"Chilpéric\",\"Chrétien\",\"Christian\",\"Christodule\",\"Christophe\",\"Chrysostome\",\"Clarence\",\"Claude\",\"Claudien\",\"Cléandre\",\"Clément\",\"Clotaire\",\"Côme\",\"Constance\",\"Constant\",\"Constantin\",\"Corentin\",\"Cyprien\",\"Cyriaque\",\"Cyrille\",\"Cyril\",\"Damien\",\"Daniel\",\"David\",\"Delphin\",\"Denis\",\"Désiré\",\"Didier\",\"Dieudonné\",\"Dimitri\",\"Dominique\",\"Dorian\",\"Dorothée\",\"Edgard\",\"Edmond\",\"Édouard\",\"Éleuthère\",\"Élie\",\"Élisée\",\"Émeric\",\"Émile\",\"Émilien\",\"Emmanuel\",\"Enguerrand\",\"Épiphane\",\"Éric\",\"Esprit\",\"Ernest\",\"Étienne\",\"Eubert\",\"Eudes\",\"Eudoxe\",\"Eugène\",\"Eusèbe\",\"Eustache\",\"Évariste\",\"Évrard\",\"Fabien\",\"Fabrice\",\"Falba\",\"Félicité\",\"Félix\",\"Ferdinand\",\"Fiacre\",\"Fidèle\",\"Firmin\",\"Flavien\",\"Flodoard\",\"Florent\",\"Florentin\",\"Florestan\",\"Florian\",\"Fortuné\",\"Foulques\",\"Francisque\",\"François\",\"Français\",\"Franciscus\",\"Francs\",\"Frédéric\",\"Fulbert\",\"Fulcran\",\"Fulgence\",\"Gabin\",\"Gabriel\",\"Gaël\",\"Garnier\",\"Gaston\",\"Gaspard\",\"Gatien\",\"Gaud\",\"Gautier\",\"Gédéon\",\"Geoffroy\",\"Georges\",\"Géraud\",\"Gérard\",\"Gerbert\",\"Germain\",\"Gervais\",\"Ghislain\",\"Gilbert\",\"Gilles\",\"Girart\",\"Gislebert\",\"Gondebaud\",\"Gonthier\",\"Gontran\",\"Gonzague\",\"Grégoire\",\"Guérin\",\"Gui\",\"Guillaume\",\"Gustave\",\"Guy\",\"Guyot\",\"Hardouin\",\"Hector\",\"Hédelin\",\"Hélier\",\"Henri\",\"Herbert\",\"Herluin\",\"Hervé\",\"Hilaire\",\"Hildebert\",\"Hincmar\",\"Hippolyte\",\"Honoré\",\"Hubert\",\"Hugues\",\"Innocent\",\"Isabeau\",\"Isidore\",\"Jacques\",\"Japhet\",\"Jason\",\"Jean\",\"Jeannel\",\"Jeannot\",\"Jérémie\",\"Jérôme\",\"Joachim\",\"Joanny\",\"Job\",\"Jocelyn\",\"Joël\",\"Johan\",\"Jonas\",\"Jonathan\",\"Joseph\",\"Josse\",\"Josselin\",\"Jourdain\",\"Jude\",\"Judicaël\",\"Jules\",\"Julien\",\"Juste\",\"Justin\",\"Lambert\",\"Landry\",\"Laurent\",\"Lazare\",\"Léandre\",\"Léon\",\"Léonard\",\"Léopold\",\"Leu\",\"Loup\",\"Leufroy\",\"Libère\",\"Liétald\",\"Lionel\",\"Loïc\",\"Longin\",\"Lorrain\",\"Lorraine\",\"Lothaire\",\"Louis\",\"Loup\",\"Luc\",\"Lucas\",\"Lucien\",\"Ludolphe\",\"Ludovic\",\"Macaire\",\"Malo\",\"Mamert\",\"Manassé\",\"Marc\",\"Marceau\",\"Marcel\",\"Marcelin\",\"Marius\",\"Marseille\",\"Martial\",\"Martin\",\"Mathurin\",\"Matthias\",\"Mathias\",\"Matthieu\",\"Maugis\",\"Maurice\",\"Mauricet\",\"Maxence\",\"Maxime\",\"Maximilien\",\"Mayeul\",\"Médéric\",\"Melchior\",\"Mence\",\"Merlin\",\"Mérovée\",\"Michaël\",\"Michel\",\"Moïse\",\"Morgan\",\"Nathan\",\"Nathanaël\",\"Narcisse\",\"Néhémie\",\"Nestor\",\"Nestor\",\"Nicéphore\",\"Nicolas\",\"Noé\",\"Noël\",\"Norbert\",\"Normand\",\"Normands\",\"Octave\",\"Odilon\",\"Odon\",\"Oger\",\"Olivier\",\"Oury\",\"Pacôme\",\"Palémon\",\"Parfait\",\"Pascal\",\"Paterne\",\"Patrice\",\"Paul\",\"Pépin\",\"Perceval\",\"Philémon\",\"Philibert\",\"Philippe\",\"Philothée\",\"Pie\",\"Pierre\",\"Pierrick\",\"Prosper\",\"Quentin\",\"Raoul\",\"Raphaël\",\"Raymond\",\"Régis\",\"Réjean\",\"Rémi\",\"Renaud\",\"René\",\"Reybaud\",\"Richard\",\"Robert\",\"Roch\",\"Rodolphe\",\"Rodrigue\",\"Roger\",\"Roland\",\"Romain\",\"Romuald\",\"Roméo\",\"Rome\",\"Ronan\",\"Roselin\",\"Salomon\",\"Samuel\",\"Savin\",\"Savinien\",\"Scholastique\",\"Sébastien\",\"Séraphin\",\"Serge\",\"Séverin\",\"Sidoine\",\"Sigebert\",\"Sigismond\",\"Silvère\",\"Simon\",\"Siméon\",\"Sixte\",\"Stanislas\",\"Stéphane\",\"Stephan\",\"Sylvain\",\"Sylvestre\",\"Tancrède\",\"Tanguy\",\"Taurin\",\"Théodore\",\"Théodose\",\"Théophile\",\"Théophraste\",\"Thibault\",\"Thibert\",\"Thierry\",\"Thomas\",\"Timoléon\",\"Timothée\",\"Titien\",\"Tonnin\",\"Toussaint\",\"Trajan\",\"Tristan\",\"Turold\",\"Tim\",\"Ulysse\",\"Urbain\",\"Valentin\",\"Valère\",\"Valéry\",\"Venance\",\"Venant\",\"Venceslas\",\"Vianney\",\"Victor\",\"Victorien\",\"Victorin\",\"Vigile\",\"Vincent\",\"Vital\",\"Vitalien\",\"Vivien\",\"Waleran\",\"Wandrille\",\"Xavier\",\"Xénophon\",\"Yves\",\"Zacharie\",\"Zaché\",\"Zéphirin\"]\r\n            },\r\n\r\n            \"female\": {\r\n                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\r\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\r\n                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Lea\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"],\r\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\r\n                \"nl\": [\"Ada\", \"Arianne\", \"Afke\", \"Amanda\", \"Amber\", \"Amy\", \"Aniek\", \"Anita\", \"Anja\", \"Anna\", \"Anne\", \"Annelies\", \"Annemarie\", \"Annette\", \"Anouk\", \"Astrid\", \"Aukje\", \"Barbara\", \"Bianca\", \"Carla\", \"Carlijn\", \"Carolien\", \"Chantal\", \"Charlotte\", \"Claudia\", \"Daniëlle\", \"Debora\", \"Diane\", \"Dora\", \"Eline\", \"Elise\", \"Ella\", \"Ellen\", \"Emma\", \"Esmee\", \"Evelien\", \"Esther\", \"Erica\", \"Eva\", \"Femke\", \"Fleur\", \"Floor\", \"Froukje\", \"Gea\", \"Gerda\", \"Hanna\", \"Hanneke\", \"Heleen\", \"Hilde\", \"Ilona\", \"Ina\", \"Inge\", \"Ingrid\", \"Iris\", \"Isabel\", \"Isabelle\", \"Janneke\", \"Jasmijn\", \"Jeanine\", \"Jennifer\", \"Jessica\", \"Johanna\", \"Joke\", \"Julia\", \"Julie\", \"Karen\", \"Karin\", \"Katja\", \"Kim\", \"Lara\", \"Laura\", \"Lena\", \"Lianne\", \"Lieke\", \"Lilian\", \"Linda\", \"Lisa\", \"Lisanne\", \"Lotte\", \"Louise\", \"Maaike\", \"Manon\", \"Marga\", \"Maria\", \"Marissa\", \"Marit\", \"Marjolein\", \"Martine\", \"Marleen\", \"Melissa\", \"Merel\", \"Miranda\", \"Michelle\", \"Mirjam\", \"Mirthe\", \"Naomi\", \"Natalie\", 'Nienke', \"Nina\", \"Noortje\", \"Olivia\", \"Patricia\", \"Paula\", \"Paulien\", \"Ramona\", \"Ria\", \"Rianne\", \"Roos\", \"Rosanne\", \"Ruth\", \"Sabrina\", \"Sandra\", \"Sanne\", \"Sara\", \"Saskia\", \"Silvia\", \"Sofia\", \"Sophie\", \"Sonja\", \"Suzanne\", \"Tamara\", \"Tess\", \"Tessa\", \"Tineke\", \"Valerie\", \"Vanessa\", \"Veerle\", \"Vera\", \"Victoria\", \"Wendy\", \"Willeke\", \"Yvonne\", \"Zoë\"],\r\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\r\n                \"fr\": [\"Abdon\",\"Abel\",\"Abigaëlle\",\"Abigaïl\",\"Acacius\",\"Acanthe\",\"Adalbert\",\"Adalsinde\",\"Adegrine\",\"Adélaïde\",\"Adèle\",\"Adélie\",\"Adeline\",\"Adeltrude\",\"Adolphe\",\"Adonis\",\"Adrastée\",\"Adrehilde\",\"Adrienne\",\"Agathe\",\"Agilbert\",\"Aglaé\",\"Aignan\",\"Agneflète\",\"Agnès\",\"Agrippine\",\"Aimé\",\"Alaine\",\"Alaïs\",\"Albane\",\"Albérade\",\"Alberte\",\"Alcide\",\"Alcine\",\"Alcyone\",\"Aldegonde\",\"Aleth\",\"Alexandrine\",\"Alexine\",\"Alice\",\"Aliénor\",\"Aliette\",\"Aline\",\"Alix\",\"Alizé\",\"Aloïse\",\"Aloyse\",\"Alphonsine\",\"Althée\",\"Amaliane\",\"Amalthée\",\"Amande\",\"Amandine\",\"Amant\",\"Amarande\",\"Amaranthe\",\"Amaryllis\",\"Ambre\",\"Ambroisie\",\"Amélie\",\"Améthyste\",\"Aminte\",\"Anaël\",\"Anaïs\",\"Anastasie\",\"Anatole\",\"Ancelin\",\"Andrée\",\"Anémone\",\"Angadrême\",\"Angèle\",\"Angeline\",\"Angélique\",\"Angilbert\",\"Anicet\",\"Annabelle\",\"Anne\",\"Annette\",\"Annick\",\"Annie\",\"Annonciade\",\"Ansbert\",\"Anstrudie\",\"Anthelme\",\"Antigone\",\"Antoinette\",\"Antonine\",\"Aphélie\",\"Apolline\",\"Apollonie\",\"Aquiline\",\"Arabelle\",\"Arcadie\",\"Archange\",\"Argine\",\"Ariane\",\"Aricie\",\"Ariel\",\"Arielle\",\"Arlette\",\"Armance\",\"Armande\",\"Armandine\",\"Armelle\",\"Armide\",\"Armelle\",\"Armin\",\"Arnaud\",\"Arsène\",\"Arsinoé\",\"Artémis\",\"Arthur\",\"Ascelin\",\"Ascension\",\"Assomption\",\"Astarté\",\"Astérie\",\"Astrée\",\"Astrid\",\"Athalie\",\"Athanasie\",\"Athina\",\"Aube\",\"Albert\",\"Aude\",\"Audrey\",\"Augustine\",\"Aure\",\"Aurélie\",\"Aurélien\",\"Aurèle\",\"Aurore\",\"Auxence\",\"Aveline\",\"Abigaëlle\",\"Avoye\",\"Axelle\",\"Aymard\",\"Azalée\",\"Adèle\",\"Adeline\",\"Barbe\",\"Basilisse\",\"Bathilde\",\"Béatrice\",\"Béatrix\",\"Bénédicte\",\"Bérengère\",\"Bernadette\",\"Berthe\",\"Bertille\",\"Beuve\",\"Blanche\",\"Blanc\",\"Blandine\",\"Brigitte\",\"Brune\",\"Brunehilde\",\"Callista\",\"Camille\",\"Capucine\",\"Carine\",\"Caroline\",\"Cassandre\",\"Catherine\",\"Cécile\",\"Céleste\",\"Célestine\",\"Céline\",\"Chantal\",\"Charlène\",\"Charline\",\"Charlotte\",\"Chloé\",\"Christelle\",\"Christiane\",\"Christine\",\"Claire\",\"Clara\",\"Claude\",\"Claudine\",\"Clarisse\",\"Clémence\",\"Clémentine\",\"Cléo\",\"Clio\",\"Clotilde\",\"Coline\",\"Conception\",\"Constance\",\"Coralie\",\"Coraline\",\"Corentine\",\"Corinne\",\"Cyrielle\",\"Daniel\",\"Daniel\",\"Daphné\",\"Débora\",\"Delphine\",\"Denise\",\"Diane\",\"Dieudonné\",\"Dominique\",\"Doriane\",\"Dorothée\",\"Douce\",\"Édith\",\"Edmée\",\"Éléonore\",\"Éliane\",\"Élia\",\"Éliette\",\"Élisabeth\",\"Élise\",\"Ella\",\"Élodie\",\"Éloïse\",\"Elsa\",\"Émeline\",\"Émérance\",\"Émérentienne\",\"Émérencie\",\"Émilie\",\"Emma\",\"Emmanuelle\",\"Emmelie\",\"Ernestine\",\"Esther\",\"Estelle\",\"Eudoxie\",\"Eugénie\",\"Eulalie\",\"Euphrasie\",\"Eusébie\",\"Évangéline\",\"Eva\",\"Ève\",\"Évelyne\",\"Fanny\",\"Fantine\",\"Faustine\",\"Félicie\",\"Fernande\",\"Flavie\",\"Fleur\",\"Flore\",\"Florence\",\"Florie\",\"Fortuné\",\"France\",\"Francia\",\"Françoise\",\"Francine\",\"Gabrielle\",\"Gaëlle\",\"Garance\",\"Geneviève\",\"Georgette\",\"Gerberge\",\"Germaine\",\"Gertrude\",\"Gisèle\",\"Guenièvre\",\"Guilhemine\",\"Guillemette\",\"Gustave\",\"Gwenael\",\"Hélène\",\"Héloïse\",\"Henriette\",\"Hermine\",\"Hermione\",\"Hippolyte\",\"Honorine\",\"Hortense\",\"Huguette\",\"Ines\",\"Irène\",\"Irina\",\"Iris\",\"Isabeau\",\"Isabelle\",\"Iseult\",\"Isolde\",\"Ismérie\",\"Jacinthe\",\"Jacqueline\",\"Jade\",\"Janine\",\"Jeanne\",\"Jocelyne\",\"Joëlle\",\"Joséphine\",\"Judith\",\"Julia\",\"Julie\",\"Jules\",\"Juliette\",\"Justine\",\"Katy\",\"Kathy\",\"Katie\",\"Laura\",\"Laure\",\"Laureline\",\"Laurence\",\"Laurene\",\"Lauriane\",\"Laurianne\",\"Laurine\",\"Léa\",\"Léna\",\"Léonie\",\"Léon\",\"Léontine\",\"Lorraine\",\"Lucie\",\"Lucienne\",\"Lucille\",\"Ludivine\",\"Lydie\",\"Lydie\",\"Megane\",\"Madeleine\",\"Magali\",\"Maguelone\",\"Mallaury\",\"Manon\",\"Marceline\",\"Margot\",\"Marguerite\",\"Marianne\",\"Marie\",\"Myriam\",\"Marie\",\"Marine\",\"Marion\",\"Marlène\",\"Marthe\",\"Martine\",\"Mathilde\",\"Maud\",\"Maureen\",\"Mauricette\",\"Maxime\",\"Mélanie\",\"Melissa\",\"Mélissandre\",\"Mélisande\",\"Mélodie\",\"Michel\",\"Micheline\",\"Mireille\",\"Miriam\",\"Moïse\",\"Monique\",\"Morgane\",\"Muriel\",\"Mylène\",\"Nadège\",\"Nadine\",\"Nathalie\",\"Nicole\",\"Nicolette\",\"Nine\",\"Noël\",\"Noémie\",\"Océane\",\"Odette\",\"Odile\",\"Olive\",\"Olivia\",\"Olympe\",\"Ombline\",\"Ombeline\",\"Ophélie\",\"Oriande\",\"Oriane\",\"Ozanne\",\"Pascale\",\"Pascaline\",\"Paule\",\"Paulette\",\"Pauline\",\"Priscille\",\"Prisca\",\"Prisque\",\"Pécine\",\"Pélagie\",\"Pénélope\",\"Perrine\",\"Pétronille\",\"Philippine\",\"Philomène\",\"Philothée\",\"Primerose\",\"Prudence\",\"Pulchérie\",\"Quentine\",\"Quiéta\",\"Quintia\",\"Quintilla\",\"Rachel\",\"Raphaëlle\",\"Raymonde\",\"Rebecca\",\"Régine\",\"Réjeanne\",\"René\",\"Rita\",\"Rita\",\"Rolande\",\"Romane\",\"Rosalie\",\"Rose\",\"Roseline\",\"Sabine\",\"Salomé\",\"Sandra\",\"Sandrine\",\"Sarah\",\"Ségolène\",\"Séverine\",\"Sibylle\",\"Simone\",\"Sixt\",\"Solange\",\"Soline\",\"Solène\",\"Sophie\",\"Stéphanie\",\"Suzanne\",\"Sylvain\",\"Sylvie\",\"Tatiana\",\"Thaïs\",\"Théodora\",\"Thérèse\",\"Tiphaine\",\"Ursule\",\"Valentine\",\"Valérie\",\"Véronique\",\"Victoire\",\"Victorine\",\"Vinciane\",\"Violette\",\"Virginie\",\"Viviane\",\"Xavière\",\"Yolande\",\"Ysaline\",\"Yvette\",\"Yvonne\",\"Zélie\",\"Zita\",\"Zoé\"]\r\n            }\r\n        },\r\n\r\n        lastNames: {\r\n            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\r\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\r\n            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"],\r\n            // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/\r\n            \"nl\":[\"Albers\", \"Alblas\", \"Appelman\", \"Baars\", \"Baas\", \"Bakker\", \"Blank\", \"Bleeker\", \"Blok\", \"Blom\", \"Boer\", \"Boers\", \"Boldewijn\", \"Boon\", \"Boot\", \"Bos\", \"Bosch\", \"Bosma\", \"Bosman\", \"Bouma\", \"Bouman\", \"Bouwman\", \"Brands\", \"Brouwer\", \"Burger\", \"Buijs\", \"Buitenhuis\", \"Ceder\", \"Cohen\", \"Dekker\", \"Dekkers\", \"Dijkman\", \"Dijkstra\", \"Driessen\", \"Drost\", \"Engel\", \"Evers\", \"Faber\", \"Franke\", \"Gerritsen\", \"Goedhart\", \"Goossens\", \"Groen\", \"Groenenberg\", \"Groot\", \"Haan\", \"Hart\", \"Heemskerk\", \"Hendriks\", \"Hermans\", \"Hoekstra\", \"Hofman\", \"Hopman\", \"Huisman\", \"Jacobs\", \"Jansen\", \"Janssen\", \"Jonker\", \"Jaspers\", \"Keijzer\", \"Klaassen\", \"Klein\", \"Koek\", \"Koenders\", \"Kok\", \"Kool\", \"Koopman\", \"Koopmans\", \"Koning\", \"Koster\", \"Kramer\", \"Kroon\", \"Kuijpers\", \"Kuiper\", \"Kuipers\", \"Kurt\", \"Koster\", \"Kwakman\", \"Los\", \"Lubbers\", \"Maas\", \"Markus\", \"Martens\", \"Meijer\", \"Mol\", \"Molenaar\", \"Mulder\", \"Nieuwenhuis\", \"Peeters\", \"Peters\", \"Pengel\", \"Pieters\", \"Pool\", \"Post\", \"Postma\", \"Prins\", \"Pronk\", \"Reijnders\", \"Rietveld\", \"Roest\", \"Roos\", \"Sanders\", \"Schaap\", \"Scheffer\", \"Schenk\", \"Schilder\", \"Schipper\", \"Schmidt\", \"Scholten\", \"Schouten\", \"Schut\", \"Schutte\", \"Schuurman\", \"Simons\", \"Smeets\", \"Smit\", \"Smits\", \"Snel\", \"Swinkels\", \"Tas\", \"Terpstra\", \"Timmermans\", \"Tol\", \"Tromp\", \"Troost\", \"Valk\", \"Veenstra\", \"Veldkamp\", \"Verbeek\", \"Verheul\", \"Verhoeven\", \"Vermeer\", \"Vermeulen\", \"Verweij\", \"Vink\", \"Visser\", \"Voorn\", \"Vos\", \"Wagenaar\", \"Wiersema\", \"Willems\", \"Willemsen\", \"Witteveen\", \"Wolff\", \"Wolters\", \"Zijlstra\", \"Zwart\", \"de Beer\", \"de Boer\", \"de Bruijn\", \"de Bruin\", \"de Graaf\", \"de Groot\", \"de Haan\", \"de Haas\", \"de Jager\", \"de Jong\", \"de Jonge\", \"de Koning\", \"de Lange\", \"de Leeuw\", \"de Ridder\", \"de Rooij\", \"de Ruiter\", \"de Vos\", \"de Vries\", \"de Waal\", \"de Wit\", \"de Zwart\", \"van Beek\", \"van Boven\", \"van Dam\", \"van Dijk\", \"van Dongen\", \"van Doorn\", \"van Egmond\", \"van Eijk\", \"van Es\", \"van Gelder\", \"van Gelderen\", \"van Houten\", \"van Hulst\", \"van Kempen\", \"van Kesteren\", \"van Leeuwen\", \"van Loon\", \"van Mill\", \"van Noord\", \"van Ommen\", \"van Ommeren\", \"van Oosten\", \"van Oostveen\", \"van Rijn\", \"van Schaik\", \"van Veen\", \"van Vliet\", \"van Wijk\", \"van Wijngaarden\", \"van den Poel\", \"van de Pol\", \"van den Ploeg\", \"van de Ven\", \"van den Berg\", \"van den Bosch\", \"van den Brink\", \"van den Broek\", \"van den Heuvel\", \"van der Heijden\", \"van der Horst\", \"van der Hulst\", \"van der Kroon\", \"van der Laan\", \"van der Linden\", \"van der Meer\", \"van der Meij\", \"van der Meulen\", \"van der Molen\", \"van der Sluis\", \"van der Spek\", \"van der Veen\", \"van der Velde\", \"van der Velden\", \"van der Vliet\", \"van der Wal\"],\r\n            // https://surnames.behindthename.com/top/lists/england-wales/1991\r\n            \"uk\":[\"Smith\",\"Jones\",\"Williams\",\"Taylor\",\"Brown\",\"Davies\",\"Evans\",\"Wilson\",\"Thomas\",\"Johnson\",\"Roberts\",\"Robinson\",\"Thompson\",\"Wright\",\"Walker\",\"White\",\"Edwards\",\"Hughes\",\"Green\",\"Hall\",\"Lewis\",\"Harris\",\"Clarke\",\"Patel\",\"Jackson\",\"Wood\",\"Turner\",\"Martin\",\"Cooper\",\"Hill\",\"Ward\",\"Morris\",\"Moore\",\"Clark\",\"Lee\",\"King\",\"Baker\",\"Harrison\",\"Morgan\",\"Allen\",\"James\",\"Scott\",\"Phillips\",\"Watson\",\"Davis\",\"Parker\",\"Price\",\"Bennett\",\"Young\",\"Griffiths\",\"Mitchell\",\"Kelly\",\"Cook\",\"Carter\",\"Richardson\",\"Bailey\",\"Collins\",\"Bell\",\"Shaw\",\"Murphy\",\"Miller\",\"Cox\",\"Richards\",\"Khan\",\"Marshall\",\"Anderson\",\"Simpson\",\"Ellis\",\"Adams\",\"Singh\",\"Begum\",\"Wilkinson\",\"Foster\",\"Chapman\",\"Powell\",\"Webb\",\"Rogers\",\"Gray\",\"Mason\",\"Ali\",\"Hunt\",\"Hussain\",\"Campbell\",\"Matthews\",\"Owen\",\"Palmer\",\"Holmes\",\"Mills\",\"Barnes\",\"Knight\",\"Lloyd\",\"Butler\",\"Russell\",\"Barker\",\"Fisher\",\"Stevens\",\"Jenkins\",\"Murray\",\"Dixon\",\"Harvey\",\"Graham\",\"Pearson\",\"Ahmed\",\"Fletcher\",\"Walsh\",\"Kaur\",\"Gibson\",\"Howard\",\"Andrews\",\"Stewart\",\"Elliott\",\"Reynolds\",\"Saunders\",\"Payne\",\"Fox\",\"Ford\",\"Pearce\",\"Day\",\"Brooks\",\"West\",\"Lawrence\",\"Cole\",\"Atkinson\",\"Bradley\",\"Spencer\",\"Gill\",\"Dawson\",\"Ball\",\"Burton\",\"O'brien\",\"Watts\",\"Rose\",\"Booth\",\"Perry\",\"Ryan\",\"Grant\",\"Wells\",\"Armstrong\",\"Francis\",\"Rees\",\"Hayes\",\"Hart\",\"Hudson\",\"Newman\",\"Barrett\",\"Webster\",\"Hunter\",\"Gregory\",\"Carr\",\"Lowe\",\"Page\",\"Marsh\",\"Riley\",\"Dunn\",\"Woods\",\"Parsons\",\"Berry\",\"Stone\",\"Reid\",\"Holland\",\"Hawkins\",\"Harding\",\"Porter\",\"Robertson\",\"Newton\",\"Oliver\",\"Reed\",\"Kennedy\",\"Williamson\",\"Bird\",\"Gardner\",\"Shah\",\"Dean\",\"Lane\",\"Cooke\",\"Bates\",\"Henderson\",\"Parry\",\"Burgess\",\"Bishop\",\"Walton\",\"Burns\",\"Nicholson\",\"Shepherd\",\"Ross\",\"Cross\",\"Long\",\"Freeman\",\"Warren\",\"Nicholls\",\"Hamilton\",\"Byrne\",\"Sutton\",\"Mcdonald\",\"Yates\",\"Hodgson\",\"Robson\",\"Curtis\",\"Hopkins\",\"O'connor\",\"Harper\",\"Coleman\",\"Watkins\",\"Moss\",\"Mccarthy\",\"Chambers\",\"O'neill\",\"Griffin\",\"Sharp\",\"Hardy\",\"Wheeler\",\"Potter\",\"Osborne\",\"Johnston\",\"Gordon\",\"Doyle\",\"Wallace\",\"George\",\"Jordan\",\"Hutchinson\",\"Rowe\",\"Burke\",\"May\",\"Pritchard\",\"Gilbert\",\"Willis\",\"Higgins\",\"Read\",\"Miles\",\"Stevenson\",\"Stephenson\",\"Hammond\",\"Arnold\",\"Buckley\",\"Walters\",\"Hewitt\",\"Barber\",\"Nelson\",\"Slater\",\"Austin\",\"Sullivan\",\"Whitehead\",\"Mann\",\"Frost\",\"Lambert\",\"Stephens\",\"Blake\",\"Akhtar\",\"Lynch\",\"Goodwin\",\"Barton\",\"Woodward\",\"Thomson\",\"Cunningham\",\"Quinn\",\"Barnett\",\"Baxter\",\"Bibi\",\"Clayton\",\"Nash\",\"Greenwood\",\"Jennings\",\"Holt\",\"Kemp\",\"Poole\",\"Gallagher\",\"Bond\",\"Stokes\",\"Tucker\",\"Davidson\",\"Fowler\",\"Heath\",\"Norman\",\"Middleton\",\"Lawson\",\"Banks\",\"French\",\"Stanley\",\"Jarvis\",\"Gibbs\",\"Ferguson\",\"Hayward\",\"Carroll\",\"Douglas\",\"Dickinson\",\"Todd\",\"Barlow\",\"Peters\",\"Lucas\",\"Knowles\",\"Hartley\",\"Miah\",\"Simmons\",\"Morton\",\"Alexander\",\"Field\",\"Morrison\",\"Norris\",\"Townsend\",\"Preston\",\"Hancock\",\"Thornton\",\"Baldwin\",\"Burrows\",\"Briggs\",\"Parkinson\",\"Reeves\",\"Macdonald\",\"Lamb\",\"Black\",\"Abbott\",\"Sanders\",\"Thorpe\",\"Holden\",\"Tomlinson\",\"Perkins\",\"Ashton\",\"Rhodes\",\"Fuller\",\"Howe\",\"Bryant\",\"Vaughan\",\"Dale\",\"Davey\",\"Weston\",\"Bartlett\",\"Whittaker\",\"Davison\",\"Kent\",\"Skinner\",\"Birch\",\"Morley\",\"Daniels\",\"Glover\",\"Howell\",\"Cartwright\",\"Pugh\",\"Humphreys\",\"Goddard\",\"Brennan\",\"Wall\",\"Kirby\",\"Bowen\",\"Savage\",\"Bull\",\"Wong\",\"Dobson\",\"Smart\",\"Wilkins\",\"Kirk\",\"Fraser\",\"Duffy\",\"Hicks\",\"Patterson\",\"Bradshaw\",\"Little\",\"Archer\",\"Warner\",\"Waters\",\"O'sullivan\",\"Farrell\",\"Brookes\",\"Atkins\",\"Kay\",\"Dodd\",\"Bentley\",\"Flynn\",\"John\",\"Schofield\",\"Short\",\"Haynes\",\"Wade\",\"Butcher\",\"Henry\",\"Sanderson\",\"Crawford\",\"Sheppard\",\"Bolton\",\"Coates\",\"Giles\",\"Gould\",\"Houghton\",\"Gibbons\",\"Pratt\",\"Manning\",\"Law\",\"Hooper\",\"Noble\",\"Dyer\",\"Rahman\",\"Clements\",\"Moran\",\"Sykes\",\"Chan\",\"Doherty\",\"Connolly\",\"Joyce\",\"Franklin\",\"Hobbs\",\"Coles\",\"Herbert\",\"Steele\",\"Kerr\",\"Leach\",\"Winter\",\"Owens\",\"Duncan\",\"Naylor\",\"Fleming\",\"Horton\",\"Finch\",\"Fitzgerald\",\"Randall\",\"Carpenter\",\"Marsden\",\"Browne\",\"Garner\",\"Pickering\",\"Hale\",\"Dennis\",\"Vincent\",\"Chadwick\",\"Chandler\",\"Sharpe\",\"Nolan\",\"Lyons\",\"Hurst\",\"Collier\",\"Peacock\",\"Howarth\",\"Faulkner\",\"Rice\",\"Pollard\",\"Welch\",\"Norton\",\"Gough\",\"Sinclair\",\"Blackburn\",\"Bryan\",\"Conway\",\"Power\",\"Cameron\",\"Daly\",\"Allan\",\"Hanson\",\"Gardiner\",\"Boyle\",\"Myers\",\"Turnbull\",\"Wallis\",\"Mahmood\",\"Sims\",\"Swift\",\"Iqbal\",\"Pope\",\"Brady\",\"Chamberlain\",\"Rowley\",\"Tyler\",\"Farmer\",\"Metcalfe\",\"Hilton\",\"Godfrey\",\"Holloway\",\"Parkin\",\"Bray\",\"Talbot\",\"Donnelly\",\"Nixon\",\"Charlton\",\"Benson\",\"Whitehouse\",\"Barry\",\"Hope\",\"Lord\",\"North\",\"Storey\",\"Connor\",\"Potts\",\"Bevan\",\"Hargreaves\",\"Mclean\",\"Mistry\",\"Bruce\",\"Howells\",\"Hyde\",\"Parkes\",\"Wyatt\",\"Fry\",\"Lees\",\"O'donnell\",\"Craig\",\"Forster\",\"Mckenzie\",\"Humphries\",\"Mellor\",\"Carey\",\"Ingram\",\"Summers\",\"Leonard\"],\r\n            // https://surnames.behindthename.com/top/lists/germany/2017\r\n            \"de\": [\"Müller\",\"Schmidt\",\"Schneider\",\"Fischer\",\"Weber\",\"Meyer\",\"Wagner\",\"Becker\",\"Schulz\",\"Hoffmann\",\"Schäfer\",\"Koch\",\"Bauer\",\"Richter\",\"Klein\",\"Wolf\",\"Schröder\",\"Neumann\",\"Schwarz\",\"Zimmermann\",\"Braun\",\"Krüger\",\"Hofmann\",\"Hartmann\",\"Lange\",\"Schmitt\",\"Werner\",\"Schmitz\",\"Krause\",\"Meier\",\"Lehmann\",\"Schmid\",\"Schulze\",\"Maier\",\"Köhler\",\"Herrmann\",\"König\",\"Walter\",\"Mayer\",\"Huber\",\"Kaiser\",\"Fuchs\",\"Peters\",\"Lang\",\"Scholz\",\"Möller\",\"Weiß\",\"Jung\",\"Hahn\",\"Schubert\",\"Vogel\",\"Friedrich\",\"Keller\",\"Günther\",\"Frank\",\"Berger\",\"Winkler\",\"Roth\",\"Beck\",\"Lorenz\",\"Baumann\",\"Franke\",\"Albrecht\",\"Schuster\",\"Simon\",\"Ludwig\",\"Böhm\",\"Winter\",\"Kraus\",\"Martin\",\"Schumacher\",\"Krämer\",\"Vogt\",\"Stein\",\"Jäger\",\"Otto\",\"Sommer\",\"Groß\",\"Seidel\",\"Heinrich\",\"Brandt\",\"Haas\",\"Schreiber\",\"Graf\",\"Schulte\",\"Dietrich\",\"Ziegler\",\"Kuhn\",\"Kühn\",\"Pohl\",\"Engel\",\"Horn\",\"Busch\",\"Bergmann\",\"Thomas\",\"Voigt\",\"Sauer\",\"Arnold\",\"Wolff\",\"Pfeiffer\"],\r\n            // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/\r\n            \"jp\": [\"Sato\",\"Suzuki\",\"Takahashi\",\"Tanaka\",\"Watanabe\",\"Ito\",\"Yamamoto\",\"Nakamura\",\"Kobayashi\",\"Kato\",\"Yoshida\",\"Yamada\",\"Sasaki\",\"Yamaguchi\",\"Saito\",\"Matsumoto\",\"Inoue\",\"Kimura\",\"Hayashi\",\"Shimizu\",\"Yamazaki\",\"Mori\",\"Abe\",\"Ikeda\",\"Hashimoto\",\"Yamashita\",\"Ishikawa\",\"Nakajima\",\"Maeda\",\"Fujita\",\"Ogawa\",\"Goto\",\"Okada\",\"Hasegawa\",\"Murakami\",\"Kondo\",\"Ishii\",\"Saito\",\"Sakamoto\",\"Endo\",\"Aoki\",\"Fujii\",\"Nishimura\",\"Fukuda\",\"Ota\",\"Miura\",\"Fujiwara\",\"Okamoto\",\"Matsuda\",\"Nakagawa\",\"Nakano\",\"Harada\",\"Ono\",\"Tamura\",\"Takeuchi\",\"Kaneko\",\"Wada\",\"Nakayama\",\"Ishida\",\"Ueda\",\"Morita\",\"Hara\",\"Shibata\",\"Sakai\",\"Kudo\",\"Yokoyama\",\"Miyazaki\",\"Miyamoto\",\"Uchida\",\"Takagi\",\"Ando\",\"Taniguchi\",\"Ohno\",\"Maruyama\",\"Imai\",\"Takada\",\"Fujimoto\",\"Takeda\",\"Murata\",\"Ueno\",\"Sugiyama\",\"Masuda\",\"Sugawara\",\"Hirano\",\"Kojima\",\"Otsuka\",\"Chiba\",\"Kubo\",\"Matsui\",\"Iwasaki\",\"Sakurai\",\"Kinoshita\",\"Noguchi\",\"Matsuo\",\"Nomura\",\"Kikuchi\",\"Sano\",\"Onishi\",\"Sugimoto\",\"Arai\"],\r\n            // http://www.lowchensaustralia.com/names/popular-spanish-names.htm\r\n            \"es\": [\"Garcia\",\"Fernandez\",\"Lopez\",\"Martinez\",\"Gonzalez\",\"Rodriguez\",\"Sanchez\",\"Perez\",\"Martin\",\"Gomez\",\"Ruiz\",\"Diaz\",\"Hernandez\",\"Alvarez\",\"Jimenez\",\"Moreno\",\"Munoz\",\"Alonso\",\"Romero\",\"Navarro\",\"Gutierrez\",\"Torres\",\"Dominguez\",\"Gil\",\"Vazquez\",\"Blanco\",\"Serrano\",\"Ramos\",\"Castro\",\"Suarez\",\"Sanz\",\"Rubio\",\"Ortega\",\"Molina\",\"Delgado\",\"Ortiz\",\"Morales\",\"Ramirez\",\"Marin\",\"Iglesias\",\"Santos\",\"Castillo\",\"Garrido\",\"Calvo\",\"Pena\",\"Cruz\",\"Cano\",\"Nunez\",\"Prieto\",\"Diez\",\"Lozano\",\"Vidal\",\"Pascual\",\"Ferrer\",\"Medina\",\"Vega\",\"Leon\",\"Herrero\",\"Vicente\",\"Mendez\",\"Guerrero\",\"Fuentes\",\"Campos\",\"Nieto\",\"Cortes\",\"Caballero\",\"Ibanez\",\"Lorenzo\",\"Pastor\",\"Gimenez\",\"Saez\",\"Soler\",\"Marquez\",\"Carrasco\",\"Herrera\",\"Montero\",\"Arias\",\"Crespo\",\"Flores\",\"Andres\",\"Aguilar\",\"Hidalgo\",\"Cabrera\",\"Mora\",\"Duran\",\"Velasco\",\"Rey\",\"Pardo\",\"Roman\",\"Vila\",\"Bravo\",\"Merino\",\"Moya\",\"Soto\",\"Izquierdo\",\"Reyes\",\"Redondo\",\"Marcos\",\"Carmona\",\"Menendez\"],\r\n            // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France\r\n            \"fr\": [\"Martin\",\"Bernard\",\"Thomas\",\"Petit\",\"Robert\",\"Richard\",\"Durand\",\"Dubois\",\"Moreau\",\"Laurent\",\"Simon\",\"Michel\",\"Lefèvre\",\"Leroy\",\"Roux\",\"David\",\"Bertrand\",\"Morel\",\"Fournier\",\"Girard\",\"Bonnet\",\"Dupont\",\"Lambert\",\"Fontaine\",\"Rousseau\",\"Vincent\",\"Müller\",\"Lefèvre\",\"Faure\",\"André\",\"Mercier\",\"Blanc\",\"Guérin\",\"Boyer\",\"Garnier\",\"Chevalier\",\"François\",\"Legrand\",\"Gauthier\",\"Garcia\",\"Perrin\",\"Robin\",\"Clément\",\"Morin\",\"Nicolas\",\"Henry\",\"Roussel\",\"Matthieu\",\"Gautier\",\"Masson\",\"Marchand\",\"Duval\",\"Denis\",\"Dumont\",\"Marie\",\"Lemaire\",\"Noël\",\"Meyer\",\"Dufour\",\"Meunier\",\"Brun\",\"Blanchard\",\"Giraud\",\"Joly\",\"Rivière\",\"Lucas\",\"Brunet\",\"Gaillard\",\"Barbier\",\"Arnaud\",\"Martínez\",\"Gérard\",\"Roche\",\"Renard\",\"Schmitt\",\"Roy\",\"Leroux\",\"Colin\",\"Vidal\",\"Caron\",\"Picard\",\"Roger\",\"Fabre\",\"Aubert\",\"Lemoine\",\"Renaud\",\"Dumas\",\"Lacroix\",\"Olivier\",\"Philippe\",\"Bourgeois\",\"Pierre\",\"Benoît\",\"Rey\",\"Leclerc\",\"Payet\",\"Rolland\",\"Leclercq\",\"Guillaume\",\"Lecomte\",\"López\",\"Jean\",\"Dupuy\",\"Guillot\",\"Hubert\",\"Berger\",\"Carpentier\",\"Sánchez\",\"Dupuis\",\"Moulin\",\"Louis\",\"Deschamps\",\"Huet\",\"Vasseur\",\"Perez\",\"Boucher\",\"Fleury\",\"Royer\",\"Klein\",\"Jacquet\",\"Adam\",\"Paris\",\"Poirier\",\"Marty\",\"Aubry\",\"Guyot\",\"Carré\",\"Charles\",\"Renault\",\"Charpentier\",\"Ménard\",\"Maillard\",\"Baron\",\"Bertin\",\"Bailly\",\"Hervé\",\"Schneider\",\"Fernández\",\"Le GallGall\",\"Collet\",\"Léger\",\"Bouvier\",\"Julien\",\"Prévost\",\"Millet\",\"Perrot\",\"Daniel\",\"Le RouxRoux\",\"Cousin\",\"Germain\",\"Breton\",\"Besson\",\"Langlois\",\"Rémi\",\"Le GoffGoff\",\"Pelletier\",\"Lévêque\",\"Perrier\",\"Leblanc\",\"Barré\",\"Lebrun\",\"Marchal\",\"Weber\",\"Mallet\",\"Hamon\",\"Boulanger\",\"Jacob\",\"Monnier\",\"Michaud\",\"Rodríguez\",\"Guichard\",\"Gillet\",\"Étienne\",\"Grondin\",\"Poulain\",\"Tessier\",\"Chevallier\",\"Collin\",\"Chauvin\",\"Da SilvaSilva\",\"Bouchet\",\"Gay\",\"Lemaître\",\"Bénard\",\"Maréchal\",\"Humbert\",\"Reynaud\",\"Antoine\",\"Hoarau\",\"Perret\",\"Barthélemy\",\"Cordier\",\"Pichon\",\"Lejeune\",\"Gilbert\",\"Lamy\",\"Delaunay\",\"Pasquier\",\"Carlier\",\"LaporteLaporte\"]\r\n        },\r\n\r\n        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\r\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua & Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Ascension Island\",\"abbreviation\":\"AC\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia & Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canary Islands\",\"abbreviation\":\"IC\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Caribbean Netherlands\",\"abbreviation\":\"BQ\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Ceuta & Melilla\",\"abbreviation\":\"EA\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Diego Garcia\",\"abbreviation\":\"DG\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kosovo\",\"abbreviation\":\"XK\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar (Burma)\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia & South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"St. Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"St. Helena\",\"abbreviation\":\"SH\"},{\"name\":\"St. Kitts & Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"St. Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"St. Martin\",\"abbreviation\":\"MF\"},{\"name\":\"St. Pierre & Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"St. Vincent & Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard & Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad & Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tristan da Cunha\",\"abbreviation\":\"TA\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks & Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wallis & Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\r\n\r\n                counties: {\r\n            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\r\n            \"uk\": [\r\n                {name: 'Bath and North East Somerset'},\r\n                {name: 'Aberdeenshire'},\r\n                {name: 'Anglesey'},\r\n                {name: 'Angus'},\r\n                {name: 'Bedford'},\r\n                {name: 'Blackburn with Darwen'},\r\n                {name: 'Blackpool'},\r\n                {name: 'Bournemouth'},\r\n                {name: 'Bracknell Forest'},\r\n                {name: 'Brighton & Hove'},\r\n                {name: 'Bristol'},\r\n                {name: 'Buckinghamshire'},\r\n                {name: 'Cambridgeshire'},\r\n                {name: 'Carmarthenshire'},\r\n                {name: 'Central Bedfordshire'},\r\n                {name: 'Ceredigion'},\r\n                {name: 'Cheshire East'},\r\n                {name: 'Cheshire West and Chester'},\r\n                {name: 'Clackmannanshire'},\r\n                {name: 'Conwy'},\r\n                {name: 'Cornwall'},\r\n                {name: 'County Antrim'},\r\n                {name: 'County Armagh'},\r\n                {name: 'County Down'},\r\n                {name: 'County Durham'},\r\n                {name: 'County Fermanagh'},\r\n                {name: 'County Londonderry'},\r\n                {name: 'County Tyrone'},\r\n                {name: 'Cumbria'},\r\n                {name: 'Darlington'},\r\n                {name: 'Denbighshire'},\r\n                {name: 'Derby'},\r\n                {name: 'Derbyshire'},\r\n                {name: 'Devon'},\r\n                {name: 'Dorset'},\r\n                {name: 'Dumfries and Galloway'},\r\n                {name: 'Dundee'},\r\n                {name: 'East Lothian'},\r\n                {name: 'East Riding of Yorkshire'},\r\n                {name: 'East Sussex'},\r\n                {name: 'Edinburgh?'},\r\n                {name: 'Essex'},\r\n                {name: 'Falkirk'},\r\n                {name: 'Fife'},\r\n                {name: 'Flintshire'},\r\n                {name: 'Gloucestershire'},\r\n                {name: 'Greater London'},\r\n                {name: 'Greater Manchester'},\r\n                {name: 'Gwent'},\r\n                {name: 'Gwynedd'},\r\n                {name: 'Halton'},\r\n                {name: 'Hampshire'},\r\n                {name: 'Hartlepool'},\r\n                {name: 'Herefordshire'},\r\n                {name: 'Hertfordshire'},\r\n                {name: 'Highlands'},\r\n                {name: 'Hull'},\r\n                {name: 'Isle of Wight'},\r\n                {name: 'Isles of Scilly'},\r\n                {name: 'Kent'},\r\n                {name: 'Lancashire'},\r\n                {name: 'Leicester'},\r\n                {name: 'Leicestershire'},\r\n                {name: 'Lincolnshire'},\r\n                {name: 'Lothian'},\r\n                {name: 'Luton'},\r\n                {name: 'Medway'},\r\n                {name: 'Merseyside'},\r\n                {name: 'Mid Glamorgan'},\r\n                {name: 'Middlesbrough'},\r\n                {name: 'Milton Keynes'},\r\n                {name: 'Monmouthshire'},\r\n                {name: 'Moray'},\r\n                {name: 'Norfolk'},\r\n                {name: 'North East Lincolnshire'},\r\n                {name: 'North Lincolnshire'},\r\n                {name: 'North Somerset'},\r\n                {name: 'North Yorkshire'},\r\n                {name: 'Northamptonshire'},\r\n                {name: 'Northumberland'},\r\n                {name: 'Nottingham'},\r\n                {name: 'Nottinghamshire'},\r\n                {name: 'Oxfordshire'},\r\n                {name: 'Pembrokeshire'},\r\n                {name: 'Perth and Kinross'},\r\n                {name: 'Peterborough'},\r\n                {name: 'Plymouth'},\r\n                {name: 'Poole'},\r\n                {name: 'Portsmouth'},\r\n                {name: 'Powys'},\r\n                {name: 'Reading'},\r\n                {name: 'Redcar and Cleveland'},\r\n                {name: 'Rutland'},\r\n                {name: 'Scottish Borders'},\r\n                {name: 'Shropshire'},\r\n                {name: 'Slough'},\r\n                {name: 'Somerset'},\r\n                {name: 'South Glamorgan'},\r\n                {name: 'South Gloucestershire'},\r\n                {name: 'South Yorkshire'},\r\n                {name: 'Southampton'},\r\n                {name: 'Southend-on-Sea'},\r\n                {name: 'Staffordshire'},\r\n                {name: 'Stirlingshire'},\r\n                {name: 'Stockton-on-Tees'},\r\n                {name: 'Stoke-on-Trent'},\r\n                {name: 'Strathclyde'},\r\n                {name: 'Suffolk'},\r\n                {name: 'Surrey'},\r\n                {name: 'Swindon'},\r\n                {name: 'Telford and Wrekin'},\r\n                {name: 'Thurrock'},\r\n                {name: 'Torbay'},\r\n                {name: 'Tyne and Wear'},\r\n                {name: 'Warrington'},\r\n                {name: 'Warwickshire'},\r\n                {name: 'West Berkshire'},\r\n                {name: 'West Glamorgan'},\r\n                {name: 'West Lothian'},\r\n                {name: 'West Midlands'},\r\n                {name: 'West Sussex'},\r\n                {name: 'West Yorkshire'},\r\n                {name: 'Western Isles'},\r\n                {name: 'Wiltshire'},\r\n                {name: 'Windsor and Maidenhead'},\r\n                {name: 'Wokingham'},\r\n                {name: 'Worcestershire'},\r\n                {name: 'Wrexham'},\r\n                {name: 'York'}]\r\n                                },\r\n        provinces: {\r\n            \"ca\": [\r\n                {name: 'Alberta', abbreviation: 'AB'},\r\n                {name: 'British Columbia', abbreviation: 'BC'},\r\n                {name: 'Manitoba', abbreviation: 'MB'},\r\n                {name: 'New Brunswick', abbreviation: 'NB'},\r\n                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\r\n                {name: 'Nova Scotia', abbreviation: 'NS'},\r\n                {name: 'Ontario', abbreviation: 'ON'},\r\n                {name: 'Prince Edward Island', abbreviation: 'PE'},\r\n                {name: 'Quebec', abbreviation: 'QC'},\r\n                {name: 'Saskatchewan', abbreviation: 'SK'},\r\n\r\n                // The case could be made that the following are not actually provinces\r\n                // since they are technically considered \"territories\" however they all\r\n                // look the same on an envelope!\r\n                {name: 'Northwest Territories', abbreviation: 'NT'},\r\n                {name: 'Nunavut', abbreviation: 'NU'},\r\n                {name: 'Yukon', abbreviation: 'YT'}\r\n            ],\r\n            \"it\": [\r\n                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\r\n                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\r\n                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\r\n                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\r\n                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\r\n                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\r\n                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\r\n                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\r\n                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\r\n                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\r\n                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\r\n                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\r\n                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\r\n                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\r\n                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\r\n                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\r\n                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\r\n                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\r\n                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\r\n                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\r\n                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\r\n                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\r\n                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\r\n                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\r\n                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\r\n                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\r\n                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\r\n                { name: \"Como\", abbreviation: \"CO\", code: 13 },\r\n                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\r\n                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\r\n                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\r\n                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\r\n                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\r\n                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\r\n                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\r\n                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\r\n                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\r\n                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\r\n                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\r\n                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\r\n                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\r\n                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\r\n                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\r\n                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\r\n                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\r\n                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\r\n                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\r\n                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\r\n                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\r\n                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\r\n                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\r\n                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\r\n                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\r\n                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\r\n                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\r\n                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\r\n                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\r\n                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\r\n                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\r\n                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\r\n                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\r\n                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\r\n                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\r\n                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\r\n                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\r\n                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\r\n                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\r\n                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\r\n                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\r\n                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\r\n                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\r\n                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\r\n                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\r\n                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\r\n                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\r\n                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\r\n                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\r\n                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\r\n                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\r\n                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\r\n                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\r\n                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\r\n                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\r\n                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\r\n                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\r\n                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\r\n                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\r\n                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\r\n                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\r\n                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\r\n                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\r\n                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\r\n                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\r\n                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\r\n                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\r\n                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\r\n                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\r\n                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\r\n                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\r\n                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\r\n                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\r\n                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\r\n                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\r\n                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\r\n                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\r\n                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\r\n                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\r\n                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\r\n                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\r\n                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\r\n            ]\r\n        },\r\n\r\n            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\r\n        nationalities: [\r\n           {name: 'Afghan'},\r\n           {name: 'Albanian'},\r\n           {name: 'Algerian'},\r\n           {name: 'American'},\r\n           {name: 'Andorran'},\r\n           {name: 'Angolan'},\r\n           {name: 'Antiguans'},\r\n           {name: 'Argentinean'},\r\n           {name: 'Armenian'},\r\n           {name: 'Australian'},\r\n           {name: 'Austrian'},\r\n           {name: 'Azerbaijani'},\r\n           {name: 'Bahami'},\r\n           {name: 'Bahraini'},\r\n           {name: 'Bangladeshi'},\r\n           {name: 'Barbadian'},\r\n           {name: 'Barbudans'},\r\n           {name: 'Batswana'},\r\n           {name: 'Belarusian'},\r\n           {name: 'Belgian'},\r\n           {name: 'Belizean'},\r\n           {name: 'Beninese'},\r\n           {name: 'Bhutanese'},\r\n           {name: 'Bolivian'},\r\n           {name: 'Bosnian'},\r\n           {name: 'Brazilian'},\r\n           {name: 'British'},\r\n           {name: 'Bruneian'},\r\n           {name: 'Bulgarian'},\r\n           {name: 'Burkinabe'},\r\n           {name: 'Burmese'},\r\n           {name: 'Burundian'},\r\n           {name: 'Cambodian'},\r\n           {name: 'Cameroonian'},\r\n           {name: 'Canadian'},\r\n           {name: 'Cape Verdean'},\r\n           {name: 'Central African'},\r\n           {name: 'Chadian'},\r\n           {name: 'Chilean'},\r\n           {name: 'Chinese'},\r\n           {name: 'Colombian'},\r\n           {name: 'Comoran'},\r\n           {name: 'Congolese'},\r\n           {name: 'Costa Rican'},\r\n           {name: 'Croatian'},\r\n           {name: 'Cuban'},\r\n           {name: 'Cypriot'},\r\n           {name: 'Czech'},\r\n           {name: 'Danish'},\r\n           {name: 'Djibouti'},\r\n           {name: 'Dominican'},\r\n           {name: 'Dutch'},\r\n           {name: 'East Timorese'},\r\n           {name: 'Ecuadorean'},\r\n           {name: 'Egyptian'},\r\n           {name: 'Emirian'},\r\n           {name: 'Equatorial Guinean'},\r\n           {name: 'Eritrean'},\r\n           {name: 'Estonian'},\r\n           {name: 'Ethiopian'},\r\n           {name: 'Fijian'},\r\n           {name: 'Filipino'},\r\n           {name: 'Finnish'},\r\n           {name: 'French'},\r\n           {name: 'Gabonese'},\r\n           {name: 'Gambian'},\r\n           {name: 'Georgian'},\r\n           {name: 'German'},\r\n           {name: 'Ghanaian'},\r\n           {name: 'Greek'},\r\n           {name: 'Grenadian'},\r\n           {name: 'Guatemalan'},\r\n           {name: 'Guinea-Bissauan'},\r\n           {name: 'Guinean'},\r\n           {name: 'Guyanese'},\r\n           {name: 'Haitian'},\r\n           {name: 'Herzegovinian'},\r\n           {name: 'Honduran'},\r\n           {name: 'Hungarian'},\r\n           {name: 'I-Kiribati'},\r\n           {name: 'Icelander'},\r\n           {name: 'Indian'},\r\n           {name: 'Indonesian'},\r\n           {name: 'Iranian'},\r\n           {name: 'Iraqi'},\r\n           {name: 'Irish'},\r\n           {name: 'Israeli'},\r\n           {name: 'Italian'},\r\n           {name: 'Ivorian'},\r\n           {name: 'Jamaican'},\r\n           {name: 'Japanese'},\r\n           {name: 'Jordanian'},\r\n           {name: 'Kazakhstani'},\r\n           {name: 'Kenyan'},\r\n           {name: 'Kittian and Nevisian'},\r\n           {name: 'Kuwaiti'},\r\n           {name: 'Kyrgyz'},\r\n           {name: 'Laotian'},\r\n           {name: 'Latvian'},\r\n           {name: 'Lebanese'},\r\n           {name: 'Liberian'},\r\n           {name: 'Libyan'},\r\n           {name: 'Liechtensteiner'},\r\n           {name: 'Lithuanian'},\r\n           {name: 'Luxembourger'},\r\n           {name: 'Macedonian'},\r\n           {name: 'Malagasy'},\r\n           {name: 'Malawian'},\r\n           {name: 'Malaysian'},\r\n           {name: 'Maldivan'},\r\n           {name: 'Malian'},\r\n           {name: 'Maltese'},\r\n           {name: 'Marshallese'},\r\n           {name: 'Mauritanian'},\r\n           {name: 'Mauritian'},\r\n           {name: 'Mexican'},\r\n           {name: 'Micronesian'},\r\n           {name: 'Moldovan'},\r\n           {name: 'Monacan'},\r\n           {name: 'Mongolian'},\r\n           {name: 'Moroccan'},\r\n           {name: 'Mosotho'},\r\n           {name: 'Motswana'},\r\n           {name: 'Mozambican'},\r\n           {name: 'Namibian'},\r\n           {name: 'Nauruan'},\r\n           {name: 'Nepalese'},\r\n           {name: 'New Zealander'},\r\n           {name: 'Nicaraguan'},\r\n           {name: 'Nigerian'},\r\n           {name: 'Nigerien'},\r\n           {name: 'North Korean'},\r\n           {name: 'Northern Irish'},\r\n           {name: 'Norwegian'},\r\n           {name: 'Omani'},\r\n           {name: 'Pakistani'},\r\n           {name: 'Palauan'},\r\n           {name: 'Panamanian'},\r\n           {name: 'Papua New Guinean'},\r\n           {name: 'Paraguayan'},\r\n           {name: 'Peruvian'},\r\n           {name: 'Polish'},\r\n           {name: 'Portuguese'},\r\n           {name: 'Qatari'},\r\n           {name: 'Romani'},\r\n           {name: 'Russian'},\r\n           {name: 'Rwandan'},\r\n           {name: 'Saint Lucian'},\r\n           {name: 'Salvadoran'},\r\n           {name: 'Samoan'},\r\n           {name: 'San Marinese'},\r\n           {name: 'Sao Tomean'},\r\n           {name: 'Saudi'},\r\n           {name: 'Scottish'},\r\n           {name: 'Senegalese'},\r\n           {name: 'Serbian'},\r\n           {name: 'Seychellois'},\r\n           {name: 'Sierra Leonean'},\r\n           {name: 'Singaporean'},\r\n           {name: 'Slovakian'},\r\n           {name: 'Slovenian'},\r\n           {name: 'Solomon Islander'},\r\n           {name: 'Somali'},\r\n           {name: 'South African'},\r\n           {name: 'South Korean'},\r\n           {name: 'Spanish'},\r\n           {name: 'Sri Lankan'},\r\n           {name: 'Sudanese'},\r\n           {name: 'Surinamer'},\r\n           {name: 'Swazi'},\r\n           {name: 'Swedish'},\r\n           {name: 'Swiss'},\r\n           {name: 'Syrian'},\r\n           {name: 'Taiwanese'},\r\n           {name: 'Tajik'},\r\n           {name: 'Tanzanian'},\r\n           {name: 'Thai'},\r\n           {name: 'Togolese'},\r\n           {name: 'Tongan'},\r\n           {name: 'Trinidadian or Tobagonian'},\r\n           {name: 'Tunisian'},\r\n           {name: 'Turkish'},\r\n           {name: 'Tuvaluan'},\r\n           {name: 'Ugandan'},\r\n           {name: 'Ukrainian'},\r\n           {name: 'Uruguaya'},\r\n           {name: 'Uzbekistani'},\r\n           {name: 'Venezuela'},\r\n           {name: 'Vietnamese'},\r\n           {name: 'Wels'},\r\n           {name: 'Yemenit'},\r\n           {name: 'Zambia'},\r\n           {name: 'Zimbabwe'},\r\n        ],\r\n          // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)\r\n        locale_languages: [\r\n          \"aa\",\r\n          \"ab\",\r\n          \"ae\",\r\n          \"af\",\r\n          \"ak\",\r\n          \"am\",\r\n          \"an\",\r\n          \"ar\",\r\n          \"as\",\r\n          \"av\",\r\n          \"ay\",\r\n          \"az\",\r\n          \"ba\",\r\n          \"be\",\r\n          \"bg\",\r\n          \"bh\",\r\n          \"bi\",\r\n          \"bm\",\r\n          \"bn\",\r\n          \"bo\",\r\n          \"br\",\r\n          \"bs\",\r\n          \"ca\",\r\n          \"ce\",\r\n          \"ch\",\r\n          \"co\",\r\n          \"cr\",\r\n          \"cs\",\r\n          \"cu\",\r\n          \"cv\",\r\n          \"cy\",\r\n          \"da\",\r\n          \"de\",\r\n          \"dv\",\r\n          \"dz\",\r\n          \"ee\",\r\n          \"el\",\r\n          \"en\",\r\n          \"eo\",\r\n          \"es\",\r\n          \"et\",\r\n          \"eu\",\r\n          \"fa\",\r\n          \"ff\",\r\n          \"fi\",\r\n          \"fj\",\r\n          \"fo\",\r\n          \"fr\",\r\n          \"fy\",\r\n          \"ga\",\r\n          \"gd\",\r\n          \"gl\",\r\n          \"gn\",\r\n          \"gu\",\r\n          \"gv\",\r\n          \"ha\",\r\n          \"he\",\r\n          \"hi\",\r\n          \"ho\",\r\n          \"hr\",\r\n          \"ht\",\r\n          \"hu\",\r\n          \"hy\",\r\n          \"hz\",\r\n          \"ia\",\r\n          \"id\",\r\n          \"ie\",\r\n          \"ig\",\r\n          \"ii\",\r\n          \"ik\",\r\n          \"io\",\r\n          \"is\",\r\n          \"it\",\r\n          \"iu\",\r\n          \"ja\",\r\n          \"jv\",\r\n          \"ka\",\r\n          \"kg\",\r\n          \"ki\",\r\n          \"kj\",\r\n          \"kk\",\r\n          \"kl\",\r\n          \"km\",\r\n          \"kn\",\r\n          \"ko\",\r\n          \"kr\",\r\n          \"ks\",\r\n          \"ku\",\r\n          \"kv\",\r\n          \"kw\",\r\n          \"ky\",\r\n          \"la\",\r\n          \"lb\",\r\n          \"lg\",\r\n          \"li\",\r\n          \"ln\",\r\n          \"lo\",\r\n          \"lt\",\r\n          \"lu\",\r\n          \"lv\",\r\n          \"mg\",\r\n          \"mh\",\r\n          \"mi\",\r\n          \"mk\",\r\n          \"ml\",\r\n          \"mn\",\r\n          \"mr\",\r\n          \"ms\",\r\n          \"mt\",\r\n          \"my\",\r\n          \"na\",\r\n          \"nb\",\r\n          \"nd\",\r\n          \"ne\",\r\n          \"ng\",\r\n          \"nl\",\r\n          \"nn\",\r\n          \"no\",\r\n          \"nr\",\r\n          \"nv\",\r\n          \"ny\",\r\n          \"oc\",\r\n          \"oj\",\r\n          \"om\",\r\n          \"or\",\r\n          \"os\",\r\n          \"pa\",\r\n          \"pi\",\r\n          \"pl\",\r\n          \"ps\",\r\n          \"pt\",\r\n          \"qu\",\r\n          \"rm\",\r\n          \"rn\",\r\n          \"ro\",\r\n          \"ru\",\r\n          \"rw\",\r\n          \"sa\",\r\n          \"sc\",\r\n          \"sd\",\r\n          \"se\",\r\n          \"sg\",\r\n          \"si\",\r\n          \"sk\",\r\n          \"sl\",\r\n          \"sm\",\r\n          \"sn\",\r\n          \"so\",\r\n          \"sq\",\r\n          \"sr\",\r\n          \"ss\",\r\n          \"st\",\r\n          \"su\",\r\n          \"sv\",\r\n          \"sw\",\r\n          \"ta\",\r\n          \"te\",\r\n          \"tg\",\r\n          \"th\",\r\n          \"ti\",\r\n          \"tk\",\r\n          \"tl\",\r\n          \"tn\",\r\n          \"to\",\r\n          \"tr\",\r\n          \"ts\",\r\n          \"tt\",\r\n          \"tw\",\r\n          \"ty\",\r\n          \"ug\",\r\n          \"uk\",\r\n          \"ur\",\r\n          \"uz\",\r\n          \"ve\",\r\n          \"vi\",\r\n          \"vo\",\r\n          \"wa\",\r\n          \"wo\",\r\n          \"xh\",\r\n          \"yi\",\r\n          \"yo\",\r\n          \"za\",\r\n          \"zh\",\r\n          \"zu\"\r\n        ],\r\n\r\n        // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)\r\n        locale_regions: [\r\n          \"agq-CM\",\r\n          \"asa-TZ\",\r\n          \"ast-ES\",\r\n          \"bas-CM\",\r\n          \"bem-ZM\",\r\n          \"bez-TZ\",\r\n          \"brx-IN\",\r\n          \"cgg-UG\",\r\n          \"chr-US\",\r\n          \"dav-KE\",\r\n          \"dje-NE\",\r\n          \"dsb-DE\",\r\n          \"dua-CM\",\r\n          \"dyo-SN\",\r\n          \"ebu-KE\",\r\n          \"ewo-CM\",\r\n          \"fil-PH\",\r\n          \"fur-IT\",\r\n          \"gsw-CH\",\r\n          \"gsw-FR\",\r\n          \"gsw-LI\",\r\n          \"guz-KE\",\r\n          \"haw-US\",\r\n          \"hsb-DE\",\r\n          \"jgo-CM\",\r\n          \"jmc-TZ\",\r\n          \"kab-DZ\",\r\n          \"kam-KE\",\r\n          \"kde-TZ\",\r\n          \"kea-CV\",\r\n          \"khq-ML\",\r\n          \"kkj-CM\",\r\n          \"kln-KE\",\r\n          \"kok-IN\",\r\n          \"ksb-TZ\",\r\n          \"ksf-CM\",\r\n          \"ksh-DE\",\r\n          \"lag-TZ\",\r\n          \"lkt-US\",\r\n          \"luo-KE\",\r\n          \"luy-KE\",\r\n          \"mas-KE\",\r\n          \"mas-TZ\",\r\n          \"mer-KE\",\r\n          \"mfe-MU\",\r\n          \"mgh-MZ\",\r\n          \"mgo-CM\",\r\n          \"mua-CM\",\r\n          \"naq-NA\",\r\n          \"nmg-CM\",\r\n          \"nnh-CM\",\r\n          \"nus-SD\",\r\n          \"nyn-UG\",\r\n          \"rof-TZ\",\r\n          \"rwk-TZ\",\r\n          \"sah-RU\",\r\n          \"saq-KE\",\r\n          \"sbp-TZ\",\r\n          \"seh-MZ\",\r\n          \"ses-ML\",\r\n          \"shi-Latn\",\r\n          \"shi-Latn-MA\",\r\n          \"shi-Tfng\",\r\n          \"shi-Tfng-MA\",\r\n          \"smn-FI\",\r\n          \"teo-KE\",\r\n          \"teo-UG\",\r\n          \"twq-NE\",\r\n          \"tzm-Latn\",\r\n          \"tzm-Latn-MA\",\r\n          \"vai-Latn\",\r\n          \"vai-Latn-LR\",\r\n          \"vai-Vaii\",\r\n          \"vai-Vaii-LR\",\r\n          \"vun-TZ\",\r\n          \"wae-CH\",\r\n          \"xog-UG\",\r\n          \"yav-CM\",\r\n          \"zgh-MA\",\r\n          \"af-NA\",\r\n          \"af-ZA\",\r\n          \"ak-GH\",\r\n          \"am-ET\",\r\n          \"ar-001\",\r\n          \"ar-AE\",\r\n          \"ar-BH\",\r\n          \"ar-DJ\",\r\n          \"ar-DZ\",\r\n          \"ar-EG\",\r\n          \"ar-EH\",\r\n          \"ar-ER\",\r\n          \"ar-IL\",\r\n          \"ar-IQ\",\r\n          \"ar-JO\",\r\n          \"ar-KM\",\r\n          \"ar-KW\",\r\n          \"ar-LB\",\r\n          \"ar-LY\",\r\n          \"ar-MA\",\r\n          \"ar-MR\",\r\n          \"ar-OM\",\r\n          \"ar-PS\",\r\n          \"ar-QA\",\r\n          \"ar-SA\",\r\n          \"ar-SD\",\r\n          \"ar-SO\",\r\n          \"ar-SS\",\r\n          \"ar-SY\",\r\n          \"ar-TD\",\r\n          \"ar-TN\",\r\n          \"ar-YE\",\r\n          \"as-IN\",\r\n          \"az-Cyrl\",\r\n          \"az-Cyrl-AZ\",\r\n          \"az-Latn\",\r\n          \"az-Latn-AZ\",\r\n          \"be-BY\",\r\n          \"bg-BG\",\r\n          \"bm-Latn\",\r\n          \"bm-Latn-ML\",\r\n          \"bn-BD\",\r\n          \"bn-IN\",\r\n          \"bo-CN\",\r\n          \"bo-IN\",\r\n          \"br-FR\",\r\n          \"bs-Cyrl\",\r\n          \"bs-Cyrl-BA\",\r\n          \"bs-Latn\",\r\n          \"bs-Latn-BA\",\r\n          \"ca-AD\",\r\n          \"ca-ES\",\r\n          \"ca-ES-VALENCIA\",\r\n          \"ca-FR\",\r\n          \"ca-IT\",\r\n          \"cs-CZ\",\r\n          \"cy-GB\",\r\n          \"da-DK\",\r\n          \"da-GL\",\r\n          \"de-AT\",\r\n          \"de-BE\",\r\n          \"de-CH\",\r\n          \"de-DE\",\r\n          \"de-LI\",\r\n          \"de-LU\",\r\n          \"dz-BT\",\r\n          \"ee-GH\",\r\n          \"ee-TG\",\r\n          \"el-CY\",\r\n          \"el-GR\",\r\n          \"en-001\",\r\n          \"en-150\",\r\n          \"en-AG\",\r\n          \"en-AI\",\r\n          \"en-AS\",\r\n          \"en-AU\",\r\n          \"en-BB\",\r\n          \"en-BE\",\r\n          \"en-BM\",\r\n          \"en-BS\",\r\n          \"en-BW\",\r\n          \"en-BZ\",\r\n          \"en-CA\",\r\n          \"en-CC\",\r\n          \"en-CK\",\r\n          \"en-CM\",\r\n          \"en-CX\",\r\n          \"en-DG\",\r\n          \"en-DM\",\r\n          \"en-ER\",\r\n          \"en-FJ\",\r\n          \"en-FK\",\r\n          \"en-FM\",\r\n          \"en-GB\",\r\n          \"en-GD\",\r\n          \"en-GG\",\r\n          \"en-GH\",\r\n          \"en-GI\",\r\n          \"en-GM\",\r\n          \"en-GU\",\r\n          \"en-GY\",\r\n          \"en-HK\",\r\n          \"en-IE\",\r\n          \"en-IM\",\r\n          \"en-IN\",\r\n          \"en-IO\",\r\n          \"en-JE\",\r\n          \"en-JM\",\r\n          \"en-KE\",\r\n          \"en-KI\",\r\n          \"en-KN\",\r\n          \"en-KY\",\r\n          \"en-LC\",\r\n          \"en-LR\",\r\n          \"en-LS\",\r\n          \"en-MG\",\r\n          \"en-MH\",\r\n          \"en-MO\",\r\n          \"en-MP\",\r\n          \"en-MS\",\r\n          \"en-MT\",\r\n          \"en-MU\",\r\n          \"en-MW\",\r\n          \"en-MY\",\r\n          \"en-NA\",\r\n          \"en-NF\",\r\n          \"en-NG\",\r\n          \"en-NR\",\r\n          \"en-NU\",\r\n          \"en-NZ\",\r\n          \"en-PG\",\r\n          \"en-PH\",\r\n          \"en-PK\",\r\n          \"en-PN\",\r\n          \"en-PR\",\r\n          \"en-PW\",\r\n          \"en-RW\",\r\n          \"en-SB\",\r\n          \"en-SC\",\r\n          \"en-SD\",\r\n          \"en-SG\",\r\n          \"en-SH\",\r\n          \"en-SL\",\r\n          \"en-SS\",\r\n          \"en-SX\",\r\n          \"en-SZ\",\r\n          \"en-TC\",\r\n          \"en-TK\",\r\n          \"en-TO\",\r\n          \"en-TT\",\r\n          \"en-TV\",\r\n          \"en-TZ\",\r\n          \"en-UG\",\r\n          \"en-UM\",\r\n          \"en-US\",\r\n          \"en-US-POSIX\",\r\n          \"en-VC\",\r\n          \"en-VG\",\r\n          \"en-VI\",\r\n          \"en-VU\",\r\n          \"en-WS\",\r\n          \"en-ZA\",\r\n          \"en-ZM\",\r\n          \"en-ZW\",\r\n          \"eo-001\",\r\n          \"es-419\",\r\n          \"es-AR\",\r\n          \"es-BO\",\r\n          \"es-CL\",\r\n          \"es-CO\",\r\n          \"es-CR\",\r\n          \"es-CU\",\r\n          \"es-DO\",\r\n          \"es-EA\",\r\n          \"es-EC\",\r\n          \"es-ES\",\r\n          \"es-GQ\",\r\n          \"es-GT\",\r\n          \"es-HN\",\r\n          \"es-IC\",\r\n          \"es-MX\",\r\n          \"es-NI\",\r\n          \"es-PA\",\r\n          \"es-PE\",\r\n          \"es-PH\",\r\n          \"es-PR\",\r\n          \"es-PY\",\r\n          \"es-SV\",\r\n          \"es-US\",\r\n          \"es-UY\",\r\n          \"es-VE\",\r\n          \"et-EE\",\r\n          \"eu-ES\",\r\n          \"fa-AF\",\r\n          \"fa-IR\",\r\n          \"ff-CM\",\r\n          \"ff-GN\",\r\n          \"ff-MR\",\r\n          \"ff-SN\",\r\n          \"fi-FI\",\r\n          \"fo-FO\",\r\n          \"fr-BE\",\r\n          \"fr-BF\",\r\n          \"fr-BI\",\r\n          \"fr-BJ\",\r\n          \"fr-BL\",\r\n          \"fr-CA\",\r\n          \"fr-CD\",\r\n          \"fr-CF\",\r\n          \"fr-CG\",\r\n          \"fr-CH\",\r\n          \"fr-CI\",\r\n          \"fr-CM\",\r\n          \"fr-DJ\",\r\n          \"fr-DZ\",\r\n          \"fr-FR\",\r\n          \"fr-GA\",\r\n          \"fr-GF\",\r\n          \"fr-GN\",\r\n          \"fr-GP\",\r\n          \"fr-GQ\",\r\n          \"fr-HT\",\r\n          \"fr-KM\",\r\n          \"fr-LU\",\r\n          \"fr-MA\",\r\n          \"fr-MC\",\r\n          \"fr-MF\",\r\n          \"fr-MG\",\r\n          \"fr-ML\",\r\n          \"fr-MQ\",\r\n          \"fr-MR\",\r\n          \"fr-MU\",\r\n          \"fr-NC\",\r\n          \"fr-NE\",\r\n          \"fr-PF\",\r\n          \"fr-PM\",\r\n          \"fr-RE\",\r\n          \"fr-RW\",\r\n          \"fr-SC\",\r\n          \"fr-SN\",\r\n          \"fr-SY\",\r\n          \"fr-TD\",\r\n          \"fr-TG\",\r\n          \"fr-TN\",\r\n          \"fr-VU\",\r\n          \"fr-WF\",\r\n          \"fr-YT\",\r\n          \"fy-NL\",\r\n          \"ga-IE\",\r\n          \"gd-GB\",\r\n          \"gl-ES\",\r\n          \"gu-IN\",\r\n          \"gv-IM\",\r\n          \"ha-Latn\",\r\n          \"ha-Latn-GH\",\r\n          \"ha-Latn-NE\",\r\n          \"ha-Latn-NG\",\r\n          \"he-IL\",\r\n          \"hi-IN\",\r\n          \"hr-BA\",\r\n          \"hr-HR\",\r\n          \"hu-HU\",\r\n          \"hy-AM\",\r\n          \"id-ID\",\r\n          \"ig-NG\",\r\n          \"ii-CN\",\r\n          \"is-IS\",\r\n          \"it-CH\",\r\n          \"it-IT\",\r\n          \"it-SM\",\r\n          \"ja-JP\",\r\n          \"ka-GE\",\r\n          \"ki-KE\",\r\n          \"kk-Cyrl\",\r\n          \"kk-Cyrl-KZ\",\r\n          \"kl-GL\",\r\n          \"km-KH\",\r\n          \"kn-IN\",\r\n          \"ko-KP\",\r\n          \"ko-KR\",\r\n          \"ks-Arab\",\r\n          \"ks-Arab-IN\",\r\n          \"kw-GB\",\r\n          \"ky-Cyrl\",\r\n          \"ky-Cyrl-KG\",\r\n          \"lb-LU\",\r\n          \"lg-UG\",\r\n          \"ln-AO\",\r\n          \"ln-CD\",\r\n          \"ln-CF\",\r\n          \"ln-CG\",\r\n          \"lo-LA\",\r\n          \"lt-LT\",\r\n          \"lu-CD\",\r\n          \"lv-LV\",\r\n          \"mg-MG\",\r\n          \"mk-MK\",\r\n          \"ml-IN\",\r\n          \"mn-Cyrl\",\r\n          \"mn-Cyrl-MN\",\r\n          \"mr-IN\",\r\n          \"ms-Latn\",\r\n          \"ms-Latn-BN\",\r\n          \"ms-Latn-MY\",\r\n          \"ms-Latn-SG\",\r\n          \"mt-MT\",\r\n          \"my-MM\",\r\n          \"nb-NO\",\r\n          \"nb-SJ\",\r\n          \"nd-ZW\",\r\n          \"ne-IN\",\r\n          \"ne-NP\",\r\n          \"nl-AW\",\r\n          \"nl-BE\",\r\n          \"nl-BQ\",\r\n          \"nl-CW\",\r\n          \"nl-NL\",\r\n          \"nl-SR\",\r\n          \"nl-SX\",\r\n          \"nn-NO\",\r\n          \"om-ET\",\r\n          \"om-KE\",\r\n          \"or-IN\",\r\n          \"os-GE\",\r\n          \"os-RU\",\r\n          \"pa-Arab\",\r\n          \"pa-Arab-PK\",\r\n          \"pa-Guru\",\r\n          \"pa-Guru-IN\",\r\n          \"pl-PL\",\r\n          \"ps-AF\",\r\n          \"pt-AO\",\r\n          \"pt-BR\",\r\n          \"pt-CV\",\r\n          \"pt-GW\",\r\n          \"pt-MO\",\r\n          \"pt-MZ\",\r\n          \"pt-PT\",\r\n          \"pt-ST\",\r\n          \"pt-TL\",\r\n          \"qu-BO\",\r\n          \"qu-EC\",\r\n          \"qu-PE\",\r\n          \"rm-CH\",\r\n          \"rn-BI\",\r\n          \"ro-MD\",\r\n          \"ro-RO\",\r\n          \"ru-BY\",\r\n          \"ru-KG\",\r\n          \"ru-KZ\",\r\n          \"ru-MD\",\r\n          \"ru-RU\",\r\n          \"ru-UA\",\r\n          \"rw-RW\",\r\n          \"se-FI\",\r\n          \"se-NO\",\r\n          \"se-SE\",\r\n          \"sg-CF\",\r\n          \"si-LK\",\r\n          \"sk-SK\",\r\n          \"sl-SI\",\r\n          \"sn-ZW\",\r\n          \"so-DJ\",\r\n          \"so-ET\",\r\n          \"so-KE\",\r\n          \"so-SO\",\r\n          \"sq-AL\",\r\n          \"sq-MK\",\r\n          \"sq-XK\",\r\n          \"sr-Cyrl\",\r\n          \"sr-Cyrl-BA\",\r\n          \"sr-Cyrl-ME\",\r\n          \"sr-Cyrl-RS\",\r\n          \"sr-Cyrl-XK\",\r\n          \"sr-Latn\",\r\n          \"sr-Latn-BA\",\r\n          \"sr-Latn-ME\",\r\n          \"sr-Latn-RS\",\r\n          \"sr-Latn-XK\",\r\n          \"sv-AX\",\r\n          \"sv-FI\",\r\n          \"sv-SE\",\r\n          \"sw-CD\",\r\n          \"sw-KE\",\r\n          \"sw-TZ\",\r\n          \"sw-UG\",\r\n          \"ta-IN\",\r\n          \"ta-LK\",\r\n          \"ta-MY\",\r\n          \"ta-SG\",\r\n          \"te-IN\",\r\n          \"th-TH\",\r\n          \"ti-ER\",\r\n          \"ti-ET\",\r\n          \"to-TO\",\r\n          \"tr-CY\",\r\n          \"tr-TR\",\r\n          \"ug-Arab\",\r\n          \"ug-Arab-CN\",\r\n          \"uk-UA\",\r\n          \"ur-IN\",\r\n          \"ur-PK\",\r\n          \"uz-Arab\",\r\n          \"uz-Arab-AF\",\r\n          \"uz-Cyrl\",\r\n          \"uz-Cyrl-UZ\",\r\n          \"uz-Latn\",\r\n          \"uz-Latn-UZ\",\r\n          \"vi-VN\",\r\n          \"yi-001\",\r\n          \"yo-BJ\",\r\n          \"yo-NG\",\r\n          \"zh-Hans\",\r\n          \"zh-Hans-CN\",\r\n          \"zh-Hans-HK\",\r\n          \"zh-Hans-MO\",\r\n          \"zh-Hans-SG\",\r\n          \"zh-Hant\",\r\n          \"zh-Hant-HK\",\r\n          \"zh-Hant-MO\",\r\n          \"zh-Hant-TW\",\r\n          \"zu-ZA\"\r\n        ],\r\n\r\n        us_states_and_dc: [\r\n            {name: 'Alabama', abbreviation: 'AL'},\r\n            {name: 'Alaska', abbreviation: 'AK'},\r\n            {name: 'Arizona', abbreviation: 'AZ'},\r\n            {name: 'Arkansas', abbreviation: 'AR'},\r\n            {name: 'California', abbreviation: 'CA'},\r\n            {name: 'Colorado', abbreviation: 'CO'},\r\n            {name: 'Connecticut', abbreviation: 'CT'},\r\n            {name: 'Delaware', abbreviation: 'DE'},\r\n            {name: 'District of Columbia', abbreviation: 'DC'},\r\n            {name: 'Florida', abbreviation: 'FL'},\r\n            {name: 'Georgia', abbreviation: 'GA'},\r\n            {name: 'Hawaii', abbreviation: 'HI'},\r\n            {name: 'Idaho', abbreviation: 'ID'},\r\n            {name: 'Illinois', abbreviation: 'IL'},\r\n            {name: 'Indiana', abbreviation: 'IN'},\r\n            {name: 'Iowa', abbreviation: 'IA'},\r\n            {name: 'Kansas', abbreviation: 'KS'},\r\n            {name: 'Kentucky', abbreviation: 'KY'},\r\n            {name: 'Louisiana', abbreviation: 'LA'},\r\n            {name: 'Maine', abbreviation: 'ME'},\r\n            {name: 'Maryland', abbreviation: 'MD'},\r\n            {name: 'Massachusetts', abbreviation: 'MA'},\r\n            {name: 'Michigan', abbreviation: 'MI'},\r\n            {name: 'Minnesota', abbreviation: 'MN'},\r\n            {name: 'Mississippi', abbreviation: 'MS'},\r\n            {name: 'Missouri', abbreviation: 'MO'},\r\n            {name: 'Montana', abbreviation: 'MT'},\r\n            {name: 'Nebraska', abbreviation: 'NE'},\r\n            {name: 'Nevada', abbreviation: 'NV'},\r\n            {name: 'New Hampshire', abbreviation: 'NH'},\r\n            {name: 'New Jersey', abbreviation: 'NJ'},\r\n            {name: 'New Mexico', abbreviation: 'NM'},\r\n            {name: 'New York', abbreviation: 'NY'},\r\n            {name: 'North Carolina', abbreviation: 'NC'},\r\n            {name: 'North Dakota', abbreviation: 'ND'},\r\n            {name: 'Ohio', abbreviation: 'OH'},\r\n            {name: 'Oklahoma', abbreviation: 'OK'},\r\n            {name: 'Oregon', abbreviation: 'OR'},\r\n            {name: 'Pennsylvania', abbreviation: 'PA'},\r\n            {name: 'Rhode Island', abbreviation: 'RI'},\r\n            {name: 'South Carolina', abbreviation: 'SC'},\r\n            {name: 'South Dakota', abbreviation: 'SD'},\r\n            {name: 'Tennessee', abbreviation: 'TN'},\r\n            {name: 'Texas', abbreviation: 'TX'},\r\n            {name: 'Utah', abbreviation: 'UT'},\r\n            {name: 'Vermont', abbreviation: 'VT'},\r\n            {name: 'Virginia', abbreviation: 'VA'},\r\n            {name: 'Washington', abbreviation: 'WA'},\r\n            {name: 'West Virginia', abbreviation: 'WV'},\r\n            {name: 'Wisconsin', abbreviation: 'WI'},\r\n            {name: 'Wyoming', abbreviation: 'WY'}\r\n        ],\r\n\r\n        territories: [\r\n            {name: 'American Samoa', abbreviation: 'AS'},\r\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\r\n            {name: 'Guam', abbreviation: 'GU'},\r\n            {name: 'Marshall Islands', abbreviation: 'MH'},\r\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\r\n            {name: 'Puerto Rico', abbreviation: 'PR'},\r\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\r\n        ],\r\n\r\n        armed_forces: [\r\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\r\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\r\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\r\n        ],\r\n\r\n        country_regions: {\r\n            it: [\r\n                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\r\n                { name: \"Piemonte\", abbreviation: \"PIE\" },\r\n                { name: \"Lombardia\", abbreviation: \"LOM\" },\r\n                { name: \"Veneto\", abbreviation: \"VEN\" },\r\n                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\r\n                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\r\n                { name: \"Liguria\", abbreviation: \"LIG\" },\r\n                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\r\n                { name: \"Toscana\", abbreviation: \"TOS\" },\r\n                { name: \"Umbria\", abbreviation: \"UMB\" },\r\n                { name: \"Marche\", abbreviation: \"MAR\" },\r\n                { name: \"Abruzzo\", abbreviation: \"ABR\" },\r\n                { name: \"Lazio\", abbreviation: \"LAZ\" },\r\n                { name: \"Campania\", abbreviation: \"CAM\" },\r\n                { name: \"Puglia\", abbreviation: \"PUG\" },\r\n                { name: \"Basilicata\", abbreviation: \"BAS\" },\r\n                { name: \"Molise\", abbreviation: \"MOL\" },\r\n                { name: \"Calabria\", abbreviation: \"CAL\" },\r\n                { name: \"Sicilia\", abbreviation: \"SIC\" },\r\n                { name: \"Sardegna\", abbreviation: \"SAR\" }\r\n            ]\r\n        },\r\n\r\n        street_suffixes: {\r\n            'us': [\r\n                {name: 'Avenue', abbreviation: 'Ave'},\r\n                {name: 'Boulevard', abbreviation: 'Blvd'},\r\n                {name: 'Center', abbreviation: 'Ctr'},\r\n                {name: 'Circle', abbreviation: 'Cir'},\r\n                {name: 'Court', abbreviation: 'Ct'},\r\n                {name: 'Drive', abbreviation: 'Dr'},\r\n                {name: 'Extension', abbreviation: 'Ext'},\r\n                {name: 'Glen', abbreviation: 'Gln'},\r\n                {name: 'Grove', abbreviation: 'Grv'},\r\n                {name: 'Heights', abbreviation: 'Hts'},\r\n                {name: 'Highway', abbreviation: 'Hwy'},\r\n                {name: 'Junction', abbreviation: 'Jct'},\r\n                {name: 'Key', abbreviation: 'Key'},\r\n                {name: 'Lane', abbreviation: 'Ln'},\r\n                {name: 'Loop', abbreviation: 'Loop'},\r\n                {name: 'Manor', abbreviation: 'Mnr'},\r\n                {name: 'Mill', abbreviation: 'Mill'},\r\n                {name: 'Park', abbreviation: 'Park'},\r\n                {name: 'Parkway', abbreviation: 'Pkwy'},\r\n                {name: 'Pass', abbreviation: 'Pass'},\r\n                {name: 'Path', abbreviation: 'Path'},\r\n                {name: 'Pike', abbreviation: 'Pike'},\r\n                {name: 'Place', abbreviation: 'Pl'},\r\n                {name: 'Plaza', abbreviation: 'Plz'},\r\n                {name: 'Point', abbreviation: 'Pt'},\r\n                {name: 'Ridge', abbreviation: 'Rdg'},\r\n                {name: 'River', abbreviation: 'Riv'},\r\n                {name: 'Road', abbreviation: 'Rd'},\r\n                {name: 'Square', abbreviation: 'Sq'},\r\n                {name: 'Street', abbreviation: 'St'},\r\n                {name: 'Terrace', abbreviation: 'Ter'},\r\n                {name: 'Trail', abbreviation: 'Trl'},\r\n                {name: 'Turnpike', abbreviation: 'Tpke'},\r\n                {name: 'View', abbreviation: 'Vw'},\r\n                {name: 'Way', abbreviation: 'Way'}\r\n            ],\r\n            'it': [\r\n                { name: 'Accesso', abbreviation: 'Acc.' },\r\n                { name: 'Alzaia', abbreviation: 'Alz.' },\r\n                { name: 'Arco', abbreviation: 'Arco' },\r\n                { name: 'Archivolto', abbreviation: 'Acv.' },\r\n                { name: 'Arena', abbreviation: 'Arena' },\r\n                { name: 'Argine', abbreviation: 'Argine' },\r\n                { name: 'Bacino', abbreviation: 'Bacino' },\r\n                { name: 'Banchi', abbreviation: 'Banchi' },\r\n                { name: 'Banchina', abbreviation: 'Ban.' },\r\n                { name: 'Bastioni', abbreviation: 'Bas.' },\r\n                { name: 'Belvedere', abbreviation: 'Belv.' },\r\n                { name: 'Borgata', abbreviation: 'B.ta' },\r\n                { name: 'Borgo', abbreviation: 'B.go' },\r\n                { name: 'Calata', abbreviation: 'Cal.' },\r\n                { name: 'Calle', abbreviation: 'Calle' },\r\n                { name: 'Campiello', abbreviation: 'Cam.' },\r\n                { name: 'Campo', abbreviation: 'Cam.' },\r\n                { name: 'Canale', abbreviation: 'Can.' },\r\n                { name: 'Carraia', abbreviation: 'Carr.' },\r\n                { name: 'Cascina', abbreviation: 'Cascina' },\r\n                { name: 'Case sparse', abbreviation: 'c.s.' },\r\n                { name: 'Cavalcavia', abbreviation: 'Cv.' },\r\n                { name: 'Circonvallazione', abbreviation: 'Cv.' },\r\n                { name: 'Complanare', abbreviation: 'C.re' },\r\n                { name: 'Contrada', abbreviation: 'C.da' },\r\n                { name: 'Corso', abbreviation: 'C.so' },\r\n                { name: 'Corte', abbreviation: 'C.te' },\r\n                { name: 'Cortile', abbreviation: 'C.le' },\r\n                { name: 'Diramazione', abbreviation: 'Dir.' },\r\n                { name: 'Fondaco', abbreviation: 'F.co' },\r\n                { name: 'Fondamenta', abbreviation: 'F.ta' },\r\n                { name: 'Fondo', abbreviation: 'F.do' },\r\n                { name: 'Frazione', abbreviation: 'Fr.' },\r\n                { name: 'Isola', abbreviation: 'Is.' },\r\n                { name: 'Largo', abbreviation: 'L.go' },\r\n                { name: 'Litoranea', abbreviation: 'Lit.' },\r\n                { name: 'Lungolago', abbreviation: 'L.go lago' },\r\n                { name: 'Lungo Po', abbreviation: 'l.go Po' },\r\n                { name: 'Molo', abbreviation: 'Molo' },\r\n                { name: 'Mura', abbreviation: 'Mura' },\r\n                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\r\n                { name: 'Passeggiata', abbreviation: 'Pass.' },\r\n                { name: 'Piazza', abbreviation: 'P.zza' },\r\n                { name: 'Piazzale', abbreviation: 'P.le' },\r\n                { name: 'Ponte', abbreviation: 'P.te' },\r\n                { name: 'Portico', abbreviation: 'P.co' },\r\n                { name: 'Rampa', abbreviation: 'Rampa' },\r\n                { name: 'Regione', abbreviation: 'Reg.' },\r\n                { name: 'Rione', abbreviation: 'R.ne' },\r\n                { name: 'Rio', abbreviation: 'Rio' },\r\n                { name: 'Ripa', abbreviation: 'Ripa' },\r\n                { name: 'Riva', abbreviation: 'Riva' },\r\n                { name: 'Rondò', abbreviation: 'Rondò' },\r\n                { name: 'Rotonda', abbreviation: 'Rot.' },\r\n                { name: 'Sagrato', abbreviation: 'Sagr.' },\r\n                { name: 'Salita', abbreviation: 'Sal.' },\r\n                { name: 'Scalinata', abbreviation: 'Scal.' },\r\n                { name: 'Scalone', abbreviation: 'Scal.' },\r\n                { name: 'Slargo', abbreviation: 'Sl.' },\r\n                { name: 'Sottoportico', abbreviation: 'Sott.' },\r\n                { name: 'Strada', abbreviation: 'Str.' },\r\n                { name: 'Stradale', abbreviation: 'Str.le' },\r\n                { name: 'Strettoia', abbreviation: 'Strett.' },\r\n                { name: 'Traversa', abbreviation: 'Trav.' },\r\n                { name: 'Via', abbreviation: 'V.' },\r\n                { name: 'Viale', abbreviation: 'V.le' },\r\n                { name: 'Vicinale', abbreviation: 'Vic.le' },\r\n                { name: 'Vicolo', abbreviation: 'Vic.' }\r\n            ],\r\n            'uk' : [\r\n                {name: 'Avenue', abbreviation: 'Ave'},\r\n                {name: 'Close', abbreviation: 'Cl'},\r\n                {name: 'Court', abbreviation: 'Ct'},\r\n                {name: 'Crescent', abbreviation: 'Cr'},\r\n                {name: 'Drive', abbreviation: 'Dr'},\r\n                {name: 'Garden', abbreviation: 'Gdn'},\r\n                {name: 'Gardens', abbreviation: 'Gdns'},\r\n                {name: 'Green', abbreviation: 'Gn'},\r\n                {name: 'Grove', abbreviation: 'Gr'},\r\n                {name: 'Lane', abbreviation: 'Ln'},\r\n                {name: 'Mount', abbreviation: 'Mt'},\r\n                {name: 'Place', abbreviation: 'Pl'},\r\n                {name: 'Park', abbreviation: 'Pk'},\r\n                {name: 'Ridge', abbreviation: 'Rdg'},\r\n                {name: 'Road', abbreviation: 'Rd'},\r\n                {name: 'Square', abbreviation: 'Sq'},\r\n                {name: 'Street', abbreviation: 'St'},\r\n                {name: 'Terrace', abbreviation: 'Ter'},\r\n                {name: 'Valley', abbreviation: 'Val'}\r\n            ]\r\n        },\r\n\r\n        months: [\r\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\r\n            // Not messing with leap years...\r\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\r\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\r\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\r\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\r\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\r\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\r\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\r\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\r\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\r\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\r\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\r\n        ],\r\n\r\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\r\n        cc_types: [\r\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\r\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\r\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\r\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\r\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\r\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\r\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\r\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\r\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\r\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\r\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\r\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\r\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\r\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\r\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\r\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\r\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\r\n        ],\r\n\r\n        //return all world currency by ISO 4217\r\n        currency_types: [\r\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\r\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\r\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\r\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\r\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\r\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\r\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\r\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\r\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\r\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\r\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\r\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\r\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\r\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\r\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\r\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\r\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\r\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\r\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\r\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\r\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\r\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\r\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\r\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\r\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\r\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\r\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\r\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\r\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\r\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\r\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\r\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\r\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\r\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\r\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\r\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\r\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\r\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\r\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\r\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\r\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\r\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\r\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\r\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\r\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\r\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\r\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\r\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\r\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\r\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\r\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\r\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\r\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\r\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\r\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\r\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\r\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\r\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\r\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\r\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\r\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\r\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\r\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\r\n            {'code' : 'INR', 'name' : 'India Rupee'},\r\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\r\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\r\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\r\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\r\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\r\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\r\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\r\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\r\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\r\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\r\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\r\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\r\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\r\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\r\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\r\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\r\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\r\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\r\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\r\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\r\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\r\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\r\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\r\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\r\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\r\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\r\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\r\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\r\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\r\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\r\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\r\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\r\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\r\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\r\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\r\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\r\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\r\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\r\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\r\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\r\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\r\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\r\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\r\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\r\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\r\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\r\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\r\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\r\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\r\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\r\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\r\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\r\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\r\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\r\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\r\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\r\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\r\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\r\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\r\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\r\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\r\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\r\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\r\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\r\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\r\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\r\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\r\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\r\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\r\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\r\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\r\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\r\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\r\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\r\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\r\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\r\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\r\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\r\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\r\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\r\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\r\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\r\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\r\n            {'code' : 'USD', 'name' : 'United States Dollar'},\r\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\r\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\r\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\r\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\r\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\r\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\r\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\r\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\r\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\r\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\r\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\r\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\r\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\r\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\r\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\r\n        ],\r\n\r\n        // return the names of all valide colors\r\n        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\r\n            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\r\n            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\r\n            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\r\n            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\r\n            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\r\n            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\r\n            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\r\n            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\r\n        ],\r\n\r\n        // Data taken from https://www.sec.gov/rules/other/4-460list.htm\r\n        company: [ \"3Com Corp\",\r\n        \"3M Company\",\r\n        \"A.G. Edwards Inc.\",\r\n        \"Abbott Laboratories\",\r\n        \"Abercrombie & Fitch Co.\",\r\n        \"ABM Industries Incorporated\",\r\n        \"Ace Hardware Corporation\",\r\n        \"ACT Manufacturing Inc.\",\r\n        \"Acterna Corp.\",\r\n        \"Adams Resources & Energy, Inc.\",\r\n        \"ADC Telecommunications, Inc.\",\r\n        \"Adelphia Communications Corporation\",\r\n        \"Administaff, Inc.\",\r\n        \"Adobe Systems Incorporated\",\r\n        \"Adolph Coors Company\",\r\n        \"Advance Auto Parts, Inc.\",\r\n        \"Advanced Micro Devices, Inc.\",\r\n        \"AdvancePCS, Inc.\",\r\n        \"Advantica Restaurant Group, Inc.\",\r\n        \"The AES Corporation\",\r\n        \"Aetna Inc.\",\r\n        \"Affiliated Computer Services, Inc.\",\r\n        \"AFLAC Incorporated\",\r\n        \"AGCO Corporation\",\r\n        \"Agilent Technologies, Inc.\",\r\n        \"Agway Inc.\",\r\n        \"Apartment Investment and Management Company\",\r\n        \"Air Products and Chemicals, Inc.\",\r\n        \"Airborne, Inc.\",\r\n        \"Airgas, Inc.\",\r\n        \"AK Steel Holding Corporation\",\r\n        \"Alaska Air Group, Inc.\",\r\n        \"Alberto-Culver Company\",\r\n        \"Albertson's, Inc.\",\r\n        \"Alcoa Inc.\",\r\n        \"Alleghany Corporation\",\r\n        \"Allegheny Energy, Inc.\",\r\n        \"Allegheny Technologies Incorporated\",\r\n        \"Allergan, Inc.\",\r\n        \"ALLETE, Inc.\",\r\n        \"Alliant Energy Corporation\",\r\n        \"Allied Waste Industries, Inc.\",\r\n        \"Allmerica Financial Corporation\",\r\n        \"The Allstate Corporation\",\r\n        \"ALLTEL Corporation\",\r\n        \"The Alpine Group, Inc.\",\r\n        \"Amazon.com, Inc.\",\r\n        \"AMC Entertainment Inc.\",\r\n        \"American Power Conversion Corporation\",\r\n        \"Amerada Hess Corporation\",\r\n        \"AMERCO\",\r\n        \"Ameren Corporation\",\r\n        \"America West Holdings Corporation\",\r\n        \"American Axle & Manufacturing Holdings, Inc.\",\r\n        \"American Eagle Outfitters, Inc.\",\r\n        \"American Electric Power Company, Inc.\",\r\n        \"American Express Company\",\r\n        \"American Financial Group, Inc.\",\r\n        \"American Greetings Corporation\",\r\n        \"American International Group, Inc.\",\r\n        \"American Standard Companies Inc.\",\r\n        \"American Water Works Company, Inc.\",\r\n        \"AmerisourceBergen Corporation\",\r\n        \"Ames Department Stores, Inc.\",\r\n        \"Amgen Inc.\",\r\n        \"Amkor Technology, Inc.\",\r\n        \"AMR Corporation\",\r\n        \"AmSouth Bancorp.\",\r\n        \"Amtran, Inc.\",\r\n        \"Anadarko Petroleum Corporation\",\r\n        \"Analog Devices, Inc.\",\r\n        \"Anheuser-Busch Companies, Inc.\",\r\n        \"Anixter International Inc.\",\r\n        \"AnnTaylor Inc.\",\r\n        \"Anthem, Inc.\",\r\n        \"AOL Time Warner Inc.\",\r\n        \"Aon Corporation\",\r\n        \"Apache Corporation\",\r\n        \"Apple Computer, Inc.\",\r\n        \"Applera Corporation\",\r\n        \"Applied Industrial Technologies, Inc.\",\r\n        \"Applied Materials, Inc.\",\r\n        \"Aquila, Inc.\",\r\n        \"ARAMARK Corporation\",\r\n        \"Arch Coal, Inc.\",\r\n        \"Archer Daniels Midland Company\",\r\n        \"Arkansas Best Corporation\",\r\n        \"Armstrong Holdings, Inc.\",\r\n        \"Arrow Electronics, Inc.\",\r\n        \"ArvinMeritor, Inc.\",\r\n        \"Ashland Inc.\",\r\n        \"Astoria Financial Corporation\",\r\n        \"AT&T Corp.\",\r\n        \"Atmel Corporation\",\r\n        \"Atmos Energy Corporation\",\r\n        \"Audiovox Corporation\",\r\n        \"Autoliv, Inc.\",\r\n        \"Automatic Data Processing, Inc.\",\r\n        \"AutoNation, Inc.\",\r\n        \"AutoZone, Inc.\",\r\n        \"Avaya Inc.\",\r\n        \"Avery Dennison Corporation\",\r\n        \"Avista Corporation\",\r\n        \"Avnet, Inc.\",\r\n        \"Avon Products, Inc.\",\r\n        \"Baker Hughes Incorporated\",\r\n        \"Ball Corporation\",\r\n        \"Bank of America Corporation\",\r\n        \"The Bank of New York Company, Inc.\",\r\n        \"Bank One Corporation\",\r\n        \"Banknorth Group, Inc.\",\r\n        \"Banta Corporation\",\r\n        \"Barnes & Noble, Inc.\",\r\n        \"Bausch & Lomb Incorporated\",\r\n        \"Baxter International Inc.\",\r\n        \"BB&T Corporation\",\r\n        \"The Bear Stearns Companies Inc.\",\r\n        \"Beazer Homes USA, Inc.\",\r\n        \"Beckman Coulter, Inc.\",\r\n        \"Becton, Dickinson and Company\",\r\n        \"Bed Bath & Beyond Inc.\",\r\n        \"Belk, Inc.\",\r\n        \"Bell Microproducts Inc.\",\r\n        \"BellSouth Corporation\",\r\n        \"Belo Corp.\",\r\n        \"Bemis Company, Inc.\",\r\n        \"Benchmark Electronics, Inc.\",\r\n        \"Berkshire Hathaway Inc.\",\r\n        \"Best Buy Co., Inc.\",\r\n        \"Bethlehem Steel Corporation\",\r\n        \"Beverly Enterprises, Inc.\",\r\n        \"Big Lots, Inc.\",\r\n        \"BJ Services Company\",\r\n        \"BJ's Wholesale Club, Inc.\",\r\n        \"The Black & Decker Corporation\",\r\n        \"Black Hills Corporation\",\r\n        \"BMC Software, Inc.\",\r\n        \"The Boeing Company\",\r\n        \"Boise Cascade Corporation\",\r\n        \"Borders Group, Inc.\",\r\n        \"BorgWarner Inc.\",\r\n        \"Boston Scientific Corporation\",\r\n        \"Bowater Incorporated\",\r\n        \"Briggs & Stratton Corporation\",\r\n        \"Brightpoint, Inc.\",\r\n        \"Brinker International, Inc.\",\r\n        \"Bristol-Myers Squibb Company\",\r\n        \"Broadwing, Inc.\",\r\n        \"Brown Shoe Company, Inc.\",\r\n        \"Brown-Forman Corporation\",\r\n        \"Brunswick Corporation\",\r\n        \"Budget Group, Inc.\",\r\n        \"Burlington Coat Factory Warehouse Corporation\",\r\n        \"Burlington Industries, Inc.\",\r\n        \"Burlington Northern Santa Fe Corporation\",\r\n        \"Burlington Resources Inc.\",\r\n        \"C. H. Robinson Worldwide Inc.\",\r\n        \"Cablevision Systems Corp\",\r\n        \"Cabot Corp\",\r\n        \"Cadence Design Systems, Inc.\",\r\n        \"Calpine Corp.\",\r\n        \"Campbell Soup Co.\",\r\n        \"Capital One Financial Corp.\",\r\n        \"Cardinal Health Inc.\",\r\n        \"Caremark Rx Inc.\",\r\n        \"Carlisle Cos. Inc.\",\r\n        \"Carpenter Technology Corp.\",\r\n        \"Casey's General Stores Inc.\",\r\n        \"Caterpillar Inc.\",\r\n        \"CBRL Group Inc.\",\r\n        \"CDI Corp.\",\r\n        \"CDW Computer Centers Inc.\",\r\n        \"CellStar Corp.\",\r\n        \"Cendant Corp\",\r\n        \"Cenex Harvest States Cooperatives\",\r\n        \"Centex Corp.\",\r\n        \"CenturyTel Inc.\",\r\n        \"Ceridian Corp.\",\r\n        \"CH2M Hill Cos. Ltd.\",\r\n        \"Champion Enterprises Inc.\",\r\n        \"Charles Schwab Corp.\",\r\n        \"Charming Shoppes Inc.\",\r\n        \"Charter Communications Inc.\",\r\n        \"Charter One Financial Inc.\",\r\n        \"ChevronTexaco Corp.\",\r\n        \"Chiquita Brands International Inc.\",\r\n        \"Chubb Corp\",\r\n        \"Ciena Corp.\",\r\n        \"Cigna Corp\",\r\n        \"Cincinnati Financial Corp.\",\r\n        \"Cinergy Corp.\",\r\n        \"Cintas Corp.\",\r\n        \"Circuit City Stores Inc.\",\r\n        \"Cisco Systems Inc.\",\r\n        \"Citigroup, Inc\",\r\n        \"Citizens Communications Co.\",\r\n        \"CKE Restaurants Inc.\",\r\n        \"Clear Channel Communications Inc.\",\r\n        \"The Clorox Co.\",\r\n        \"CMGI Inc.\",\r\n        \"CMS Energy Corp.\",\r\n        \"CNF Inc.\",\r\n        \"Coca-Cola Co.\",\r\n        \"Coca-Cola Enterprises Inc.\",\r\n        \"Colgate-Palmolive Co.\",\r\n        \"Collins & Aikman Corp.\",\r\n        \"Comcast Corp.\",\r\n        \"Comdisco Inc.\",\r\n        \"Comerica Inc.\",\r\n        \"Comfort Systems USA Inc.\",\r\n        \"Commercial Metals Co.\",\r\n        \"Community Health Systems Inc.\",\r\n        \"Compass Bancshares Inc\",\r\n        \"Computer Associates International Inc.\",\r\n        \"Computer Sciences Corp.\",\r\n        \"Compuware Corp.\",\r\n        \"Comverse Technology Inc.\",\r\n        \"ConAgra Foods Inc.\",\r\n        \"Concord EFS Inc.\",\r\n        \"Conectiv, Inc\",\r\n        \"Conoco Inc\",\r\n        \"Conseco Inc.\",\r\n        \"Consolidated Freightways Corp.\",\r\n        \"Consolidated Edison Inc.\",\r\n        \"Constellation Brands Inc.\",\r\n        \"Constellation Emergy Group Inc.\",\r\n        \"Continental Airlines Inc.\",\r\n        \"Convergys Corp.\",\r\n        \"Cooper Cameron Corp.\",\r\n        \"Cooper Industries Ltd.\",\r\n        \"Cooper Tire & Rubber Co.\",\r\n        \"Corn Products International Inc.\",\r\n        \"Corning Inc.\",\r\n        \"Costco Wholesale Corp.\",\r\n        \"Countrywide Credit Industries Inc.\",\r\n        \"Coventry Health Care Inc.\",\r\n        \"Cox Communications Inc.\",\r\n        \"Crane Co.\",\r\n        \"Crompton Corp.\",\r\n        \"Crown Cork & Seal Co. Inc.\",\r\n        \"CSK Auto Corp.\",\r\n        \"CSX Corp.\",\r\n        \"Cummins Inc.\",\r\n        \"CVS Corp.\",\r\n        \"Cytec Industries Inc.\",\r\n        \"D&K Healthcare Resources, Inc.\",\r\n        \"D.R. Horton Inc.\",\r\n        \"Dana Corporation\",\r\n        \"Danaher Corporation\",\r\n        \"Darden Restaurants Inc.\",\r\n        \"DaVita Inc.\",\r\n        \"Dean Foods Company\",\r\n        \"Deere & Company\",\r\n        \"Del Monte Foods Co\",\r\n        \"Dell Computer Corporation\",\r\n        \"Delphi Corp.\",\r\n        \"Delta Air Lines Inc.\",\r\n        \"Deluxe Corporation\",\r\n        \"Devon Energy Corporation\",\r\n        \"Di Giorgio Corporation\",\r\n        \"Dial Corporation\",\r\n        \"Diebold Incorporated\",\r\n        \"Dillard's Inc.\",\r\n        \"DIMON Incorporated\",\r\n        \"Dole Food Company, Inc.\",\r\n        \"Dollar General Corporation\",\r\n        \"Dollar Tree Stores, Inc.\",\r\n        \"Dominion Resources, Inc.\",\r\n        \"Domino's Pizza LLC\",\r\n        \"Dover Corporation, Inc.\",\r\n        \"Dow Chemical Company\",\r\n        \"Dow Jones & Company, Inc.\",\r\n        \"DPL Inc.\",\r\n        \"DQE Inc.\",\r\n        \"Dreyer's Grand Ice Cream, Inc.\",\r\n        \"DST Systems, Inc.\",\r\n        \"DTE Energy Co.\",\r\n        \"E.I. Du Pont de Nemours and Company\",\r\n        \"Duke Energy Corp\",\r\n        \"Dun & Bradstreet Inc.\",\r\n        \"DURA Automotive Systems Inc.\",\r\n        \"DynCorp\",\r\n        \"Dynegy Inc.\",\r\n        \"E*Trade Group, Inc.\",\r\n        \"E.W. Scripps Company\",\r\n        \"Earthlink, Inc.\",\r\n        \"Eastman Chemical Company\",\r\n        \"Eastman Kodak Company\",\r\n        \"Eaton Corporation\",\r\n        \"Echostar Communications Corporation\",\r\n        \"Ecolab Inc.\",\r\n        \"Edison International\",\r\n        \"EGL Inc.\",\r\n        \"El Paso Corporation\",\r\n        \"Electronic Arts Inc.\",\r\n        \"Electronic Data Systems Corp.\",\r\n        \"Eli Lilly and Company\",\r\n        \"EMC Corporation\",\r\n        \"Emcor Group Inc.\",\r\n        \"Emerson Electric Co.\",\r\n        \"Encompass Services Corporation\",\r\n        \"Energizer Holdings Inc.\",\r\n        \"Energy East Corporation\",\r\n        \"Engelhard Corporation\",\r\n        \"Enron Corp.\",\r\n        \"Entergy Corporation\",\r\n        \"Enterprise Products Partners L.P.\",\r\n        \"EOG Resources, Inc.\",\r\n        \"Equifax Inc.\",\r\n        \"Equitable Resources Inc.\",\r\n        \"Equity Office Properties Trust\",\r\n        \"Equity Residential Properties Trust\",\r\n        \"Estee Lauder Companies Inc.\",\r\n        \"Exelon Corporation\",\r\n        \"Exide Technologies\",\r\n        \"Expeditors International of Washington Inc.\",\r\n        \"Express Scripts Inc.\",\r\n        \"ExxonMobil Corporation\",\r\n        \"Fairchild Semiconductor International Inc.\",\r\n        \"Family Dollar Stores Inc.\",\r\n        \"Farmland Industries Inc.\",\r\n        \"Federal Mogul Corp.\",\r\n        \"Federated Department Stores Inc.\",\r\n        \"Federal Express Corp.\",\r\n        \"Felcor Lodging Trust Inc.\",\r\n        \"Ferro Corp.\",\r\n        \"Fidelity National Financial Inc.\",\r\n        \"Fifth Third Bancorp\",\r\n        \"First American Financial Corp.\",\r\n        \"First Data Corp.\",\r\n        \"First National of Nebraska Inc.\",\r\n        \"First Tennessee National Corp.\",\r\n        \"FirstEnergy Corp.\",\r\n        \"Fiserv Inc.\",\r\n        \"Fisher Scientific International Inc.\",\r\n        \"FleetBoston Financial Co.\",\r\n        \"Fleetwood Enterprises Inc.\",\r\n        \"Fleming Companies Inc.\",\r\n        \"Flowers Foods Inc.\",\r\n        \"Flowserv Corp\",\r\n        \"Fluor Corp\",\r\n        \"FMC Corp\",\r\n        \"Foamex International Inc\",\r\n        \"Foot Locker Inc\",\r\n        \"Footstar Inc.\",\r\n        \"Ford Motor Co\",\r\n        \"Forest Laboratories Inc.\",\r\n        \"Fortune Brands Inc.\",\r\n        \"Foster Wheeler Ltd.\",\r\n        \"FPL Group Inc.\",\r\n        \"Franklin Resources Inc.\",\r\n        \"Freeport McMoran Copper & Gold Inc.\",\r\n        \"Frontier Oil Corp\",\r\n        \"Furniture Brands International Inc.\",\r\n        \"Gannett Co., Inc.\",\r\n        \"Gap Inc.\",\r\n        \"Gateway Inc.\",\r\n        \"GATX Corporation\",\r\n        \"Gemstar-TV Guide International Inc.\",\r\n        \"GenCorp Inc.\",\r\n        \"General Cable Corporation\",\r\n        \"General Dynamics Corporation\",\r\n        \"General Electric Company\",\r\n        \"General Mills Inc\",\r\n        \"General Motors Corporation\",\r\n        \"Genesis Health Ventures Inc.\",\r\n        \"Gentek Inc.\",\r\n        \"Gentiva Health Services Inc.\",\r\n        \"Genuine Parts Company\",\r\n        \"Genuity Inc.\",\r\n        \"Genzyme Corporation\",\r\n        \"Georgia Gulf Corporation\",\r\n        \"Georgia-Pacific Corporation\",\r\n        \"Gillette Company\",\r\n        \"Gold Kist Inc.\",\r\n        \"Golden State Bancorp Inc.\",\r\n        \"Golden West Financial Corporation\",\r\n        \"Goldman Sachs Group Inc.\",\r\n        \"Goodrich Corporation\",\r\n        \"The Goodyear Tire & Rubber Company\",\r\n        \"Granite Construction Incorporated\",\r\n        \"Graybar Electric Company Inc.\",\r\n        \"Great Lakes Chemical Corporation\",\r\n        \"Great Plains Energy Inc.\",\r\n        \"GreenPoint Financial Corp.\",\r\n        \"Greif Bros. Corporation\",\r\n        \"Grey Global Group Inc.\",\r\n        \"Group 1 Automotive Inc.\",\r\n        \"Guidant Corporation\",\r\n        \"H&R Block Inc.\",\r\n        \"H.B. Fuller Company\",\r\n        \"H.J. Heinz Company\",\r\n        \"Halliburton Co.\",\r\n        \"Harley-Davidson Inc.\",\r\n        \"Harman International Industries Inc.\",\r\n        \"Harrah's Entertainment Inc.\",\r\n        \"Harris Corp.\",\r\n        \"Harsco Corp.\",\r\n        \"Hartford Financial Services Group Inc.\",\r\n        \"Hasbro Inc.\",\r\n        \"Hawaiian Electric Industries Inc.\",\r\n        \"HCA Inc.\",\r\n        \"Health Management Associates Inc.\",\r\n        \"Health Net Inc.\",\r\n        \"Healthsouth Corp\",\r\n        \"Henry Schein Inc.\",\r\n        \"Hercules Inc.\",\r\n        \"Herman Miller Inc.\",\r\n        \"Hershey Foods Corp.\",\r\n        \"Hewlett-Packard Company\",\r\n        \"Hibernia Corp.\",\r\n        \"Hillenbrand Industries Inc.\",\r\n        \"Hilton Hotels Corp.\",\r\n        \"Hollywood Entertainment Corp.\",\r\n        \"Home Depot Inc.\",\r\n        \"Hon Industries Inc.\",\r\n        \"Honeywell International Inc.\",\r\n        \"Hormel Foods Corp.\",\r\n        \"Host Marriott Corp.\",\r\n        \"Household International Corp.\",\r\n        \"Hovnanian Enterprises Inc.\",\r\n        \"Hub Group Inc.\",\r\n        \"Hubbell Inc.\",\r\n        \"Hughes Supply Inc.\",\r\n        \"Humana Inc.\",\r\n        \"Huntington Bancshares Inc.\",\r\n        \"Idacorp Inc.\",\r\n        \"IDT Corporation\",\r\n        \"IKON Office Solutions Inc.\",\r\n        \"Illinois Tool Works Inc.\",\r\n        \"IMC Global Inc.\",\r\n        \"Imperial Sugar Company\",\r\n        \"IMS Health Inc.\",\r\n        \"Ingles Market Inc\",\r\n        \"Ingram Micro Inc.\",\r\n        \"Insight Enterprises Inc.\",\r\n        \"Integrated Electrical Services Inc.\",\r\n        \"Intel Corporation\",\r\n        \"International Paper Co.\",\r\n        \"Interpublic Group of Companies Inc.\",\r\n        \"Interstate Bakeries Corporation\",\r\n        \"International Business Machines Corp.\",\r\n        \"International Flavors & Fragrances Inc.\",\r\n        \"International Multifoods Corporation\",\r\n        \"Intuit Inc.\",\r\n        \"IT Group Inc.\",\r\n        \"ITT Industries Inc.\",\r\n        \"Ivax Corp.\",\r\n        \"J.B. Hunt Transport Services Inc.\",\r\n        \"J.C. Penny Co.\",\r\n        \"J.P. Morgan Chase & Co.\",\r\n        \"Jabil Circuit Inc.\",\r\n        \"Jack In The Box Inc.\",\r\n        \"Jacobs Engineering Group Inc.\",\r\n        \"JDS Uniphase Corp.\",\r\n        \"Jefferson-Pilot Co.\",\r\n        \"John Hancock Financial Services Inc.\",\r\n        \"Johnson & Johnson\",\r\n        \"Johnson Controls Inc.\",\r\n        \"Jones Apparel Group Inc.\",\r\n        \"KB Home\",\r\n        \"Kellogg Company\",\r\n        \"Kellwood Company\",\r\n        \"Kelly Services Inc.\",\r\n        \"Kemet Corp.\",\r\n        \"Kennametal Inc.\",\r\n        \"Kerr-McGee Corporation\",\r\n        \"KeyCorp\",\r\n        \"KeySpan Corp.\",\r\n        \"Kimball International Inc.\",\r\n        \"Kimberly-Clark Corporation\",\r\n        \"Kindred Healthcare Inc.\",\r\n        \"KLA-Tencor Corporation\",\r\n        \"K-Mart Corp.\",\r\n        \"Knight-Ridder Inc.\",\r\n        \"Kohl's Corp.\",\r\n        \"KPMG Consulting Inc.\",\r\n        \"Kroger Co.\",\r\n        \"L-3 Communications Holdings Inc.\",\r\n        \"Laboratory Corporation of America Holdings\",\r\n        \"Lam Research Corporation\",\r\n        \"LandAmerica Financial Group Inc.\",\r\n        \"Lands' End Inc.\",\r\n        \"Landstar System Inc.\",\r\n        \"La-Z-Boy Inc.\",\r\n        \"Lear Corporation\",\r\n        \"Legg Mason Inc.\",\r\n        \"Leggett & Platt Inc.\",\r\n        \"Lehman Brothers Holdings Inc.\",\r\n        \"Lennar Corporation\",\r\n        \"Lennox International Inc.\",\r\n        \"Level 3 Communications Inc.\",\r\n        \"Levi Strauss & Co.\",\r\n        \"Lexmark International Inc.\",\r\n        \"Limited Inc.\",\r\n        \"Lincoln National Corporation\",\r\n        \"Linens 'n Things Inc.\",\r\n        \"Lithia Motors Inc.\",\r\n        \"Liz Claiborne Inc.\",\r\n        \"Lockheed Martin Corporation\",\r\n        \"Loews Corporation\",\r\n        \"Longs Drug Stores Corporation\",\r\n        \"Louisiana-Pacific Corporation\",\r\n        \"Lowe's Companies Inc.\",\r\n        \"LSI Logic Corporation\",\r\n        \"The LTV Corporation\",\r\n        \"The Lubrizol Corporation\",\r\n        \"Lucent Technologies Inc.\",\r\n        \"Lyondell Chemical Company\",\r\n        \"M & T Bank Corporation\",\r\n        \"Magellan Health Services Inc.\",\r\n        \"Mail-Well Inc.\",\r\n        \"Mandalay Resort Group\",\r\n        \"Manor Care Inc.\",\r\n        \"Manpower Inc.\",\r\n        \"Marathon Oil Corporation\",\r\n        \"Mariner Health Care Inc.\",\r\n        \"Markel Corporation\",\r\n        \"Marriott International Inc.\",\r\n        \"Marsh & McLennan Companies Inc.\",\r\n        \"Marsh Supermarkets Inc.\",\r\n        \"Marshall & Ilsley Corporation\",\r\n        \"Martin Marietta Materials Inc.\",\r\n        \"Masco Corporation\",\r\n        \"Massey Energy Company\",\r\n        \"MasTec Inc.\",\r\n        \"Mattel Inc.\",\r\n        \"Maxim Integrated Products Inc.\",\r\n        \"Maxtor Corporation\",\r\n        \"Maxxam Inc.\",\r\n        \"The May Department Stores Company\",\r\n        \"Maytag Corporation\",\r\n        \"MBNA Corporation\",\r\n        \"McCormick & Company Incorporated\",\r\n        \"McDonald's Corporation\",\r\n        \"The McGraw-Hill Companies Inc.\",\r\n        \"McKesson Corporation\",\r\n        \"McLeodUSA Incorporated\",\r\n        \"M.D.C. Holdings Inc.\",\r\n        \"MDU Resources Group Inc.\",\r\n        \"MeadWestvaco Corporation\",\r\n        \"Medtronic Inc.\",\r\n        \"Mellon Financial Corporation\",\r\n        \"The Men's Wearhouse Inc.\",\r\n        \"Merck & Co., Inc.\",\r\n        \"Mercury General Corporation\",\r\n        \"Merrill Lynch & Co. Inc.\",\r\n        \"Metaldyne Corporation\",\r\n        \"Metals USA Inc.\",\r\n        \"MetLife Inc.\",\r\n        \"Metris Companies Inc\",\r\n        \"MGIC Investment Corporation\",\r\n        \"MGM Mirage\",\r\n        \"Michaels Stores Inc.\",\r\n        \"Micron Technology Inc.\",\r\n        \"Microsoft Corporation\",\r\n        \"Milacron Inc.\",\r\n        \"Millennium Chemicals Inc.\",\r\n        \"Mirant Corporation\",\r\n        \"Mohawk Industries Inc.\",\r\n        \"Molex Incorporated\",\r\n        \"The MONY Group Inc.\",\r\n        \"Morgan Stanley Dean Witter & Co.\",\r\n        \"Motorola Inc.\",\r\n        \"MPS Group Inc.\",\r\n        \"Murphy Oil Corporation\",\r\n        \"Nabors Industries Inc\",\r\n        \"Nacco Industries Inc\",\r\n        \"Nash Finch Company\",\r\n        \"National City Corp.\",\r\n        \"National Commerce Financial Corporation\",\r\n        \"National Fuel Gas Company\",\r\n        \"National Oilwell Inc\",\r\n        \"National Rural Utilities Cooperative Finance Corporation\",\r\n        \"National Semiconductor Corporation\",\r\n        \"National Service Industries Inc\",\r\n        \"Navistar International Corporation\",\r\n        \"NCR Corporation\",\r\n        \"The Neiman Marcus Group Inc.\",\r\n        \"New Jersey Resources Corporation\",\r\n        \"New York Times Company\",\r\n        \"Newell Rubbermaid Inc\",\r\n        \"Newmont Mining Corporation\",\r\n        \"Nextel Communications Inc\",\r\n        \"Nicor Inc\",\r\n        \"Nike Inc\",\r\n        \"NiSource Inc\",\r\n        \"Noble Energy Inc\",\r\n        \"Nordstrom Inc\",\r\n        \"Norfolk Southern Corporation\",\r\n        \"Nortek Inc\",\r\n        \"North Fork Bancorporation Inc\",\r\n        \"Northeast Utilities System\",\r\n        \"Northern Trust Corporation\",\r\n        \"Northrop Grumman Corporation\",\r\n        \"NorthWestern Corporation\",\r\n        \"Novellus Systems Inc\",\r\n        \"NSTAR\",\r\n        \"NTL Incorporated\",\r\n        \"Nucor Corp\",\r\n        \"Nvidia Corp\",\r\n        \"NVR Inc\",\r\n        \"Northwest Airlines Corp\",\r\n        \"Occidental Petroleum Corp\",\r\n        \"Ocean Energy Inc\",\r\n        \"Office Depot Inc.\",\r\n        \"OfficeMax Inc\",\r\n        \"OGE Energy Corp\",\r\n        \"Oglethorpe Power Corp.\",\r\n        \"Ohio Casualty Corp.\",\r\n        \"Old Republic International Corp.\",\r\n        \"Olin Corp.\",\r\n        \"OM Group Inc\",\r\n        \"Omnicare Inc\",\r\n        \"Omnicom Group\",\r\n        \"On Semiconductor Corp\",\r\n        \"ONEOK Inc\",\r\n        \"Oracle Corp\",\r\n        \"Oshkosh Truck Corp\",\r\n        \"Outback Steakhouse Inc.\",\r\n        \"Owens & Minor Inc.\",\r\n        \"Owens Corning\",\r\n        \"Owens-Illinois Inc\",\r\n        \"Oxford Health Plans Inc\",\r\n        \"Paccar Inc\",\r\n        \"PacifiCare Health Systems Inc\",\r\n        \"Packaging Corp. of America\",\r\n        \"Pactiv Corp\",\r\n        \"Pall Corp\",\r\n        \"Pantry Inc\",\r\n        \"Park Place Entertainment Corp\",\r\n        \"Parker Hannifin Corp.\",\r\n        \"Pathmark Stores Inc.\",\r\n        \"Paychex Inc\",\r\n        \"Payless Shoesource Inc\",\r\n        \"Penn Traffic Co.\",\r\n        \"Pennzoil-Quaker State Company\",\r\n        \"Pentair Inc\",\r\n        \"Peoples Energy Corp.\",\r\n        \"PeopleSoft Inc\",\r\n        \"Pep Boys Manny, Moe & Jack\",\r\n        \"Potomac Electric Power Co.\",\r\n        \"Pepsi Bottling Group Inc.\",\r\n        \"PepsiAmericas Inc.\",\r\n        \"PepsiCo Inc.\",\r\n        \"Performance Food Group Co.\",\r\n        \"Perini Corp\",\r\n        \"PerkinElmer Inc\",\r\n        \"Perot Systems Corp\",\r\n        \"Petco Animal Supplies Inc.\",\r\n        \"Peter Kiewit Sons', Inc.\",\r\n        \"PETsMART Inc\",\r\n        \"Pfizer Inc\",\r\n        \"Pacific Gas & Electric Corp.\",\r\n        \"Pharmacia Corp\",\r\n        \"Phar Mor Inc.\",\r\n        \"Phelps Dodge Corp.\",\r\n        \"Philip Morris Companies Inc.\",\r\n        \"Phillips Petroleum Co\",\r\n        \"Phillips Van Heusen Corp.\",\r\n        \"Phoenix Companies Inc\",\r\n        \"Pier 1 Imports Inc.\",\r\n        \"Pilgrim's Pride Corporation\",\r\n        \"Pinnacle West Capital Corp\",\r\n        \"Pioneer-Standard Electronics Inc.\",\r\n        \"Pitney Bowes Inc.\",\r\n        \"Pittston Brinks Group\",\r\n        \"Plains All American Pipeline LP\",\r\n        \"PNC Financial Services Group Inc.\",\r\n        \"PNM Resources Inc\",\r\n        \"Polaris Industries Inc.\",\r\n        \"Polo Ralph Lauren Corp\",\r\n        \"PolyOne Corp\",\r\n        \"Popular Inc\",\r\n        \"Potlatch Corp\",\r\n        \"PPG Industries Inc\",\r\n        \"PPL Corp\",\r\n        \"Praxair Inc\",\r\n        \"Precision Castparts Corp\",\r\n        \"Premcor Inc.\",\r\n        \"Pride International Inc\",\r\n        \"Primedia Inc\",\r\n        \"Principal Financial Group Inc.\",\r\n        \"Procter & Gamble Co.\",\r\n        \"Pro-Fac Cooperative Inc.\",\r\n        \"Progress Energy Inc\",\r\n        \"Progressive Corporation\",\r\n        \"Protective Life Corp\",\r\n        \"Provident Financial Group\",\r\n        \"Providian Financial Corp.\",\r\n        \"Prudential Financial Inc.\",\r\n        \"PSS World Medical Inc\",\r\n        \"Public Service Enterprise Group Inc.\",\r\n        \"Publix Super Markets Inc.\",\r\n        \"Puget Energy Inc.\",\r\n        \"Pulte Homes Inc\",\r\n        \"Qualcomm Inc\",\r\n        \"Quanta Services Inc.\",\r\n        \"Quantum Corp\",\r\n        \"Quest Diagnostics Inc.\",\r\n        \"Questar Corp\",\r\n        \"Quintiles Transnational\",\r\n        \"Qwest Communications Intl Inc\",\r\n        \"R.J. Reynolds Tobacco Company\",\r\n        \"R.R. Donnelley & Sons Company\",\r\n        \"Radio Shack Corporation\",\r\n        \"Raymond James Financial Inc.\",\r\n        \"Raytheon Company\",\r\n        \"Reader's Digest Association Inc.\",\r\n        \"Reebok International Ltd.\",\r\n        \"Regions Financial Corp.\",\r\n        \"Regis Corporation\",\r\n        \"Reliance Steel & Aluminum Co.\",\r\n        \"Reliant Energy Inc.\",\r\n        \"Rent A Center Inc\",\r\n        \"Republic Services Inc\",\r\n        \"Revlon Inc\",\r\n        \"RGS Energy Group Inc\",\r\n        \"Rite Aid Corp\",\r\n        \"Riverwood Holding Inc.\",\r\n        \"RoadwayCorp\",\r\n        \"Robert Half International Inc.\",\r\n        \"Rock-Tenn Co\",\r\n        \"Rockwell Automation Inc\",\r\n        \"Rockwell Collins Inc\",\r\n        \"Rohm & Haas Co.\",\r\n        \"Ross Stores Inc\",\r\n        \"RPM Inc.\",\r\n        \"Ruddick Corp\",\r\n        \"Ryder System Inc\",\r\n        \"Ryerson Tull Inc\",\r\n        \"Ryland Group Inc.\",\r\n        \"Sabre Holdings Corp\",\r\n        \"Safeco Corp\",\r\n        \"Safeguard Scientifics Inc.\",\r\n        \"Safeway Inc\",\r\n        \"Saks Inc\",\r\n        \"Sanmina-SCI Inc\",\r\n        \"Sara Lee Corp\",\r\n        \"SBC Communications Inc\",\r\n        \"Scana Corp.\",\r\n        \"Schering-Plough Corp\",\r\n        \"Scholastic Corp\",\r\n        \"SCI Systems Onc.\",\r\n        \"Science Applications Intl. Inc.\",\r\n        \"Scientific-Atlanta Inc\",\r\n        \"Scotts Company\",\r\n        \"Seaboard Corp\",\r\n        \"Sealed Air Corp\",\r\n        \"Sears Roebuck & Co\",\r\n        \"Sempra Energy\",\r\n        \"Sequa Corp\",\r\n        \"Service Corp. International\",\r\n        \"ServiceMaster Co\",\r\n        \"Shaw Group Inc\",\r\n        \"Sherwin-Williams Company\",\r\n        \"Shopko Stores Inc\",\r\n        \"Siebel Systems Inc\",\r\n        \"Sierra Health Services Inc\",\r\n        \"Sierra Pacific Resources\",\r\n        \"Silgan Holdings Inc.\",\r\n        \"Silicon Graphics Inc\",\r\n        \"Simon Property Group Inc\",\r\n        \"SLM Corporation\",\r\n        \"Smith International Inc\",\r\n        \"Smithfield Foods Inc\",\r\n        \"Smurfit-Stone Container Corp\",\r\n        \"Snap-On Inc\",\r\n        \"Solectron Corp\",\r\n        \"Solutia Inc\",\r\n        \"Sonic Automotive Inc.\",\r\n        \"Sonoco Products Co.\",\r\n        \"Southern Company\",\r\n        \"Southern Union Company\",\r\n        \"SouthTrust Corp.\",\r\n        \"Southwest Airlines Co\",\r\n        \"Southwest Gas Corp\",\r\n        \"Sovereign Bancorp Inc.\",\r\n        \"Spartan Stores Inc\",\r\n        \"Spherion Corp\",\r\n        \"Sports Authority Inc\",\r\n        \"Sprint Corp.\",\r\n        \"SPX Corp\",\r\n        \"St. Jude Medical Inc\",\r\n        \"St. Paul Cos.\",\r\n        \"Staff Leasing Inc.\",\r\n        \"StanCorp Financial Group Inc\",\r\n        \"Standard Pacific Corp.\",\r\n        \"Stanley Works\",\r\n        \"Staples Inc\",\r\n        \"Starbucks Corp\",\r\n        \"Starwood Hotels & Resorts Worldwide Inc\",\r\n        \"State Street Corp.\",\r\n        \"Stater Bros. Holdings Inc.\",\r\n        \"Steelcase Inc\",\r\n        \"Stein Mart Inc\",\r\n        \"Stewart & Stevenson Services Inc\",\r\n        \"Stewart Information Services Corp\",\r\n        \"Stilwell Financial Inc\",\r\n        \"Storage Technology Corporation\",\r\n        \"Stryker Corp\",\r\n        \"Sun Healthcare Group Inc.\",\r\n        \"Sun Microsystems Inc.\",\r\n        \"SunGard Data Systems Inc.\",\r\n        \"Sunoco Inc.\",\r\n        \"SunTrust Banks Inc\",\r\n        \"Supervalu Inc\",\r\n        \"Swift Transportation, Co., Inc\",\r\n        \"Symbol Technologies Inc\",\r\n        \"Synovus Financial Corp.\",\r\n        \"Sysco Corp\",\r\n        \"Systemax Inc.\",\r\n        \"Target Corp.\",\r\n        \"Tech Data Corporation\",\r\n        \"TECO Energy Inc\",\r\n        \"Tecumseh Products Company\",\r\n        \"Tektronix Inc\",\r\n        \"Teleflex Incorporated\",\r\n        \"Telephone & Data Systems Inc\",\r\n        \"Tellabs Inc.\",\r\n        \"Temple-Inland Inc\",\r\n        \"Tenet Healthcare Corporation\",\r\n        \"Tenneco Automotive Inc.\",\r\n        \"Teradyne Inc\",\r\n        \"Terex Corp\",\r\n        \"Tesoro Petroleum Corp.\",\r\n        \"Texas Industries Inc.\",\r\n        \"Texas Instruments Incorporated\",\r\n        \"Textron Inc\",\r\n        \"Thermo Electron Corporation\",\r\n        \"Thomas & Betts Corporation\",\r\n        \"Tiffany & Co\",\r\n        \"Timken Company\",\r\n        \"TJX Companies Inc\",\r\n        \"TMP Worldwide Inc\",\r\n        \"Toll Brothers Inc\",\r\n        \"Torchmark Corporation\",\r\n        \"Toro Company\",\r\n        \"Tower Automotive Inc.\",\r\n        \"Toys 'R' Us Inc\",\r\n        \"Trans World Entertainment Corp.\",\r\n        \"TransMontaigne Inc\",\r\n        \"Transocean Inc\",\r\n        \"TravelCenters of America Inc.\",\r\n        \"Triad Hospitals Inc\",\r\n        \"Tribune Company\",\r\n        \"Trigon Healthcare Inc.\",\r\n        \"Trinity Industries Inc\",\r\n        \"Trump Hotels & Casino Resorts Inc.\",\r\n        \"TruServ Corporation\",\r\n        \"TRW Inc\",\r\n        \"TXU Corp\",\r\n        \"Tyson Foods Inc\",\r\n        \"U.S. Bancorp\",\r\n        \"U.S. Industries Inc.\",\r\n        \"UAL Corporation\",\r\n        \"UGI Corporation\",\r\n        \"Unified Western Grocers Inc\",\r\n        \"Union Pacific Corporation\",\r\n        \"Union Planters Corp\",\r\n        \"Unisource Energy Corp\",\r\n        \"Unisys Corporation\",\r\n        \"United Auto Group Inc\",\r\n        \"United Defense Industries Inc.\",\r\n        \"United Parcel Service Inc\",\r\n        \"United Rentals Inc\",\r\n        \"United Stationers Inc\",\r\n        \"United Technologies Corporation\",\r\n        \"UnitedHealth Group Incorporated\",\r\n        \"Unitrin Inc\",\r\n        \"Universal Corporation\",\r\n        \"Universal Forest Products Inc\",\r\n        \"Universal Health Services Inc\",\r\n        \"Unocal Corporation\",\r\n        \"Unova Inc\",\r\n        \"UnumProvident Corporation\",\r\n        \"URS Corporation\",\r\n        \"US Airways Group Inc\",\r\n        \"US Oncology Inc\",\r\n        \"USA Interactive\",\r\n        \"USFreighways Corporation\",\r\n        \"USG Corporation\",\r\n        \"UST Inc\",\r\n        \"Valero Energy Corporation\",\r\n        \"Valspar Corporation\",\r\n        \"Value City Department Stores Inc\",\r\n        \"Varco International Inc\",\r\n        \"Vectren Corporation\",\r\n        \"Veritas Software Corporation\",\r\n        \"Verizon Communications Inc\",\r\n        \"VF Corporation\",\r\n        \"Viacom Inc\",\r\n        \"Viad Corp\",\r\n        \"Viasystems Group Inc\",\r\n        \"Vishay Intertechnology Inc\",\r\n        \"Visteon Corporation\",\r\n        \"Volt Information Sciences Inc\",\r\n        \"Vulcan Materials Company\",\r\n        \"W.R. Berkley Corporation\",\r\n        \"W.R. Grace & Co\",\r\n        \"W.W. Grainger Inc\",\r\n        \"Wachovia Corporation\",\r\n        \"Wakenhut Corporation\",\r\n        \"Walgreen Co\",\r\n        \"Wallace Computer Services Inc\",\r\n        \"Wal-Mart Stores Inc\",\r\n        \"Walt Disney Co\",\r\n        \"Walter Industries Inc\",\r\n        \"Washington Mutual Inc\",\r\n        \"Washington Post Co.\",\r\n        \"Waste Management Inc\",\r\n        \"Watsco Inc\",\r\n        \"Weatherford International Inc\",\r\n        \"Weis Markets Inc.\",\r\n        \"Wellpoint Health Networks Inc\",\r\n        \"Wells Fargo & Company\",\r\n        \"Wendy's International Inc\",\r\n        \"Werner Enterprises Inc\",\r\n        \"WESCO International Inc\",\r\n        \"Western Digital Inc\",\r\n        \"Western Gas Resources Inc\",\r\n        \"WestPoint Stevens Inc\",\r\n        \"Weyerhauser Company\",\r\n        \"WGL Holdings Inc\",\r\n        \"Whirlpool Corporation\",\r\n        \"Whole Foods Market Inc\",\r\n        \"Willamette Industries Inc.\",\r\n        \"Williams Companies Inc\",\r\n        \"Williams Sonoma Inc\",\r\n        \"Winn Dixie Stores Inc\",\r\n        \"Wisconsin Energy Corporation\",\r\n        \"Wm Wrigley Jr Company\",\r\n        \"World Fuel Services Corporation\",\r\n        \"WorldCom Inc\",\r\n        \"Worthington Industries Inc\",\r\n        \"WPS Resources Corporation\",\r\n        \"Wyeth\",\r\n        \"Wyndham International Inc\",\r\n        \"Xcel Energy Inc\",\r\n        \"Xerox Corp\",\r\n        \"Xilinx Inc\",\r\n        \"XO Communications Inc\",\r\n        \"Yellow Corporation\",\r\n        \"York International Corp\",\r\n        \"Yum Brands Inc.\",\r\n        \"Zale Corporation\",\r\n        \"Zions Bancorporation\"\r\n      ],\r\n\r\n        fileExtension : {\r\n            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\r\n            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\r\n            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\r\n            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\r\n        },\r\n\r\n        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\r\n        timezones: [\r\n                  {\r\n                    \"name\": \"Dateline Standard Time\",\r\n                    \"abbr\": \"DST\",\r\n                    \"offset\": -12,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-12:00) International Date Line West\",\r\n                    \"utc\": [\r\n                      \"Etc/GMT+12\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"UTC-11\",\r\n                    \"abbr\": \"U\",\r\n                    \"offset\": -11,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\r\n                    \"utc\": [\r\n                      \"Etc/GMT+11\",\r\n                      \"Pacific/Midway\",\r\n                      \"Pacific/Niue\",\r\n                      \"Pacific/Pago_Pago\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Hawaiian Standard Time\",\r\n                    \"abbr\": \"HST\",\r\n                    \"offset\": -10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-10:00) Hawaii\",\r\n                    \"utc\": [\r\n                      \"Etc/GMT+10\",\r\n                      \"Pacific/Honolulu\",\r\n                      \"Pacific/Johnston\",\r\n                      \"Pacific/Rarotonga\",\r\n                      \"Pacific/Tahiti\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Alaskan Standard Time\",\r\n                    \"abbr\": \"AKDT\",\r\n                    \"offset\": -8,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-09:00) Alaska\",\r\n                    \"utc\": [\r\n                      \"America/Anchorage\",\r\n                      \"America/Juneau\",\r\n                      \"America/Nome\",\r\n                      \"America/Sitka\",\r\n                      \"America/Yakutat\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Pacific Standard Time (Mexico)\",\r\n                    \"abbr\": \"PDT\",\r\n                    \"offset\": -7,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-08:00) Baja California\",\r\n                    \"utc\": [\r\n                      \"America/Santa_Isabel\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Pacific Standard Time\",\r\n                    \"abbr\": \"PDT\",\r\n                    \"offset\": -7,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\r\n                    \"utc\": [\r\n                      \"America/Dawson\",\r\n                      \"America/Los_Angeles\",\r\n                      \"America/Tijuana\",\r\n                      \"America/Vancouver\",\r\n                      \"America/Whitehorse\",\r\n                      \"PST8PDT\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"US Mountain Standard Time\",\r\n                    \"abbr\": \"UMST\",\r\n                    \"offset\": -7,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-07:00) Arizona\",\r\n                    \"utc\": [\r\n                      \"America/Creston\",\r\n                      \"America/Dawson_Creek\",\r\n                      \"America/Hermosillo\",\r\n                      \"America/Phoenix\",\r\n                      \"Etc/GMT+7\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Mountain Standard Time (Mexico)\",\r\n                    \"abbr\": \"MDT\",\r\n                    \"offset\": -6,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\r\n                    \"utc\": [\r\n                      \"America/Chihuahua\",\r\n                      \"America/Mazatlan\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Mountain Standard Time\",\r\n                    \"abbr\": \"MDT\",\r\n                    \"offset\": -6,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\r\n                    \"utc\": [\r\n                      \"America/Boise\",\r\n                      \"America/Cambridge_Bay\",\r\n                      \"America/Denver\",\r\n                      \"America/Edmonton\",\r\n                      \"America/Inuvik\",\r\n                      \"America/Ojinaga\",\r\n                      \"America/Yellowknife\",\r\n                      \"MST7MDT\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central America Standard Time\",\r\n                    \"abbr\": \"CAST\",\r\n                    \"offset\": -6,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-06:00) Central America\",\r\n                    \"utc\": [\r\n                      \"America/Belize\",\r\n                      \"America/Costa_Rica\",\r\n                      \"America/El_Salvador\",\r\n                      \"America/Guatemala\",\r\n                      \"America/Managua\",\r\n                      \"America/Tegucigalpa\",\r\n                      \"Etc/GMT+6\",\r\n                      \"Pacific/Galapagos\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Standard Time\",\r\n                    \"abbr\": \"CDT\",\r\n                    \"offset\": -5,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\r\n                    \"utc\": [\r\n                      \"America/Chicago\",\r\n                      \"America/Indiana/Knox\",\r\n                      \"America/Indiana/Tell_City\",\r\n                      \"America/Matamoros\",\r\n                      \"America/Menominee\",\r\n                      \"America/North_Dakota/Beulah\",\r\n                      \"America/North_Dakota/Center\",\r\n                      \"America/North_Dakota/New_Salem\",\r\n                      \"America/Rainy_River\",\r\n                      \"America/Rankin_Inlet\",\r\n                      \"America/Resolute\",\r\n                      \"America/Winnipeg\",\r\n                      \"CST6CDT\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Standard Time (Mexico)\",\r\n                    \"abbr\": \"CDT\",\r\n                    \"offset\": -5,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\r\n                    \"utc\": [\r\n                      \"America/Bahia_Banderas\",\r\n                      \"America/Cancun\",\r\n                      \"America/Merida\",\r\n                      \"America/Mexico_City\",\r\n                      \"America/Monterrey\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Canada Central Standard Time\",\r\n                    \"abbr\": \"CCST\",\r\n                    \"offset\": -6,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-06:00) Saskatchewan\",\r\n                    \"utc\": [\r\n                      \"America/Regina\",\r\n                      \"America/Swift_Current\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"SA Pacific Standard Time\",\r\n                    \"abbr\": \"SPST\",\r\n                    \"offset\": -5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\r\n                    \"utc\": [\r\n                      \"America/Bogota\",\r\n                      \"America/Cayman\",\r\n                      \"America/Coral_Harbour\",\r\n                      \"America/Eirunepe\",\r\n                      \"America/Guayaquil\",\r\n                      \"America/Jamaica\",\r\n                      \"America/Lima\",\r\n                      \"America/Panama\",\r\n                      \"America/Rio_Branco\",\r\n                      \"Etc/GMT+5\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Eastern Standard Time\",\r\n                    \"abbr\": \"EDT\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\r\n                    \"utc\": [\r\n                      \"America/Detroit\",\r\n                      \"America/Havana\",\r\n                      \"America/Indiana/Petersburg\",\r\n                      \"America/Indiana/Vincennes\",\r\n                      \"America/Indiana/Winamac\",\r\n                      \"America/Iqaluit\",\r\n                      \"America/Kentucky/Monticello\",\r\n                      \"America/Louisville\",\r\n                      \"America/Montreal\",\r\n                      \"America/Nassau\",\r\n                      \"America/New_York\",\r\n                      \"America/Nipigon\",\r\n                      \"America/Pangnirtung\",\r\n                      \"America/Port-au-Prince\",\r\n                      \"America/Thunder_Bay\",\r\n                      \"America/Toronto\",\r\n                      \"EST5EDT\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"US Eastern Standard Time\",\r\n                    \"abbr\": \"UEDT\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-05:00) Indiana (East)\",\r\n                    \"utc\": [\r\n                      \"America/Indiana/Marengo\",\r\n                      \"America/Indiana/Vevay\",\r\n                      \"America/Indianapolis\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Venezuela Standard Time\",\r\n                    \"abbr\": \"VST\",\r\n                    \"offset\": -4.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-04:30) Caracas\",\r\n                    \"utc\": [\r\n                      \"America/Caracas\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Paraguay Standard Time\",\r\n                    \"abbr\": \"PST\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-04:00) Asuncion\",\r\n                    \"utc\": [\r\n                      \"America/Asuncion\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Atlantic Standard Time\",\r\n                    \"abbr\": \"ADT\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\r\n                    \"utc\": [\r\n                      \"America/Glace_Bay\",\r\n                      \"America/Goose_Bay\",\r\n                      \"America/Halifax\",\r\n                      \"America/Moncton\",\r\n                      \"America/Thule\",\r\n                      \"Atlantic/Bermuda\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Brazilian Standard Time\",\r\n                    \"abbr\": \"CBST\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-04:00) Cuiaba\",\r\n                    \"utc\": [\r\n                      \"America/Campo_Grande\",\r\n                      \"America/Cuiaba\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"SA Western Standard Time\",\r\n                    \"abbr\": \"SWST\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\r\n                    \"utc\": [\r\n                      \"America/Anguilla\",\r\n                      \"America/Antigua\",\r\n                      \"America/Aruba\",\r\n                      \"America/Barbados\",\r\n                      \"America/Blanc-Sablon\",\r\n                      \"America/Boa_Vista\",\r\n                      \"America/Curacao\",\r\n                      \"America/Dominica\",\r\n                      \"America/Grand_Turk\",\r\n                      \"America/Grenada\",\r\n                      \"America/Guadeloupe\",\r\n                      \"America/Guyana\",\r\n                      \"America/Kralendijk\",\r\n                      \"America/La_Paz\",\r\n                      \"America/Lower_Princes\",\r\n                      \"America/Manaus\",\r\n                      \"America/Marigot\",\r\n                      \"America/Martinique\",\r\n                      \"America/Montserrat\",\r\n                      \"America/Port_of_Spain\",\r\n                      \"America/Porto_Velho\",\r\n                      \"America/Puerto_Rico\",\r\n                      \"America/Santo_Domingo\",\r\n                      \"America/St_Barthelemy\",\r\n                      \"America/St_Kitts\",\r\n                      \"America/St_Lucia\",\r\n                      \"America/St_Thomas\",\r\n                      \"America/St_Vincent\",\r\n                      \"America/Tortola\",\r\n                      \"Etc/GMT+4\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Pacific SA Standard Time\",\r\n                    \"abbr\": \"PSST\",\r\n                    \"offset\": -4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-04:00) Santiago\",\r\n                    \"utc\": [\r\n                      \"America/Santiago\",\r\n                      \"Antarctica/Palmer\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Newfoundland Standard Time\",\r\n                    \"abbr\": \"NDT\",\r\n                    \"offset\": -2.5,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-03:30) Newfoundland\",\r\n                    \"utc\": [\r\n                      \"America/St_Johns\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"E. South America Standard Time\",\r\n                    \"abbr\": \"ESAST\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-03:00) Brasilia\",\r\n                    \"utc\": [\r\n                      \"America/Sao_Paulo\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Argentina Standard Time\",\r\n                    \"abbr\": \"AST\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-03:00) Buenos Aires\",\r\n                    \"utc\": [\r\n                      \"America/Argentina/La_Rioja\",\r\n                      \"America/Argentina/Rio_Gallegos\",\r\n                      \"America/Argentina/Salta\",\r\n                      \"America/Argentina/San_Juan\",\r\n                      \"America/Argentina/San_Luis\",\r\n                      \"America/Argentina/Tucuman\",\r\n                      \"America/Argentina/Ushuaia\",\r\n                      \"America/Buenos_Aires\",\r\n                      \"America/Catamarca\",\r\n                      \"America/Cordoba\",\r\n                      \"America/Jujuy\",\r\n                      \"America/Mendoza\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"SA Eastern Standard Time\",\r\n                    \"abbr\": \"SEST\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\r\n                    \"utc\": [\r\n                      \"America/Araguaina\",\r\n                      \"America/Belem\",\r\n                      \"America/Cayenne\",\r\n                      \"America/Fortaleza\",\r\n                      \"America/Maceio\",\r\n                      \"America/Paramaribo\",\r\n                      \"America/Recife\",\r\n                      \"America/Santarem\",\r\n                      \"Antarctica/Rothera\",\r\n                      \"Atlantic/Stanley\",\r\n                      \"Etc/GMT+3\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Greenland Standard Time\",\r\n                    \"abbr\": \"GDT\",\r\n                    \"offset\": -2,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-03:00) Greenland\",\r\n                    \"utc\": [\r\n                      \"America/Godthab\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Montevideo Standard Time\",\r\n                    \"abbr\": \"MST\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-03:00) Montevideo\",\r\n                    \"utc\": [\r\n                      \"America/Montevideo\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Bahia Standard Time\",\r\n                    \"abbr\": \"BST\",\r\n                    \"offset\": -3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-03:00) Salvador\",\r\n                    \"utc\": [\r\n                      \"America/Bahia\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"UTC-02\",\r\n                    \"abbr\": \"U\",\r\n                    \"offset\": -2,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\r\n                    \"utc\": [\r\n                      \"America/Noronha\",\r\n                      \"Atlantic/South_Georgia\",\r\n                      \"Etc/GMT+2\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Mid-Atlantic Standard Time\",\r\n                    \"abbr\": \"MDT\",\r\n                    \"offset\": -1,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\"\r\n                  },\r\n                  {\r\n                    \"name\": \"Azores Standard Time\",\r\n                    \"abbr\": \"ADT\",\r\n                    \"offset\": 0,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC-01:00) Azores\",\r\n                    \"utc\": [\r\n                      \"America/Scoresbysund\",\r\n                      \"Atlantic/Azores\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Cape Verde Standard Time\",\r\n                    \"abbr\": \"CVST\",\r\n                    \"offset\": -1,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\r\n                    \"utc\": [\r\n                      \"Atlantic/Cape_Verde\",\r\n                      \"Etc/GMT+1\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Morocco Standard Time\",\r\n                    \"abbr\": \"MDT\",\r\n                    \"offset\": 1,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC) Casablanca\",\r\n                    \"utc\": [\r\n                      \"Africa/Casablanca\",\r\n                      \"Africa/El_Aaiun\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"UTC\",\r\n                    \"abbr\": \"CUT\",\r\n                    \"offset\": 0,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC) Coordinated Universal Time\",\r\n                    \"utc\": [\r\n                      \"America/Danmarkshavn\",\r\n                      \"Etc/GMT\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"GMT Standard Time\",\r\n                    \"abbr\": \"GDT\",\r\n                    \"offset\": 1,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC) Dublin, Edinburgh, Lisbon, London\",\r\n                    \"utc\": [\r\n                      \"Atlantic/Canary\",\r\n                      \"Atlantic/Faeroe\",\r\n                      \"Atlantic/Madeira\",\r\n                      \"Europe/Dublin\",\r\n                      \"Europe/Guernsey\",\r\n                      \"Europe/Isle_of_Man\",\r\n                      \"Europe/Jersey\",\r\n                      \"Europe/Lisbon\",\r\n                      \"Europe/London\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Greenwich Standard Time\",\r\n                    \"abbr\": \"GST\",\r\n                    \"offset\": 0,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC) Monrovia, Reykjavik\",\r\n                    \"utc\": [\r\n                      \"Africa/Abidjan\",\r\n                      \"Africa/Accra\",\r\n                      \"Africa/Bamako\",\r\n                      \"Africa/Banjul\",\r\n                      \"Africa/Bissau\",\r\n                      \"Africa/Conakry\",\r\n                      \"Africa/Dakar\",\r\n                      \"Africa/Freetown\",\r\n                      \"Africa/Lome\",\r\n                      \"Africa/Monrovia\",\r\n                      \"Africa/Nouakchott\",\r\n                      \"Africa/Ouagadougou\",\r\n                      \"Africa/Sao_Tome\",\r\n                      \"Atlantic/Reykjavik\",\r\n                      \"Atlantic/St_Helena\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"W. Europe Standard Time\",\r\n                    \"abbr\": \"WEDT\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\r\n                    \"utc\": [\r\n                      \"Arctic/Longyearbyen\",\r\n                      \"Europe/Amsterdam\",\r\n                      \"Europe/Andorra\",\r\n                      \"Europe/Berlin\",\r\n                      \"Europe/Busingen\",\r\n                      \"Europe/Gibraltar\",\r\n                      \"Europe/Luxembourg\",\r\n                      \"Europe/Malta\",\r\n                      \"Europe/Monaco\",\r\n                      \"Europe/Oslo\",\r\n                      \"Europe/Rome\",\r\n                      \"Europe/San_Marino\",\r\n                      \"Europe/Stockholm\",\r\n                      \"Europe/Vaduz\",\r\n                      \"Europe/Vatican\",\r\n                      \"Europe/Vienna\",\r\n                      \"Europe/Zurich\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Europe Standard Time\",\r\n                    \"abbr\": \"CEDT\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\r\n                    \"utc\": [\r\n                      \"Europe/Belgrade\",\r\n                      \"Europe/Bratislava\",\r\n                      \"Europe/Budapest\",\r\n                      \"Europe/Ljubljana\",\r\n                      \"Europe/Podgorica\",\r\n                      \"Europe/Prague\",\r\n                      \"Europe/Tirane\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Romance Standard Time\",\r\n                    \"abbr\": \"RDT\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\r\n                    \"utc\": [\r\n                      \"Africa/Ceuta\",\r\n                      \"Europe/Brussels\",\r\n                      \"Europe/Copenhagen\",\r\n                      \"Europe/Madrid\",\r\n                      \"Europe/Paris\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central European Standard Time\",\r\n                    \"abbr\": \"CEDT\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\r\n                    \"utc\": [\r\n                      \"Europe/Sarajevo\",\r\n                      \"Europe/Skopje\",\r\n                      \"Europe/Warsaw\",\r\n                      \"Europe/Zagreb\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"W. Central Africa Standard Time\",\r\n                    \"abbr\": \"WCAST\",\r\n                    \"offset\": 1,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+01:00) West Central Africa\",\r\n                    \"utc\": [\r\n                      \"Africa/Algiers\",\r\n                      \"Africa/Bangui\",\r\n                      \"Africa/Brazzaville\",\r\n                      \"Africa/Douala\",\r\n                      \"Africa/Kinshasa\",\r\n                      \"Africa/Lagos\",\r\n                      \"Africa/Libreville\",\r\n                      \"Africa/Luanda\",\r\n                      \"Africa/Malabo\",\r\n                      \"Africa/Ndjamena\",\r\n                      \"Africa/Niamey\",\r\n                      \"Africa/Porto-Novo\",\r\n                      \"Africa/Tunis\",\r\n                      \"Etc/GMT-1\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Namibia Standard Time\",\r\n                    \"abbr\": \"NST\",\r\n                    \"offset\": 1,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+01:00) Windhoek\",\r\n                    \"utc\": [\r\n                      \"Africa/Windhoek\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"GTB Standard Time\",\r\n                    \"abbr\": \"GDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\r\n                    \"utc\": [\r\n                      \"Asia/Nicosia\",\r\n                      \"Europe/Athens\",\r\n                      \"Europe/Bucharest\",\r\n                      \"Europe/Chisinau\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Middle East Standard Time\",\r\n                    \"abbr\": \"MEDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Beirut\",\r\n                    \"utc\": [\r\n                      \"Asia/Beirut\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Egypt Standard Time\",\r\n                    \"abbr\": \"EST\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+02:00) Cairo\",\r\n                    \"utc\": [\r\n                      \"Africa/Cairo\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Syria Standard Time\",\r\n                    \"abbr\": \"SDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Damascus\",\r\n                    \"utc\": [\r\n                      \"Asia/Damascus\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"E. Europe Standard Time\",\r\n                    \"abbr\": \"EEDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) E. Europe\"\r\n                  },\r\n                  {\r\n                    \"name\": \"South Africa Standard Time\",\r\n                    \"abbr\": \"SAST\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\r\n                    \"utc\": [\r\n                      \"Africa/Blantyre\",\r\n                      \"Africa/Bujumbura\",\r\n                      \"Africa/Gaborone\",\r\n                      \"Africa/Harare\",\r\n                      \"Africa/Johannesburg\",\r\n                      \"Africa/Kigali\",\r\n                      \"Africa/Lubumbashi\",\r\n                      \"Africa/Lusaka\",\r\n                      \"Africa/Maputo\",\r\n                      \"Africa/Maseru\",\r\n                      \"Africa/Mbabane\",\r\n                      \"Etc/GMT-2\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"FLE Standard Time\",\r\n                    \"abbr\": \"FDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\r\n                    \"utc\": [\r\n                      \"Europe/Helsinki\",\r\n                      \"Europe/Kiev\",\r\n                      \"Europe/Mariehamn\",\r\n                      \"Europe/Riga\",\r\n                      \"Europe/Sofia\",\r\n                      \"Europe/Tallinn\",\r\n                      \"Europe/Uzhgorod\",\r\n                      \"Europe/Vilnius\",\r\n                      \"Europe/Zaporozhye\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Turkey Standard Time\",\r\n                    \"abbr\": \"TDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Istanbul\",\r\n                    \"utc\": [\r\n                      \"Europe/Istanbul\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Israel Standard Time\",\r\n                    \"abbr\": \"JDT\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+02:00) Jerusalem\",\r\n                    \"utc\": [\r\n                      \"Asia/Jerusalem\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Libya Standard Time\",\r\n                    \"abbr\": \"LST\",\r\n                    \"offset\": 2,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+02:00) Tripoli\",\r\n                    \"utc\": [\r\n                      \"Africa/Tripoli\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Jordan Standard Time\",\r\n                    \"abbr\": \"JST\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+03:00) Amman\",\r\n                    \"utc\": [\r\n                      \"Asia/Amman\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Arabic Standard Time\",\r\n                    \"abbr\": \"AST\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+03:00) Baghdad\",\r\n                    \"utc\": [\r\n                      \"Asia/Baghdad\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Kaliningrad Standard Time\",\r\n                    \"abbr\": \"KST\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+03:00) Kaliningrad, Minsk\",\r\n                    \"utc\": [\r\n                      \"Europe/Kaliningrad\",\r\n                      \"Europe/Minsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Arab Standard Time\",\r\n                    \"abbr\": \"AST\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\r\n                    \"utc\": [\r\n                      \"Asia/Aden\",\r\n                      \"Asia/Bahrain\",\r\n                      \"Asia/Kuwait\",\r\n                      \"Asia/Qatar\",\r\n                      \"Asia/Riyadh\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"E. Africa Standard Time\",\r\n                    \"abbr\": \"EAST\",\r\n                    \"offset\": 3,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+03:00) Nairobi\",\r\n                    \"utc\": [\r\n                      \"Africa/Addis_Ababa\",\r\n                      \"Africa/Asmera\",\r\n                      \"Africa/Dar_es_Salaam\",\r\n                      \"Africa/Djibouti\",\r\n                      \"Africa/Juba\",\r\n                      \"Africa/Kampala\",\r\n                      \"Africa/Khartoum\",\r\n                      \"Africa/Mogadishu\",\r\n                      \"Africa/Nairobi\",\r\n                      \"Antarctica/Syowa\",\r\n                      \"Etc/GMT-3\",\r\n                      \"Indian/Antananarivo\",\r\n                      \"Indian/Comoro\",\r\n                      \"Indian/Mayotte\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Iran Standard Time\",\r\n                    \"abbr\": \"IDT\",\r\n                    \"offset\": 4.5,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+03:30) Tehran\",\r\n                    \"utc\": [\r\n                      \"Asia/Tehran\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Arabian Standard Time\",\r\n                    \"abbr\": \"AST\",\r\n                    \"offset\": 4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\r\n                    \"utc\": [\r\n                      \"Asia/Dubai\",\r\n                      \"Asia/Muscat\",\r\n                      \"Etc/GMT-4\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Azerbaijan Standard Time\",\r\n                    \"abbr\": \"ADT\",\r\n                    \"offset\": 5,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+04:00) Baku\",\r\n                    \"utc\": [\r\n                      \"Asia/Baku\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Russian Standard Time\",\r\n                    \"abbr\": \"RST\",\r\n                    \"offset\": 4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\r\n                    \"utc\": [\r\n                      \"Europe/Moscow\",\r\n                      \"Europe/Samara\",\r\n                      \"Europe/Simferopol\",\r\n                      \"Europe/Volgograd\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Mauritius Standard Time\",\r\n                    \"abbr\": \"MST\",\r\n                    \"offset\": 4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:00) Port Louis\",\r\n                    \"utc\": [\r\n                      \"Indian/Mahe\",\r\n                      \"Indian/Mauritius\",\r\n                      \"Indian/Reunion\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Georgian Standard Time\",\r\n                    \"abbr\": \"GST\",\r\n                    \"offset\": 4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:00) Tbilisi\",\r\n                    \"utc\": [\r\n                      \"Asia/Tbilisi\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Caucasus Standard Time\",\r\n                    \"abbr\": \"CST\",\r\n                    \"offset\": 4,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:00) Yerevan\",\r\n                    \"utc\": [\r\n                      \"Asia/Yerevan\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Afghanistan Standard Time\",\r\n                    \"abbr\": \"AST\",\r\n                    \"offset\": 4.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+04:30) Kabul\",\r\n                    \"utc\": [\r\n                      \"Asia/Kabul\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"West Asia Standard Time\",\r\n                    \"abbr\": \"WAST\",\r\n                    \"offset\": 5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\r\n                    \"utc\": [\r\n                      \"Antarctica/Mawson\",\r\n                      \"Asia/Aqtau\",\r\n                      \"Asia/Aqtobe\",\r\n                      \"Asia/Ashgabat\",\r\n                      \"Asia/Dushanbe\",\r\n                      \"Asia/Oral\",\r\n                      \"Asia/Samarkand\",\r\n                      \"Asia/Tashkent\",\r\n                      \"Etc/GMT-5\",\r\n                      \"Indian/Kerguelen\",\r\n                      \"Indian/Maldives\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Pakistan Standard Time\",\r\n                    \"abbr\": \"PST\",\r\n                    \"offset\": 5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\r\n                    \"utc\": [\r\n                      \"Asia/Karachi\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"India Standard Time\",\r\n                    \"abbr\": \"IST\",\r\n                    \"offset\": 5.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\r\n                    \"utc\": [\r\n                      \"Asia/Calcutta\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Sri Lanka Standard Time\",\r\n                    \"abbr\": \"SLST\",\r\n                    \"offset\": 5.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\r\n                    \"utc\": [\r\n                      \"Asia/Colombo\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Nepal Standard Time\",\r\n                    \"abbr\": \"NST\",\r\n                    \"offset\": 5.75,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+05:45) Kathmandu\",\r\n                    \"utc\": [\r\n                      \"Asia/Katmandu\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Asia Standard Time\",\r\n                    \"abbr\": \"CAST\",\r\n                    \"offset\": 6,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+06:00) Astana\",\r\n                    \"utc\": [\r\n                      \"Antarctica/Vostok\",\r\n                      \"Asia/Almaty\",\r\n                      \"Asia/Bishkek\",\r\n                      \"Asia/Qyzylorda\",\r\n                      \"Asia/Urumqi\",\r\n                      \"Etc/GMT-6\",\r\n                      \"Indian/Chagos\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Bangladesh Standard Time\",\r\n                    \"abbr\": \"BST\",\r\n                    \"offset\": 6,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+06:00) Dhaka\",\r\n                    \"utc\": [\r\n                      \"Asia/Dhaka\",\r\n                      \"Asia/Thimphu\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Ekaterinburg Standard Time\",\r\n                    \"abbr\": \"EST\",\r\n                    \"offset\": 6,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+06:00) Ekaterinburg\",\r\n                    \"utc\": [\r\n                      \"Asia/Yekaterinburg\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Myanmar Standard Time\",\r\n                    \"abbr\": \"MST\",\r\n                    \"offset\": 6.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\r\n                    \"utc\": [\r\n                      \"Asia/Rangoon\",\r\n                      \"Indian/Cocos\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"SE Asia Standard Time\",\r\n                    \"abbr\": \"SAST\",\r\n                    \"offset\": 7,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\r\n                    \"utc\": [\r\n                      \"Antarctica/Davis\",\r\n                      \"Asia/Bangkok\",\r\n                      \"Asia/Hovd\",\r\n                      \"Asia/Jakarta\",\r\n                      \"Asia/Phnom_Penh\",\r\n                      \"Asia/Pontianak\",\r\n                      \"Asia/Saigon\",\r\n                      \"Asia/Vientiane\",\r\n                      \"Etc/GMT-7\",\r\n                      \"Indian/Christmas\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"N. Central Asia Standard Time\",\r\n                    \"abbr\": \"NCAST\",\r\n                    \"offset\": 7,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+07:00) Novosibirsk\",\r\n                    \"utc\": [\r\n                      \"Asia/Novokuznetsk\",\r\n                      \"Asia/Novosibirsk\",\r\n                      \"Asia/Omsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"China Standard Time\",\r\n                    \"abbr\": \"CST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\r\n                    \"utc\": [\r\n                      \"Asia/Hong_Kong\",\r\n                      \"Asia/Macau\",\r\n                      \"Asia/Shanghai\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"North Asia Standard Time\",\r\n                    \"abbr\": \"NAST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\r\n                    \"utc\": [\r\n                      \"Asia/Krasnoyarsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Singapore Standard Time\",\r\n                    \"abbr\": \"MPST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\r\n                    \"utc\": [\r\n                      \"Asia/Brunei\",\r\n                      \"Asia/Kuala_Lumpur\",\r\n                      \"Asia/Kuching\",\r\n                      \"Asia/Makassar\",\r\n                      \"Asia/Manila\",\r\n                      \"Asia/Singapore\",\r\n                      \"Etc/GMT-8\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"W. Australia Standard Time\",\r\n                    \"abbr\": \"WAST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Perth\",\r\n                    \"utc\": [\r\n                      \"Antarctica/Casey\",\r\n                      \"Australia/Perth\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Taipei Standard Time\",\r\n                    \"abbr\": \"TST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Taipei\",\r\n                    \"utc\": [\r\n                      \"Asia/Taipei\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Ulaanbaatar Standard Time\",\r\n                    \"abbr\": \"UST\",\r\n                    \"offset\": 8,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\r\n                    \"utc\": [\r\n                      \"Asia/Choibalsan\",\r\n                      \"Asia/Ulaanbaatar\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"North Asia East Standard Time\",\r\n                    \"abbr\": \"NAEST\",\r\n                    \"offset\": 9,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+09:00) Irkutsk\",\r\n                    \"utc\": [\r\n                      \"Asia/Irkutsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Tokyo Standard Time\",\r\n                    \"abbr\": \"TST\",\r\n                    \"offset\": 9,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\r\n                    \"utc\": [\r\n                      \"Asia/Dili\",\r\n                      \"Asia/Jayapura\",\r\n                      \"Asia/Tokyo\",\r\n                      \"Etc/GMT-9\",\r\n                      \"Pacific/Palau\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Korea Standard Time\",\r\n                    \"abbr\": \"KST\",\r\n                    \"offset\": 9,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+09:00) Seoul\",\r\n                    \"utc\": [\r\n                      \"Asia/Pyongyang\",\r\n                      \"Asia/Seoul\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Cen. Australia Standard Time\",\r\n                    \"abbr\": \"CAST\",\r\n                    \"offset\": 9.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+09:30) Adelaide\",\r\n                    \"utc\": [\r\n                      \"Australia/Adelaide\",\r\n                      \"Australia/Broken_Hill\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"AUS Central Standard Time\",\r\n                    \"abbr\": \"ACST\",\r\n                    \"offset\": 9.5,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+09:30) Darwin\",\r\n                    \"utc\": [\r\n                      \"Australia/Darwin\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"E. Australia Standard Time\",\r\n                    \"abbr\": \"EAST\",\r\n                    \"offset\": 10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+10:00) Brisbane\",\r\n                    \"utc\": [\r\n                      \"Australia/Brisbane\",\r\n                      \"Australia/Lindeman\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"AUS Eastern Standard Time\",\r\n                    \"abbr\": \"AEST\",\r\n                    \"offset\": 10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\r\n                    \"utc\": [\r\n                      \"Australia/Melbourne\",\r\n                      \"Australia/Sydney\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"West Pacific Standard Time\",\r\n                    \"abbr\": \"WPST\",\r\n                    \"offset\": 10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\r\n                    \"utc\": [\r\n                      \"Antarctica/DumontDUrville\",\r\n                      \"Etc/GMT-10\",\r\n                      \"Pacific/Guam\",\r\n                      \"Pacific/Port_Moresby\",\r\n                      \"Pacific/Saipan\",\r\n                      \"Pacific/Truk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Tasmania Standard Time\",\r\n                    \"abbr\": \"TST\",\r\n                    \"offset\": 10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+10:00) Hobart\",\r\n                    \"utc\": [\r\n                      \"Australia/Currie\",\r\n                      \"Australia/Hobart\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Yakutsk Standard Time\",\r\n                    \"abbr\": \"YST\",\r\n                    \"offset\": 10,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+10:00) Yakutsk\",\r\n                    \"utc\": [\r\n                      \"Asia/Chita\",\r\n                      \"Asia/Khandyga\",\r\n                      \"Asia/Yakutsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Central Pacific Standard Time\",\r\n                    \"abbr\": \"CPST\",\r\n                    \"offset\": 11,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\r\n                    \"utc\": [\r\n                      \"Antarctica/Macquarie\",\r\n                      \"Etc/GMT-11\",\r\n                      \"Pacific/Efate\",\r\n                      \"Pacific/Guadalcanal\",\r\n                      \"Pacific/Kosrae\",\r\n                      \"Pacific/Noumea\",\r\n                      \"Pacific/Ponape\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Vladivostok Standard Time\",\r\n                    \"abbr\": \"VST\",\r\n                    \"offset\": 11,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+11:00) Vladivostok\",\r\n                    \"utc\": [\r\n                      \"Asia/Sakhalin\",\r\n                      \"Asia/Ust-Nera\",\r\n                      \"Asia/Vladivostok\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"New Zealand Standard Time\",\r\n                    \"abbr\": \"NZST\",\r\n                    \"offset\": 12,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\r\n                    \"utc\": [\r\n                      \"Antarctica/McMurdo\",\r\n                      \"Pacific/Auckland\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"UTC+12\",\r\n                    \"abbr\": \"U\",\r\n                    \"offset\": 12,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\r\n                    \"utc\": [\r\n                      \"Etc/GMT-12\",\r\n                      \"Pacific/Funafuti\",\r\n                      \"Pacific/Kwajalein\",\r\n                      \"Pacific/Majuro\",\r\n                      \"Pacific/Nauru\",\r\n                      \"Pacific/Tarawa\",\r\n                      \"Pacific/Wake\",\r\n                      \"Pacific/Wallis\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Fiji Standard Time\",\r\n                    \"abbr\": \"FST\",\r\n                    \"offset\": 12,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+12:00) Fiji\",\r\n                    \"utc\": [\r\n                      \"Pacific/Fiji\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Magadan Standard Time\",\r\n                    \"abbr\": \"MST\",\r\n                    \"offset\": 12,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+12:00) Magadan\",\r\n                    \"utc\": [\r\n                      \"Asia/Anadyr\",\r\n                      \"Asia/Kamchatka\",\r\n                      \"Asia/Magadan\",\r\n                      \"Asia/Srednekolymsk\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Kamchatka Standard Time\",\r\n                    \"abbr\": \"KDT\",\r\n                    \"offset\": 13,\r\n                    \"isdst\": true,\r\n                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\"\r\n                  },\r\n                  {\r\n                    \"name\": \"Tonga Standard Time\",\r\n                    \"abbr\": \"TST\",\r\n                    \"offset\": 13,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+13:00) Nuku'alofa\",\r\n                    \"utc\": [\r\n                      \"Etc/GMT-13\",\r\n                      \"Pacific/Enderbury\",\r\n                      \"Pacific/Fakaofo\",\r\n                      \"Pacific/Tongatapu\"\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"name\": \"Samoa Standard Time\",\r\n                    \"abbr\": \"SST\",\r\n                    \"offset\": 13,\r\n                    \"isdst\": false,\r\n                    \"text\": \"(UTC+13:00) Samoa\",\r\n                    \"utc\": [\r\n                      \"Pacific/Apia\"\r\n                    ]\r\n                  }\r\n                ],\r\n        //List source: http://answers.google.com/answers/threadview/id/589312.html\r\n        profession: [\r\n            \"Airline Pilot\",\r\n            \"Academic Team\",\r\n            \"Accountant\",\r\n            \"Account Executive\",\r\n            \"Actor\",\r\n            \"Actuary\",\r\n            \"Acquisition Analyst\",\r\n            \"Administrative Asst.\",\r\n            \"Administrative Analyst\",\r\n            \"Administrator\",\r\n            \"Advertising Director\",\r\n            \"Aerospace Engineer\",\r\n            \"Agent\",\r\n            \"Agricultural Inspector\",\r\n            \"Agricultural Scientist\",\r\n            \"Air Traffic Controller\",\r\n            \"Animal Trainer\",\r\n            \"Anthropologist\",\r\n            \"Appraiser\",\r\n            \"Architect\",\r\n            \"Art Director\",\r\n            \"Artist\",\r\n            \"Astronomer\",\r\n            \"Athletic Coach\",\r\n            \"Auditor\",\r\n            \"Author\",\r\n            \"Baker\",\r\n            \"Banker\",\r\n            \"Bankruptcy Attorney\",\r\n            \"Benefits Manager\",\r\n            \"Biologist\",\r\n            \"Bio-feedback Specialist\",\r\n            \"Biomedical Engineer\",\r\n            \"Biotechnical Researcher\",\r\n            \"Broadcaster\",\r\n            \"Broker\",\r\n            \"Building Manager\",\r\n            \"Building Contractor\",\r\n            \"Building Inspector\",\r\n            \"Business Analyst\",\r\n            \"Business Planner\",\r\n            \"Business Manager\",\r\n            \"Buyer\",\r\n            \"Call Center Manager\",\r\n            \"Career Counselor\",\r\n            \"Cash Manager\",\r\n            \"Ceramic Engineer\",\r\n            \"Chief Executive Officer\",\r\n            \"Chief Operation Officer\",\r\n            \"Chef\",\r\n            \"Chemical Engineer\",\r\n            \"Chemist\",\r\n            \"Child Care Manager\",\r\n            \"Chief Medical Officer\",\r\n            \"Chiropractor\",\r\n            \"Cinematographer\",\r\n            \"City Housing Manager\",\r\n            \"City Manager\",\r\n            \"Civil Engineer\",\r\n            \"Claims Manager\",\r\n            \"Clinical Research Assistant\",\r\n            \"Collections Manager.\",\r\n            \"Compliance Manager\",\r\n            \"Comptroller\",\r\n            \"Computer Manager\",\r\n            \"Commercial Artist\",\r\n            \"Communications Affairs Director\",\r\n            \"Communications Director\",\r\n            \"Communications Engineer\",\r\n            \"Compensation Analyst\",\r\n            \"Computer Programmer\",\r\n            \"Computer Ops. Manager\",\r\n            \"Computer Engineer\",\r\n            \"Computer Operator\",\r\n            \"Computer Graphics Specialist\",\r\n            \"Construction Engineer\",\r\n            \"Construction Manager\",\r\n            \"Consultant\",\r\n            \"Consumer Relations Manager\",\r\n            \"Contract Administrator\",\r\n            \"Copyright Attorney\",\r\n            \"Copywriter\",\r\n            \"Corporate Planner\",\r\n            \"Corrections Officer\",\r\n            \"Cosmetologist\",\r\n            \"Credit Analyst\",\r\n            \"Cruise Director\",\r\n            \"Chief Information Officer\",\r\n            \"Chief Technology Officer\",\r\n            \"Customer Service Manager\",\r\n            \"Cryptologist\",\r\n            \"Dancer\",\r\n            \"Data Security Manager\",\r\n            \"Database Manager\",\r\n            \"Day Care Instructor\",\r\n            \"Dentist\",\r\n            \"Designer\",\r\n            \"Design Engineer\",\r\n            \"Desktop Publisher\",\r\n            \"Developer\",\r\n            \"Development Officer\",\r\n            \"Diamond Merchant\",\r\n            \"Dietitian\",\r\n            \"Direct Marketer\",\r\n            \"Director\",\r\n            \"Distribution Manager\",\r\n            \"Diversity Manager\",\r\n            \"Economist\",\r\n            \"EEO Compliance Manager\",\r\n            \"Editor\",\r\n            \"Education Adminator\",\r\n            \"Electrical Engineer\",\r\n            \"Electro Optical Engineer\",\r\n            \"Electronics Engineer\",\r\n            \"Embassy Management\",\r\n            \"Employment Agent\",\r\n            \"Engineer Technician\",\r\n            \"Entrepreneur\",\r\n            \"Environmental Analyst\",\r\n            \"Environmental Attorney\",\r\n            \"Environmental Engineer\",\r\n            \"Environmental Specialist\",\r\n            \"Escrow Officer\",\r\n            \"Estimator\",\r\n            \"Executive Assistant\",\r\n            \"Executive Director\",\r\n            \"Executive Recruiter\",\r\n            \"Facilities Manager\",\r\n            \"Family Counselor\",\r\n            \"Fashion Events Manager\",\r\n            \"Fashion Merchandiser\",\r\n            \"Fast Food Manager\",\r\n            \"Film Producer\",\r\n            \"Film Production Assistant\",\r\n            \"Financial Analyst\",\r\n            \"Financial Planner\",\r\n            \"Financier\",\r\n            \"Fine Artist\",\r\n            \"Wildlife Specialist\",\r\n            \"Fitness Consultant\",\r\n            \"Flight Attendant\",\r\n            \"Flight Engineer\",\r\n            \"Floral Designer\",\r\n            \"Food & Beverage Director\",\r\n            \"Food Service Manager\",\r\n            \"Forestry Technician\",\r\n            \"Franchise Management\",\r\n            \"Franchise Sales\",\r\n            \"Fraud Investigator\",\r\n            \"Freelance Writer\",\r\n            \"Fund Raiser\",\r\n            \"General Manager\",\r\n            \"Geologist\",\r\n            \"General Counsel\",\r\n            \"Geriatric Specialist\",\r\n            \"Gerontologist\",\r\n            \"Glamour Photographer\",\r\n            \"Golf Club Manager\",\r\n            \"Gourmet Chef\",\r\n            \"Graphic Designer\",\r\n            \"Grounds Keeper\",\r\n            \"Hazardous Waste Manager\",\r\n            \"Health Care Manager\",\r\n            \"Health Therapist\",\r\n            \"Health Service Administrator\",\r\n            \"Hearing Officer\",\r\n            \"Home Economist\",\r\n            \"Horticulturist\",\r\n            \"Hospital Administrator\",\r\n            \"Hotel Manager\",\r\n            \"Human Resources Manager\",\r\n            \"Importer\",\r\n            \"Industrial Designer\",\r\n            \"Industrial Engineer\",\r\n            \"Information Director\",\r\n            \"Inside Sales\",\r\n            \"Insurance Adjuster\",\r\n            \"Interior Decorator\",\r\n            \"Internal Controls Director\",\r\n            \"International Acct.\",\r\n            \"International Courier\",\r\n            \"International Lawyer\",\r\n            \"Interpreter\",\r\n            \"Investigator\",\r\n            \"Investment Banker\",\r\n            \"Investment Manager\",\r\n            \"IT Architect\",\r\n            \"IT Project Manager\",\r\n            \"IT Systems Analyst\",\r\n            \"Jeweler\",\r\n            \"Joint Venture Manager\",\r\n            \"Journalist\",\r\n            \"Labor Negotiator\",\r\n            \"Labor Organizer\",\r\n            \"Labor Relations Manager\",\r\n            \"Lab Services Director\",\r\n            \"Lab Technician\",\r\n            \"Land Developer\",\r\n            \"Landscape Architect\",\r\n            \"Law Enforcement Officer\",\r\n            \"Lawyer\",\r\n            \"Lead Software Engineer\",\r\n            \"Lead Software Test Engineer\",\r\n            \"Leasing Manager\",\r\n            \"Legal Secretary\",\r\n            \"Library Manager\",\r\n            \"Litigation Attorney\",\r\n            \"Loan Officer\",\r\n            \"Lobbyist\",\r\n            \"Logistics Manager\",\r\n            \"Maintenance Manager\",\r\n            \"Management Consultant\",\r\n            \"Managed Care Director\",\r\n            \"Managing Partner\",\r\n            \"Manufacturing Director\",\r\n            \"Manpower Planner\",\r\n            \"Marine Biologist\",\r\n            \"Market Res. Analyst\",\r\n            \"Marketing Director\",\r\n            \"Materials Manager\",\r\n            \"Mathematician\",\r\n            \"Membership Chairman\",\r\n            \"Mechanic\",\r\n            \"Mechanical Engineer\",\r\n            \"Media Buyer\",\r\n            \"Medical Investor\",\r\n            \"Medical Secretary\",\r\n            \"Medical Technician\",\r\n            \"Mental Health Counselor\",\r\n            \"Merchandiser\",\r\n            \"Metallurgical Engineering\",\r\n            \"Meteorologist\",\r\n            \"Microbiologist\",\r\n            \"MIS Manager\",\r\n            \"Motion Picture Director\",\r\n            \"Multimedia Director\",\r\n            \"Musician\",\r\n            \"Network Administrator\",\r\n            \"Network Specialist\",\r\n            \"Network Operator\",\r\n            \"New Product Manager\",\r\n            \"Novelist\",\r\n            \"Nuclear Engineer\",\r\n            \"Nuclear Specialist\",\r\n            \"Nutritionist\",\r\n            \"Nursing Administrator\",\r\n            \"Occupational Therapist\",\r\n            \"Oceanographer\",\r\n            \"Office Manager\",\r\n            \"Operations Manager\",\r\n            \"Operations Research Director\",\r\n            \"Optical Technician\",\r\n            \"Optometrist\",\r\n            \"Organizational Development Manager\",\r\n            \"Outplacement Specialist\",\r\n            \"Paralegal\",\r\n            \"Park Ranger\",\r\n            \"Patent Attorney\",\r\n            \"Payroll Specialist\",\r\n            \"Personnel Specialist\",\r\n            \"Petroleum Engineer\",\r\n            \"Pharmacist\",\r\n            \"Photographer\",\r\n            \"Physical Therapist\",\r\n            \"Physician\",\r\n            \"Physician Assistant\",\r\n            \"Physicist\",\r\n            \"Planning Director\",\r\n            \"Podiatrist\",\r\n            \"Political Analyst\",\r\n            \"Political Scientist\",\r\n            \"Politician\",\r\n            \"Portfolio Manager\",\r\n            \"Preschool Management\",\r\n            \"Preschool Teacher\",\r\n            \"Principal\",\r\n            \"Private Banker\",\r\n            \"Private Investigator\",\r\n            \"Probation Officer\",\r\n            \"Process Engineer\",\r\n            \"Producer\",\r\n            \"Product Manager\",\r\n            \"Product Engineer\",\r\n            \"Production Engineer\",\r\n            \"Production Planner\",\r\n            \"Professional Athlete\",\r\n            \"Professional Coach\",\r\n            \"Professor\",\r\n            \"Project Engineer\",\r\n            \"Project Manager\",\r\n            \"Program Manager\",\r\n            \"Property Manager\",\r\n            \"Public Administrator\",\r\n            \"Public Safety Director\",\r\n            \"PR Specialist\",\r\n            \"Publisher\",\r\n            \"Purchasing Agent\",\r\n            \"Publishing Director\",\r\n            \"Quality Assurance Specialist\",\r\n            \"Quality Control Engineer\",\r\n            \"Quality Control Inspector\",\r\n            \"Radiology Manager\",\r\n            \"Railroad Engineer\",\r\n            \"Real Estate Broker\",\r\n            \"Recreational Director\",\r\n            \"Recruiter\",\r\n            \"Redevelopment Specialist\",\r\n            \"Regulatory Affairs Manager\",\r\n            \"Registered Nurse\",\r\n            \"Rehabilitation Counselor\",\r\n            \"Relocation Manager\",\r\n            \"Reporter\",\r\n            \"Research Specialist\",\r\n            \"Restaurant Manager\",\r\n            \"Retail Store Manager\",\r\n            \"Risk Analyst\",\r\n            \"Safety Engineer\",\r\n            \"Sales Engineer\",\r\n            \"Sales Trainer\",\r\n            \"Sales Promotion Manager\",\r\n            \"Sales Representative\",\r\n            \"Sales Manager\",\r\n            \"Service Manager\",\r\n            \"Sanitation Engineer\",\r\n            \"Scientific Programmer\",\r\n            \"Scientific Writer\",\r\n            \"Securities Analyst\",\r\n            \"Security Consultant\",\r\n            \"Security Director\",\r\n            \"Seminar Presenter\",\r\n            \"Ship's Officer\",\r\n            \"Singer\",\r\n            \"Social Director\",\r\n            \"Social Program Planner\",\r\n            \"Social Research\",\r\n            \"Social Scientist\",\r\n            \"Social Worker\",\r\n            \"Sociologist\",\r\n            \"Software Developer\",\r\n            \"Software Engineer\",\r\n            \"Software Test Engineer\",\r\n            \"Soil Scientist\",\r\n            \"Special Events Manager\",\r\n            \"Special Education Teacher\",\r\n            \"Special Projects Director\",\r\n            \"Speech Pathologist\",\r\n            \"Speech Writer\",\r\n            \"Sports Event Manager\",\r\n            \"Statistician\",\r\n            \"Store Manager\",\r\n            \"Strategic Alliance Director\",\r\n            \"Strategic Planning Director\",\r\n            \"Stress Reduction Specialist\",\r\n            \"Stockbroker\",\r\n            \"Surveyor\",\r\n            \"Structural Engineer\",\r\n            \"Superintendent\",\r\n            \"Supply Chain Director\",\r\n            \"System Engineer\",\r\n            \"Systems Analyst\",\r\n            \"Systems Programmer\",\r\n            \"System Administrator\",\r\n            \"Tax Specialist\",\r\n            \"Teacher\",\r\n            \"Technical Support Specialist\",\r\n            \"Technical Illustrator\",\r\n            \"Technical Writer\",\r\n            \"Technology Director\",\r\n            \"Telecom Analyst\",\r\n            \"Telemarketer\",\r\n            \"Theatrical Director\",\r\n            \"Title Examiner\",\r\n            \"Tour Escort\",\r\n            \"Tour Guide Director\",\r\n            \"Traffic Manager\",\r\n            \"Trainer Translator\",\r\n            \"Transportation Manager\",\r\n            \"Travel Agent\",\r\n            \"Treasurer\",\r\n            \"TV Programmer\",\r\n            \"Underwriter\",\r\n            \"Union Representative\",\r\n            \"University Administrator\",\r\n            \"University Dean\",\r\n            \"Urban Planner\",\r\n            \"Veterinarian\",\r\n            \"Vendor Relations Director\",\r\n            \"Viticulturist\",\r\n            \"Warehouse Manager\"\r\n        ],\r\n        animals : {\r\n          //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\r\n          \"ocean\" : [\"Acantharea\",\"Anemone\",\"Angelfish King\",\"Ahi Tuna\",\"Albacore\",\"American Oyster\",\"Anchovy\",\"Armored Snail\",\"Arctic Char\",\"Atlantic Bluefin Tuna\",\"Atlantic Cod\",\"Atlantic Goliath Grouper\",\"Atlantic Trumpetfish\",\"Atlantic Wolffish\",\"Baleen Whale\",\"Banded Butterflyfish\",\"Banded Coral Shrimp\",\"Banded Sea Krait\",\"Barnacle\",\"Barndoor Skate\",\"Barracuda\",\"Basking Shark\",\"Bass\",\"Beluga Whale\",\"Bluebanded Goby\",\"Bluehead Wrasse\",\"Bluefish\",\"Bluestreak Cleaner-Wrasse\",\"Blue Marlin\",\"Blue Shark\",\"Blue Spiny Lobster\",\"Blue Tang\",\"Blue Whale\",\"Broadclub Cuttlefish\",\"Bull Shark\",\"Chambered Nautilus\",\"Chilean Basket Star\",\"Chilean Jack Mackerel\",\"Chinook Salmon\",\"Christmas Tree Worm\",\"Clam\",\"Clown Anemonefish\",\"Clown Triggerfish\",\"Cod\",\"Coelacanth\",\"Cockscomb Cup Coral\",\"Common Fangtooth\",\"Conch\",\"Cookiecutter Shark\",\"Copepod\",\"Coral\",\"Corydoras\",\"Cownose Ray\",\"Crab\",\"Crown-of-Thorns Starfish\",\"Cushion Star\",\"Cuttlefish\",\"California Sea Otters\",\"Dolphin\",\"Dolphinfish\",\"Dory\",\"Devil Fish\",\"Dugong\",\"Dumbo Octopus\",\"Dungeness Crab\",\"Eccentric Sand Dollar\",\"Edible Sea Cucumber\",\"Eel\",\"Elephant Seal\",\"Elkhorn Coral\",\"Emperor Shrimp\",\"Estuarine Crocodile\",\"Fathead Sculpin\",\"Fiddler Crab\",\"Fin Whale\",\"Flameback\",\"Flamingo Tongue Snail\",\"Flashlight Fish\",\"Flatback Turtle\",\"Flatfish\",\"Flying Fish\",\"Flounder\",\"Fluke\",\"French Angelfish\",\"Frilled Shark\",\"Fugu (also called Pufferfish)\",\"Gar\",\"Geoduck\",\"Giant Barrel Sponge\",\"Giant Caribbean Sea Anemone\",\"Giant Clam\",\"Giant Isopod\",\"Giant Kingfish\",\"Giant Oarfish\",\"Giant Pacific Octopus\",\"Giant Pyrosome\",\"Giant Sea Star\",\"Giant Squid\",\"Glowing Sucker Octopus\",\"Giant Tube Worm\",\"Goblin Shark\",\"Goosefish\",\"Great White Shark\",\"Greenland Shark\",\"Grey Atlantic Seal\",\"Grouper\",\"Grunion\",\"Guineafowl Puffer\",\"Haddock\",\"Hake\",\"Halibut\",\"Hammerhead Shark\",\"Hapuka\",\"Harbor Porpoise\",\"Harbor Seal\",\"Hatchetfish\",\"Hawaiian Monk Seal\",\"Hawksbill Turtle\",\"Hector's Dolphin\",\"Hermit Crab\",\"Herring\",\"Hoki\",\"Horn Shark\",\"Horseshoe Crab\",\"Humpback Anglerfish\",\"Humpback Whale\",\"Icefish\",\"Imperator Angelfish\",\"Irukandji Jellyfish\",\"Isopod\",\"Ivory Bush Coral\",\"Japanese Spider Crab\",\"Jellyfish\",\"John Dory\",\"Juan Fernandez Fur Seal\",\"Killer Whale\",\"Kiwa Hirsuta\",\"Krill\",\"Lagoon Triggerfish\",\"Lamprey\",\"Leafy Seadragon\",\"Leopard Seal\",\"Limpet\",\"Ling\",\"Lionfish\",\"Lions Mane Jellyfish\",\"Lobe Coral\",\"Lobster\",\"Loggerhead Turtle\",\"Longnose Sawshark\",\"Longsnout Seahorse\",\"Lophelia Coral\",\"Marrus Orthocanna\",\"Manatee\",\"Manta Ray\",\"Marlin\",\"Megamouth Shark\",\"Mexican Lookdown\",\"Mimic Octopus\",\"Moon Jelly\",\"Mollusk\",\"Monkfish\",\"Moray Eel\",\"Mullet\",\"Mussel\",\"Megaladon\",\"Napoleon Wrasse\",\"Nassau Grouper\",\"Narwhal\",\"Nautilus\",\"Needlefish\",\"Northern Seahorse\",\"North Atlantic Right Whale\",\"Northern Red Snapper\",\"Norway Lobster\",\"Nudibranch\",\"Nurse Shark\",\"Oarfish\",\"Ocean Sunfish\",\"Oceanic Whitetip Shark\",\"Octopus\",\"Olive Sea Snake\",\"Orange Roughy\",\"Ostracod\",\"Otter\",\"Oyster\",\"Pacific Angelshark\",\"Pacific Blackdragon\",\"Pacific Halibut\",\"Pacific Sardine\",\"Pacific Sea Nettle Jellyfish\",\"Pacific White Sided Dolphin\",\"Pantropical Spotted Dolphin\",\"Patagonian Toothfish\",\"Peacock Mantis Shrimp\",\"Pelagic Thresher Shark\",\"Penguin\",\"Peruvian Anchoveta\",\"Pilchard\",\"Pink Salmon\",\"Pinniped\",\"Plankton\",\"Porpoise\",\"Polar Bear\",\"Portuguese Man o' War\",\"Pycnogonid Sea Spider\",\"Quahog\",\"Queen Angelfish\",\"Queen Conch\",\"Queen Parrotfish\",\"Queensland Grouper\",\"Ragfish\",\"Ratfish\",\"Rattail Fish\",\"Ray\",\"Red Drum\",\"Red King Crab\",\"Ringed Seal\",\"Risso's Dolphin\",\"Ross Seals\",\"Sablefish\",\"Salmon\",\"Sand Dollar\",\"Sandbar Shark\",\"Sawfish\",\"Sarcastic Fringehead\",\"Scalloped Hammerhead Shark\",\"Seahorse\",\"Sea Cucumber\",\"Sea Lion\",\"Sea Urchin\",\"Seal\",\"Shark\",\"Shortfin Mako Shark\",\"Shovelnose Guitarfish\",\"Shrimp\",\"Silverside Fish\",\"Skipjack Tuna\",\"Slender Snipe Eel\",\"Smalltooth Sawfish\",\"Smelts\",\"Sockeye Salmon\",\"Southern Stingray\",\"Sponge\",\"Spotted Porcupinefish\",\"Spotted Dolphin\",\"Spotted Eagle Ray\",\"Spotted Moray\",\"Squid\",\"Squidworm\",\"Starfish\",\"Stickleback\",\"Stonefish\",\"Stoplight Loosejaw\",\"Sturgeon\",\"Swordfish\",\"Tan Bristlemouth\",\"Tasseled Wobbegong\",\"Terrible Claw Lobster\",\"Threespot Damselfish\",\"Tiger Prawn\",\"Tiger Shark\",\"Tilefish\",\"Toadfish\",\"Tropical Two-Wing Flyfish\",\"Tuna\",\"Umbrella Squid\",\"Velvet Crab\",\"Venus Flytrap Sea Anemone\",\"Vigtorniella Worm\",\"Viperfish\",\"Vampire Squid\",\"Vaquita\",\"Wahoo\",\"Walrus\",\"West Indian Manatee\",\"Whale\",\"Whale Shark\",\"Whiptail Gulper\",\"White-Beaked Dolphin\",\"White-Ring Garden Eel\",\"White Shrimp\",\"Wobbegong\",\"Wrasse\",\"Wreckfish\",\"Xiphosura\",\"Yellowtail Damselfish\",\"Yelloweye Rockfish\",\"Yellow Cup Black Coral\",\"Yellow Tube Sponge\",\"Yellowfin Tuna\",\"Zebrashark\",\"Zooplankton\"],\r\n          //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\r\n          \"desert\" : [\"Aardwolf\",\"Addax\",\"African Wild Ass\",\"Ant\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bat\",\"Bearded Dragon\",\"Beetle\",\"Bird\",\"Black-footed Cat\",\"Boa\",\"Brown Bear\",\"Bustard\",\"Butterfly\",\"Camel\",\"Caracal\",\"Caracara\",\"Caterpillar\",\"Centipede\",\"Cheetah\",\"Chipmunk\",\"Chuckwalla\",\"Climbing Mouse\",\"Coati\",\"Cobra\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Crane Fly\",\"Crow\",\"Dassie Rat\",\"Dove\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Emu\",\"Falcon\",\"Fly\",\"Fox\",\"Frogmouth\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Grasshopper\",\"Guanaco\",\"Gundi\",\"Hamster\",\"Hawk\",\"Hedgehog\",\"Hyena\",\"Hyrax\",\"Jackal\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kowari\",\"Kultarr\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pronghorn\",\"Python\",\"Rabbit\",\"Raccoon\",\"Rattlesnake\",\"Rhinoceros\",\"Sand Cat\",\"Spectacled Bear\",\"Spiny Mouse\",\"Starling\",\"Stick Bug\",\"Tarantula\",\"Tit\",\"Toad\",\"Tortoise\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Waxwing\",\"Xerus\",\"Zebra\"],\r\n          \"grassland\" : [\"Aardvark\",\"Aardwolf\",\"Accentor\",\"African Buffalo\",\"African Wild Dog\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Barbet\",\"Bat\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bird\",\"Bison\",\"Black-footed Cat\",\"Black-footed Ferret\",\"Bluebird\",\"Boa\",\"Bowerbird\",\"Brown Bear\",\"Bush Dog\",\"Bushshrike\",\"Bustard\",\"Butterfly\",\"Buzzard\",\"Caracal\",\"Caracara\",\"Cardinal\",\"Caterpillar\",\"Cheetah\",\"Chipmunk\",\"Civet\",\"Climbing Mouse\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Common Genet\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Coyote\",\"Crane\",\"Crane Fly\",\"Cricket\",\"Crow\",\"Culpeo\",\"Death Adder\",\"Deer\",\"Deer Mouse\",\"Dingo\",\"Dinosaur\",\"Dove\",\"Drongo\",\"Duck\",\"Duiker\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Elk\",\"Emu\",\"Falcon\",\"Finch\",\"Flea\",\"Fly\",\"Flying Frog\",\"Fox\",\"Frog\",\"Frogmouth\",\"Garter Snake\",\"Gazelle\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Giant Tortoise\",\"Giraffe\",\"Grasshopper\",\"Grison\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Guinea Pig\",\"Hamster\",\"Harrier\",\"Hartebeest\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hippopotamus\",\"Hornbill\",\"Hyena\",\"Hyrax\",\"Impala\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kultarr\",\"Ladybug\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Newt\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pangolin\",\"Pheasant\",\"Prairie Dog\",\"Pronghorn\",\"Przewalski's Horse\",\"Python\",\"Quoll\",\"Rabbit\",\"Raven\",\"Rhinoceros\",\"Shelduck\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Tamandua\",\"Tasmanian Devil\",\"Thornbill\",\"Thrush\",\"Toad\",\"Tortoise\"],\r\n          \"forest\" : [\"Agouti\",\"Anaconda\",\"Anoa\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Asian Black Bear\",\"Aye-aye\",\"Babirusa\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Banteng\",\"Barbet\",\"Basilisk\",\"Bat\",\"Bearded Dragon\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bettong\",\"Binturong\",\"Bird-of-paradise\",\"Bongo\",\"Bowerbird\",\"Bulbul\",\"Bush Dog\",\"Bushbaby\",\"Bushshrike\",\"Butterfly\",\"Buzzard\",\"Caecilian\",\"Cardinal\",\"Cassowary\",\"Caterpillar\",\"Centipede\",\"Chameleon\",\"Chimpanzee\",\"Cicada\",\"Civet\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Colugo\",\"Cotinga\",\"Cotton Rat\",\"Cougar\",\"Crane Fly\",\"Cricket\",\"Crocodile\",\"Crow\",\"Cuckoo\",\"Cuscus\",\"Death Adder\",\"Deer\",\"Dhole\",\"Dingo\",\"Dinosaur\",\"Drongo\",\"Duck\",\"Duiker\",\"Eagle\",\"Echidna\",\"Elephant\",\"Finch\",\"Flat-headed Cat\",\"Flea\",\"Flowerpecker\",\"Fly\",\"Flying Frog\",\"Fossa\",\"Frog\",\"Frogmouth\",\"Gaur\",\"Gecko\",\"Gorilla\",\"Grison\",\"Hawaiian Honeycreeper\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hornbill\",\"Hyrax\",\"Iguana\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kestrel\",\"Ladybug\",\"Lemur\",\"Leopard\",\"Lion\",\"Macaw\",\"Mandrill\",\"Margay\",\"Monkey\",\"Mouse\",\"Mouse Deer\",\"Newt\",\"Okapi\",\"Old World Flycatcher\",\"Orangutan\",\"Owl\",\"Pangolin\",\"Peafowl\",\"Pheasant\",\"Possum\",\"Python\",\"Quokka\",\"Rabbit\",\"Raccoon\",\"Red Panda\",\"Red River Hog\",\"Rhinoceros\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Sun Bear\",\"Tamandua\",\"Tamarin\",\"Tapir\",\"Tarantula\",\"Thrush\",\"Tiger\",\"Tit\",\"Toad\",\"Tortoise\",\"Toucan\",\"Trogon\",\"Trumpeter\",\"Turaco\",\"Turtle\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Wallaby\",\"Warbler\",\"Wasp\",\"Waxwing\",\"Weaver\",\"Weaver-finch\",\"Whistler\",\"White-eye\",\"Whydah\",\"Woodswallow\",\"Worm\",\"Wren\",\"Xenops\",\"Yellowjacket\",\"Accentor\",\"African Buffalo\",\"American Black Bear\",\"Anole\",\"Bird\",\"Bison\",\"Boa\",\"Brown Bear\",\"Chipmunk\",\"Common Genet\",\"Copperhead\",\"Coyote\",\"Deer Mouse\",\"Dormouse\",\"Elk\",\"Emu\",\"Fisher\",\"Fox\",\"Garter Snake\",\"Giant Panda\",\"Giant Tortoise\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Himalayan Tahr\",\"Kangaroo\",\"Koala\",\"Numbat\",\"Quoll\",\"Raccoon dog\",\"Tasmanian Devil\",\"Thornbill\",\"Turkey\",\"Vole\",\"Weasel\",\"Wildcat\",\"Wolf\",\"Wombat\",\"Woodchuck\",\"Woodpecker\"],\r\n          //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\r\n          \"farm\" : [\"Alpaca\",\"Buffalo\",\"Banteng\",\"Cow\",\"Cat\",\"Chicken\",\"Carp\",\"Camel\",\"Donkey\",\"Dog\",\"Duck\",\"Emu\",\"Goat\",\"Gayal\",\"Guinea\",\"Goose\",\"Horse\",\"Honey\",\"Llama\",\"Pig\",\"Pigeon\",\"Rhea\",\"Rabbit\",\"Sheep\",\"Silkworm\",\"Turkey\",\"Yak\",\"Zebu\"],\r\n          //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\r\n          \"pet\" : [\"Bearded Dragon\",\"Birds\",\"Burro\",\"Cats\",\"Chameleons\",\"Chickens\",\"Chinchillas\",\"Chinese Water Dragon\",\"Cows\",\"Dogs\",\"Donkey\",\"Ducks\",\"Ferrets\",\"Fish\",\"Geckos\",\"Geese\",\"Gerbils\",\"Goats\",\"Guinea Fowl\",\"Guinea Pigs\",\"Hamsters\",\"Hedgehogs\",\"Horses\",\"Iguanas\",\"Llamas\",\"Lizards\",\"Mice\",\"Mule\",\"Peafowl\",\"Pigs and Hogs\",\"Pigeons\",\"Ponies\",\"Pot Bellied Pig\",\"Rabbits\",\"Rats\",\"Sheep\",\"Skinks\",\"Snakes\",\"Stick Insects\",\"Sugar Gliders\",\"Tarantula\",\"Turkeys\",\"Turtles\"],\r\n          //list of zoo animals comes from https://bronxzoo.com/animals\r\n          \"zoo\" : [\"Aardvark\",\"African Wild Dog\",\"Aldabra Tortoise\",\"American Alligator\",\"American Bison\",\"Amur Tiger\",\"Anaconda\",\"Andean Condor\",\"Asian Elephant\",\"Baby Doll Sheep\",\"Bald Eagle\",\"Barred Owl\",\"Blue Iguana\",\"Boer Goat\",\"California Sea Lion\",\"Caribbean Flamingo\",\"Chinchilla\",\"Collared Lemur\",\"Coquerel's Sifaka\",\"Cuban Amazon Parrot\",\"Ebony Langur\",\"Fennec Fox\",\"Fossa\",\"Gelada\",\"Giant Anteater\",\"Giraffe\",\"Gorilla\",\"Grizzly Bear\",\"Henkel's Leaf-tailed Gecko\",\"Indian Gharial\",\"Indian Rhinoceros\",\"King Cobra\",\"King Vulture\",\"Komodo Dragon\",\"Linne's Two-toed Sloth\",\"Lion\",\"Little Penguin\",\"Madagascar Tree Boa\",\"Magellanic Penguin\",\"Malayan Tapir\",\"Malayan Tiger\",\"Matschies Tree Kangaroo\",\"Mini Donkey\",\"Monarch Butterfly\",\"Nile crocodile\",\"North American Porcupine\",\"Nubian Ibex\",\"Okapi\",\"Poison Dart Frog\",\"Polar Bear\",\"Pygmy Marmoset\",\"Radiated Tortoise\",\"Red Panda\",\"Red Ruffed Lemur\",\"Ring-tailed Lemur\",\"Ring-tailed Mongoose\",\"Rock Hyrax\",\"Small Clawed Asian Otter\",\"Snow Leopard\",\"Snowy Owl\",\"Southern White-faced Owl\",\"Southern White Rhinocerous\",\"Squirrel Monkey\",\"Tufted Puffin\",\"White Cheeked Gibbon\",\"White-throated Bee Eater\",\"Zebra\"]\r\n        }\r\n    };\r\n\r\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    var o_keys = (Object.keys || function(obj) {\r\n      var result = [];\r\n      for (var key in obj) {\r\n        if (o_hasOwnProperty.call(obj, key)) {\r\n          result.push(key);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n\r\n    function _copyObject(source, target) {\r\n      var keys = o_keys(source);\r\n      var key;\r\n\r\n      for (var i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        target[key] = source[key] || target[key];\r\n      }\r\n    }\r\n\r\n    function _copyArray(source, target) {\r\n      for (var i = 0, l = source.length; i < l; i++) {\r\n        target[i] = source[i];\r\n      }\r\n    }\r\n\r\n    function copyObject(source, _target) {\r\n        var isArray = Array.isArray(source);\r\n        var target = _target || (isArray ? new Array(source.length) : {});\r\n\r\n        if (isArray) {\r\n          _copyArray(source, target);\r\n        } else {\r\n          _copyObject(source, target);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    /** Get the data based on key**/\r\n    Chance.prototype.get = function (name) {\r\n        return copyObject(data[name]);\r\n    };\r\n\r\n    // Mac Address\r\n    Chance.prototype.mac_address = function(options){\r\n        // typically mac addresses are separated by \":\"\r\n        // however they can also be separated by \"-\"\r\n        // the network variant uses a dot every fourth byte\r\n\r\n        options = initOptions(options);\r\n        if(!options.separator) {\r\n            options.separator =  options.networkVersion ? \".\" : \":\";\r\n        }\r\n\r\n        var mac_pool=\"ABCDEF1234567890\",\r\n            mac = \"\";\r\n        if(!options.networkVersion) {\r\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\r\n        } else {\r\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\r\n        }\r\n\r\n        return mac;\r\n    };\r\n\r\n    Chance.prototype.normal = function (options) {\r\n        options = initOptions(options, {mean : 0, dev : 1, pool : []});\r\n\r\n        testRange(\r\n            options.pool.constructor !== Array,\r\n            \"Chance: The pool option must be a valid array.\"\r\n        );\r\n        testRange(\r\n            typeof options.mean !== 'number',\r\n            \"Chance: Mean (mean) must be a number\"\r\n        );\r\n        testRange(\r\n            typeof options.dev !== 'number',\r\n            \"Chance: Standard deviation (dev) must be a number\"\r\n        );\r\n\r\n        // If a pool has been passed, then we are returning an item from that pool,\r\n        // using the normal distribution settings that were passed in\r\n        if (options.pool.length > 0) {\r\n            return this.normal_pool(options);\r\n        }\r\n\r\n        // The Marsaglia Polar method\r\n        var s, u, v, norm,\r\n            mean = options.mean,\r\n            dev = options.dev;\r\n\r\n        do {\r\n            // U and V are from the uniform distribution on (-1, 1)\r\n            u = this.random() * 2 - 1;\r\n            v = this.random() * 2 - 1;\r\n\r\n            s = u * u + v * v;\r\n        } while (s >= 1);\r\n\r\n        // Compute the standard normal variate\r\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\r\n\r\n        // Shape and scale\r\n        return dev * norm + mean;\r\n    };\r\n\r\n    Chance.prototype.normal_pool = function(options) {\r\n        var performanceCounter = 0;\r\n        do {\r\n            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\r\n            if (idx < options.pool.length && idx >= 0) {\r\n                return options.pool[idx];\r\n            } else {\r\n                performanceCounter++;\r\n            }\r\n        } while(performanceCounter < 100);\r\n\r\n        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\r\n    };\r\n\r\n    Chance.prototype.radio = function (options) {\r\n        // Initial Letter (Typically Designated by Side of Mississippi River)\r\n        options = initOptions(options, {side : \"?\"});\r\n        var fl = \"\";\r\n        switch (options.side.toLowerCase()) {\r\n        case \"east\":\r\n        case \"e\":\r\n            fl = \"W\";\r\n            break;\r\n        case \"west\":\r\n        case \"w\":\r\n            fl = \"K\";\r\n            break;\r\n        default:\r\n            fl = this.character({pool: \"KW\"});\r\n            break;\r\n        }\r\n\r\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\r\n                this.character({alpha: true, casing: \"upper\"}) +\r\n                this.character({alpha: true, casing: \"upper\"});\r\n    };\r\n\r\n    // Set the data as key and data or the data map\r\n    Chance.prototype.set = function (name, values) {\r\n        if (typeof name === \"string\") {\r\n            data[name] = values;\r\n        } else {\r\n            data = copyObject(name, data);\r\n        }\r\n    };\r\n\r\n    Chance.prototype.tv = function (options) {\r\n        return this.radio(options);\r\n    };\r\n\r\n    // ID number for Brazil companies\r\n    Chance.prototype.cnpj = function () {\r\n        var n = this.n(this.natural, 8, { max: 9 });\r\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\r\n        d1 = 11 - (d1 % 11);\r\n        if (d1>=10){\r\n            d1 = 0;\r\n        }\r\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\r\n        d2 = 11 - (d2 % 11);\r\n        if (d2>=10){\r\n            d2 = 0;\r\n        }\r\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\r\n    };\r\n\r\n    // -- End Miscellaneous --\r\n\r\n    Chance.prototype.mersenne_twister = function (seed) {\r\n        return new MersenneTwister(seed);\r\n    };\r\n\r\n    Chance.prototype.blueimp_md5 = function () {\r\n        return new BlueImpMD5();\r\n    };\r\n\r\n    // Mersenne Twister from https://gist.github.com/banksean/300494\r\n    /*\r\n       A C-program for MT19937, with initialization improved 2002/1/26.\r\n       Coded by Takuji Nishimura and Makoto Matsumoto.\r\n\r\n       Before using, initialize the state by using init_genrand(seed)\r\n       or init_by_array(init_key, key_length).\r\n\r\n       Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\r\n       All rights reserved.\r\n\r\n       Redistribution and use in source and binary forms, with or without\r\n       modification, are permitted provided that the following conditions\r\n       are met:\r\n\r\n       1. Redistributions of source code must retain the above copyright\r\n       notice, this list of conditions and the following disclaimer.\r\n\r\n       2. Redistributions in binary form must reproduce the above copyright\r\n       notice, this list of conditions and the following disclaimer in the\r\n       documentation and/or other materials provided with the distribution.\r\n\r\n       3. The names of its contributors may not be used to endorse or promote\r\n       products derived from this software without specific prior written\r\n       permission.\r\n\r\n       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n       \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n       A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n       CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n       PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n       PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n       LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\n       Any feedback is very welcome.\r\n       http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\r\n       email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\r\n     */\r\n    var MersenneTwister = function (seed) {\r\n        if (seed === undefined) {\r\n            // kept random number same size as time used previously to ensure no unexpected results downstream\r\n            seed = Math.floor(Math.random()*Math.pow(10,13));\r\n        }\r\n        /* Period parameters */\r\n        this.N = 624;\r\n        this.M = 397;\r\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\r\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\r\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\r\n\r\n        this.mt = new Array(this.N); /* the array for the state vector */\r\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\r\n\r\n        this.seed = seed;\r\n        this.init_genrand(seed);\r\n    };\r\n\r\n    /* initializes mt[N] with a seed */\r\n    MersenneTwister.prototype.init_genrand = function (s) {\r\n        this.mt[0] = s >>> 0;\r\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\r\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\r\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\r\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\r\n            /* In the previous versions, MSBs of the seed affect   */\r\n            /* only MSBs of the array mt[].                        */\r\n            /* 2002/01/09 modified by Makoto Matsumoto             */\r\n            this.mt[this.mti] >>>= 0;\r\n            /* for >32 bit machines */\r\n        }\r\n    };\r\n\r\n    /* initialize by an array with array-length */\r\n    /* init_key is the array for initializing keys */\r\n    /* key_length is its length */\r\n    /* slight change for C++, 2004/2/26 */\r\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\r\n        var i = 1, j = 0, k, s;\r\n        this.init_genrand(19650218);\r\n        k = (this.N > key_length ? this.N : key_length);\r\n        for (; k; k--) {\r\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\r\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\r\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n            i++;\r\n            j++;\r\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\r\n            if (j >= key_length) { j = 0; }\r\n        }\r\n        for (k = this.N - 1; k; k--) {\r\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\r\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\r\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n            i++;\r\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\r\n        }\r\n\r\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\r\n    };\r\n\r\n    /* generates a random number on [0,0xffffffff]-interval */\r\n    MersenneTwister.prototype.genrand_int32 = function () {\r\n        var y;\r\n        var mag01 = new Array(0x0, this.MATRIX_A);\r\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\r\n\r\n        if (this.mti >= this.N) { /* generate N words at one time */\r\n            var kk;\r\n\r\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\r\n                this.init_genrand(5489); /* a default initial seed is used */\r\n            }\r\n            for (kk = 0; kk < this.N - this.M; kk++) {\r\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\r\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n            }\r\n            for (;kk < this.N - 1; kk++) {\r\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\r\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n            }\r\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\r\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n\r\n            this.mti = 0;\r\n        }\r\n\r\n        y = this.mt[this.mti++];\r\n\r\n        /* Tempering */\r\n        y ^= (y >>> 11);\r\n        y ^= (y << 7) & 0x9d2c5680;\r\n        y ^= (y << 15) & 0xefc60000;\r\n        y ^= (y >>> 18);\r\n\r\n        return y >>> 0;\r\n    };\r\n\r\n    /* generates a random number on [0,0x7fffffff]-interval */\r\n    MersenneTwister.prototype.genrand_int31 = function () {\r\n        return (this.genrand_int32() >>> 1);\r\n    };\r\n\r\n    /* generates a random number on [0,1]-real-interval */\r\n    MersenneTwister.prototype.genrand_real1 = function () {\r\n        return this.genrand_int32() * (1.0 / 4294967295.0);\r\n        /* divided by 2^32-1 */\r\n    };\r\n\r\n    /* generates a random number on [0,1)-real-interval */\r\n    MersenneTwister.prototype.random = function () {\r\n        return this.genrand_int32() * (1.0 / 4294967296.0);\r\n        /* divided by 2^32 */\r\n    };\r\n\r\n    /* generates a random number on (0,1)-real-interval */\r\n    MersenneTwister.prototype.genrand_real3 = function () {\r\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\r\n        /* divided by 2^32 */\r\n    };\r\n\r\n    /* generates a random number on [0,1) with 53-bit resolution*/\r\n    MersenneTwister.prototype.genrand_res53 = function () {\r\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\r\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\r\n    };\r\n\r\n    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\r\n    var BlueImpMD5 = function () {};\r\n\r\n    BlueImpMD5.prototype.VERSION = '1.0.1';\r\n\r\n    /*\r\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n    * to work around bugs in some JS interpreters.\r\n    */\r\n    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    };\r\n\r\n    /*\r\n    * Bitwise rotate a 32-bit number to the left.\r\n    */\r\n    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\r\n        return (num << cnt) | (num >>> (32 - cnt));\r\n    };\r\n\r\n    /*\r\n    * These functions implement the five basic operations the algorithm uses.\r\n    */\r\n    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\r\n        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\r\n    };\r\n    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\r\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    };\r\n    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\r\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    };\r\n    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\r\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n    };\r\n    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\r\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    };\r\n\r\n    /*\r\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n    */\r\n    BlueImpMD5.prototype.binl_md5 = function (x, len) {\r\n        /* append padding */\r\n        x[len >> 5] |= 0x80 << (len % 32);\r\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n        var i, olda, oldb, oldc, oldd,\r\n            a =  1732584193,\r\n            b = -271733879,\r\n            c = -1732584194,\r\n            d =  271733878;\r\n\r\n        for (i = 0; i < x.length; i += 16) {\r\n            olda = a;\r\n            oldb = b;\r\n            oldc = c;\r\n            oldd = d;\r\n\r\n            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\r\n            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\r\n            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\r\n            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\r\n            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\r\n            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\r\n            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\r\n            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\r\n            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\r\n            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\r\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\r\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\r\n\r\n            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\r\n            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\r\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\r\n            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\r\n            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\r\n            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\r\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\r\n            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\r\n            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\r\n            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\r\n            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\r\n            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\r\n            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\r\n            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\r\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\r\n            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\r\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\r\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\r\n            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\r\n            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\r\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\r\n            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\r\n            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\r\n            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\r\n            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\r\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\r\n            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\r\n\r\n            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\r\n            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\r\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\r\n            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\r\n            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\r\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\r\n            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\r\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\r\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\r\n            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\r\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\r\n            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\r\n\r\n            a = this.safe_add(a, olda);\r\n            b = this.safe_add(b, oldb);\r\n            c = this.safe_add(c, oldc);\r\n            d = this.safe_add(d, oldd);\r\n        }\r\n        return [a, b, c, d];\r\n    };\r\n\r\n    /*\r\n    * Convert an array of little-endian words to a string\r\n    */\r\n    BlueImpMD5.prototype.binl2rstr = function (input) {\r\n        var i,\r\n            output = '';\r\n        for (i = 0; i < input.length * 32; i += 8) {\r\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /*\r\n    * Convert a raw string to an array of little-endian words\r\n    * Characters >255 have their high-byte silently ignored.\r\n    */\r\n    BlueImpMD5.prototype.rstr2binl = function (input) {\r\n        var i,\r\n            output = [];\r\n        output[(input.length >> 2) - 1] = undefined;\r\n        for (i = 0; i < output.length; i += 1) {\r\n            output[i] = 0;\r\n        }\r\n        for (i = 0; i < input.length * 8; i += 8) {\r\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /*\r\n    * Calculate the MD5 of a raw string\r\n    */\r\n    BlueImpMD5.prototype.rstr_md5 = function (s) {\r\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\r\n    };\r\n\r\n    /*\r\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\r\n    */\r\n    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\r\n        var i,\r\n            bkey = this.rstr2binl(key),\r\n            ipad = [],\r\n            opad = [],\r\n            hash;\r\n        ipad[15] = opad[15] = undefined;\r\n        if (bkey.length > 16) {\r\n            bkey = this.binl_md5(bkey, key.length * 8);\r\n        }\r\n        for (i = 0; i < 16; i += 1) {\r\n            ipad[i] = bkey[i] ^ 0x36363636;\r\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n        }\r\n        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\r\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\r\n    };\r\n\r\n    /*\r\n    * Convert a raw string to a hex string\r\n    */\r\n    BlueImpMD5.prototype.rstr2hex = function (input) {\r\n        var hex_tab = '0123456789abcdef',\r\n            output = '',\r\n            x,\r\n            i;\r\n        for (i = 0; i < input.length; i += 1) {\r\n            x = input.charCodeAt(i);\r\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\r\n                hex_tab.charAt(x & 0x0F);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /*\r\n    * Encode a string as utf-8\r\n    */\r\n    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\r\n        return unescape(encodeURIComponent(input));\r\n    };\r\n\r\n    /*\r\n    * Take string arguments and return either raw or hex encoded strings\r\n    */\r\n    BlueImpMD5.prototype.raw_md5 = function (s) {\r\n        return this.rstr_md5(this.str2rstr_utf8(s));\r\n    };\r\n    BlueImpMD5.prototype.hex_md5 = function (s) {\r\n        return this.rstr2hex(this.raw_md5(s));\r\n    };\r\n    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\r\n        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\r\n    };\r\n    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\r\n        return this.rstr2hex(this.raw_hmac_md5(k, d));\r\n    };\r\n\r\n    BlueImpMD5.prototype.md5 = function (string, key, raw) {\r\n        if (!key) {\r\n            if (!raw) {\r\n                return this.hex_md5(string);\r\n            }\r\n\r\n            return this.raw_md5(string);\r\n        }\r\n\r\n        if (!raw) {\r\n            return this.hex_hmac_md5(key, string);\r\n        }\r\n\r\n        return this.raw_hmac_md5(key, string);\r\n    };\r\n\r\n    // CommonJS module\r\n    if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = Chance;\r\n        }\r\n        exports.Chance = Chance;\r\n    }\r\n\r\n    // Register as an anonymous AMD module\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([], function () {\r\n            return Chance;\r\n        });\r\n    }\r\n\r\n    // if there is a importsScrips object define chance for worker\r\n    // allows worker to use full Chance functionality with seed\r\n    if (typeof importScripts !== 'undefined') {\r\n        chance = new Chance();\r\n        self.Chance = Chance;\r\n    }\r\n\r\n    // If there is a window object, that at least has a document property,\r\n    // instantiate and define chance on the window\r\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\r\n        window.Chance = Chance;\r\n        window.chance = new Chance();\r\n    }\r\n})();","PluginTemplate":"{\r\n\tfilename: \"c3runtime/chance.js\",\r\n\ttype: \"inline-script\"\r\n}","Bytes":"","Extention":".js"}}}